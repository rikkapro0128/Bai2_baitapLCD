

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jun 04 21:49:09 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287                           
   288                           	psect	strings
   289  0003                     __pstrings:
   290  0003                     stringtab:
   291  0003                     __stringtab:
   292  0003                     stringcode:	
   293                           ;	String table - string pointers are 1 byte each
   294                           
   295  0003                     stringdir:
   296  0003  3000               	movlw	high stringdir
   297  0004  008A               	movwf	10
   298  0005  0804               	movf	4,w
   299  0006  0A84               	incf	4,f
   300  0007  0782               	addwf	2,f
   301  0008                     __stringbase:
   302  0008  3400               	retlw	0
   303  0009                     __end_of__stringtab:
   304  0009                     main@your_live:
   305  0009  344E               	retlw	78
   306  000A  346F               	retlw	111
   307  000B  3469               	retlw	105
   308  000C  3453               	retlw	83
   309  000D  3469               	retlw	105
   310  000E  346E               	retlw	110
   311  000F  3468               	retlw	104
   312  0010  343A               	retlw	58
   313  0011  3441               	retlw	65
   314  0012  346E               	retlw	110
   315  0013  3420               	retlw	32
   316  0014  3447               	retlw	71
   317  0015  3469               	retlw	105
   318  0016  3461               	retlw	97
   319  0017  346E               	retlw	110
   320  0018  3467               	retlw	103
   321  0019  3400               	retlw	0
   322  001A                     __end_ofmain@your_live:
   323  001A                     main@your_born:
   324  001A  344E               	retlw	78
   325  001B  3467               	retlw	103
   326  001C  3461               	retlw	97
   327  001D  3479               	retlw	121
   328  001E  3453               	retlw	83
   329  001F  3469               	retlw	105
   330  0020  346E               	retlw	110
   331  0021  3468               	retlw	104
   332  0022  343A               	retlw	58
   333  0023  3430               	retlw	48
   334  0024  3435               	retlw	53
   335  0025  342F               	retlw	47
   336  0026  3432               	retlw	50
   337  0027  3430               	retlw	48
   338  0028  3430               	retlw	48
   339  0029  3431               	retlw	49
   340  002A  3400               	retlw	0
   341  002B                     __end_ofmain@your_born:
   342  002B                     main@your_name:
   343  002B  3450               	retlw	80
   344  002C  3468               	retlw	104
   345  002D  3461               	retlw	97
   346  002E  346D               	retlw	109
   347  002F  3420               	retlw	32
   348  0030  3454               	retlw	84
   349  0031  342E               	retlw	46
   350  0032  3454               	retlw	84
   351  0033  3468               	retlw	104
   352  0034  3475               	retlw	117
   353  0035  3479               	retlw	121
   354  0036  3420               	retlw	32
   355  0037  344C               	retlw	76
   356  0038  3469               	retlw	105
   357  0039  346E               	retlw	110
   358  003A  3468               	retlw	104
   359  003B  3400               	retlw	0
   360  003C                     __end_ofmain@your_name:
   361  003C                     main@MSSV:
   362  003C  344D               	retlw	77
   363  003D  3453               	retlw	83
   364  003E  3453               	retlw	83
   365  003F  3456               	retlw	86
   366  0040  343A               	retlw	58
   367  0041  3431               	retlw	49
   368  0042  3439               	retlw	57
   369  0043  3434               	retlw	52
   370  0044  3437               	retlw	55
   371  0045  3431               	retlw	49
   372  0046  3433               	retlw	51
   373  0047  3430               	retlw	48
   374  0048  3431               	retlw	49
   375  0049  3400               	retlw	0
   376  004A                     __end_ofmain@MSSV:
   377  004A                     main@HKTT:
   378  004A  3448               	retlw	72
   379  004B  344B               	retlw	75
   380  004C  3454               	retlw	84
   381  004D  3454               	retlw	84
   382  004E  343A               	retlw	58
   383  004F  3420               	retlw	32
   384  0050  3451               	retlw	81
   385  0051  3475               	retlw	117
   386  0052  3461               	retlw	97
   387  0053  346E               	retlw	110
   388  0054  3420               	retlw	32
   389  0055  3431               	retlw	49
   390  0056  3430               	retlw	48
   391  0057  3400               	retlw	0
   392  0058                     __end_ofmain@HKTT:
   393  0058                     main@class:
   394  0058  344C               	retlw	76
   395  0059  346F               	retlw	111
   396  005A  3470               	retlw	112
   397  005B  343A               	retlw	58
   398  005C  3420               	retlw	32
   399  005D  3444               	retlw	68
   400  005E  3454               	retlw	84
   401  005F  3456               	retlw	86
   402  0060  3454               	retlw	84
   403  0061  3431               	retlw	49
   404  0062  3435               	retlw	53
   405  0063  3441               	retlw	65
   406  0064  3400               	retlw	0
   407  0065                     __end_ofmain@class:
   408  0044                     _RD4	set	68
   409  0045                     _RD5	set	69
   410  0046                     _RD6	set	70
   411  0047                     _RD7	set	71
   412  0043                     _RD3	set	67
   413  0041                     _RD1	set	65
   414  0042                     _RD2	set	66
   415  0442                     _TRISD2	set	1090
   416  0441                     _TRISD1	set	1089
   417  0443                     _TRISD3	set	1091
   418  0447                     _TRISD7	set	1095
   419  0446                     _TRISD6	set	1094
   420  0445                     _TRISD5	set	1093
   421  0444                     _TRISD4	set	1092
   422                           
   423                           	psect	cinit
   424  07FC                     start_initialization:	
   425                           ; #config settings
   426                           
   427  07FC                     __initialization:
   428  07FC                     end_of_initialization:	
   429                           ;End of C runtime variable initialization code
   430                           
   431  07FC                     __end_of__initialization:
   432  07FC  0183               	clrf	3
   433  07FD  120A  118A  2EC4   	ljmp	_main	;jump to C main() function
   434                           
   435                           	psect	cstackCOMMON
   436  0070                     __pcstackCOMMON:
   437  0070                     ?_lcd_init:
   438  0070                     ?_lcd_putc:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_lcd_puts:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_main:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_lcd_busy:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ??_lcd_busy:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_lcd_put_nibble:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ??_lcd_put_nibble:	
   457                           ; 1 bytes @ 0x0
   458                           
   459                           
   460                           ; 1 bytes @ 0x0
   461  0070                     	ds	1
   462  0071                     lcd_busy@busy:
   463  0071                     lcd_put_nibble@b:	
   464                           ; 1 bytes @ 0x1
   465                           
   466                           
   467                           ; 1 bytes @ 0x1
   468  0071                     	ds	1
   469  0072                     lcd_put_nibble@temp:
   470                           
   471                           ; 1 bytes @ 0x2
   472  0072                     	ds	1
   473  0073                     ?_lcd_put_byte:
   474  0073                     lcd_put_byte@b:	
   475                           ; 1 bytes @ 0x3
   476                           
   477                           
   478                           ; 1 bytes @ 0x3
   479  0073                     	ds	1
   480  0074                     ??_lcd_put_byte:
   481                           
   482                           ; 1 bytes @ 0x4
   483  0074                     	ds	1
   484  0075                     lcd_put_byte@rs:
   485                           
   486                           ; 1 bytes @ 0x5
   487  0075                     	ds	1
   488  0076                     ??_lcd_init:
   489  0076                     ?_lcd_gotoxy:	
   490                           ; 1 bytes @ 0x6
   491                           
   492  0076                     lcd_gotoxy@row:	
   493                           ; 1 bytes @ 0x6
   494                           
   495                           
   496                           ; 1 bytes @ 0x6
   497  0076                     	ds	1
   498  0077                     ??_lcd_gotoxy:
   499                           
   500                           ; 1 bytes @ 0x7
   501  0077                     	ds	1
   502  0078                     lcd_gotoxy@col:
   503                           
   504                           ; 1 bytes @ 0x8
   505  0078                     	ds	1
   506  0079                     lcd_gotoxy@address:
   507                           
   508                           ; 1 bytes @ 0x9
   509  0079                     	ds	1
   510  007A                     ??_lcd_putc:
   511                           
   512                           ; 1 bytes @ 0xA
   513  007A                     	ds	2
   514  007C                     lcd_putc@c:
   515                           
   516                           ; 1 bytes @ 0xC
   517  007C                     	ds	1
   518  007D                     ??_lcd_puts:
   519                           
   520                           ; 1 bytes @ 0xD
   521  007D                     	ds	1
   522                           
   523                           	psect	cstackBANK0
   524  0020                     __pcstackBANK0:
   525  0020                     lcd_puts@s:
   526                           
   527                           ; 1 bytes @ 0x0
   528  0020                     	ds	1
   529  0021                     ??_main:
   530                           
   531                           ; 1 bytes @ 0x1
   532  0021                     	ds	3
   533                           
   534                           	psect	maintext
   535  06C4                     __pmaintext:	
   536 ;;
   537 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   538 ;;
   539 ;; *************** function _main *****************
   540 ;; Defined at:
   541 ;;		line 25 in file "newmain.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : B00/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       3       0       0       0
   558 ;;      Totals:         0       3       0       0       0
   559 ;;Total ram usage:        3 bytes
   560 ;; Hardware stack levels required when called: 5
   561 ;; This function calls:
   562 ;;		_lcd_gotoxy
   563 ;;		_lcd_init
   564 ;;		_lcd_putc
   565 ;;		_lcd_puts
   566 ;; This function is called by:
   567 ;;		Startup code after reset
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function _main
   573  06C4                     _main:
   574  06C4                     l1134:	
   575                           ;incstack = 0
   576                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   577                           
   578                           
   579                           ;newmain.c: 26:     const char your_name[] = "Pham T.Thuy Linh";;newmain.c: 27:     cons
      +                          t char your_born[] = "NgaySinh:05/2001";;newmain.c: 28:     const char your_live[] = "No
      +                          iSinh:An Giang";;newmain.c: 29:     const char HKTT[] = "HKTT: Quan 10";;newmain.c: 30: 
      +                              const char class[] = "Lop: DTVT15A";;newmain.c: 31:     const char MSSV[] = "MSSV:19
      +                          471301";;newmain.c: 32:     lcd_init();
   580  06C4  120A  118A  2759  120A  118A  	fcall	_lcd_init
   581  06C9                     l1136:
   582                           
   583                           ;newmain.c: 33:     lcd_putc('\f');
   584  06C9  300C               	movlw	12
   585  06CA  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   586  06CF                     l1138:
   587                           
   588                           ;newmain.c: 34:     lcd_gotoxy(0, 0);
   589  06CF  01F6               	clrf	lcd_gotoxy@row
   590  06D0  3000               	movlw	0
   591  06D1  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   592                           
   593                           ;newmain.c: 35:     lcd_puts(your_name);
   594  06D6  3023               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   595  06D7  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   596  06DC                     l1140:
   597                           
   598                           ;newmain.c: 36:     lcd_gotoxy(0, 1);
   599  06DC  01F6               	clrf	lcd_gotoxy@row
   600  06DD  0AF6               	incf	lcd_gotoxy@row,f
   601  06DE  3000               	movlw	0
   602  06DF  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   603  06E4                     l1142:
   604                           
   605                           ;newmain.c: 37:     lcd_puts(MSSV);
   606  06E4  3034               	movlw	(low ((main@MSSV-__stringbase)| (0+32768)))& (0+255)
   607  06E5  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   608  06EA                     l1144:
   609                           
   610                           ;newmain.c: 38:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   611  06EA  300B               	movlw	11
   612  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   613  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   614  06ED  00A3               	movwf	??_main+2
   615  06EE  3026               	movlw	38
   616  06EF  00A2               	movwf	??_main+1
   617  06F0  305D               	movlw	93
   618  06F1  00A1               	movwf	??_main
   619  06F2                     u587:
   620  06F2  0BA1               	decfsz	??_main,f
   621  06F3  2EF2               	goto	u587
   622  06F4  0BA2               	decfsz	??_main+1,f
   623  06F5  2EF2               	goto	u587
   624  06F6  0BA3               	decfsz	??_main+2,f
   625  06F7  2EF2               	goto	u587
   626  06F8                     l1146:
   627                           
   628                           ;newmain.c: 39:     lcd_putc('\f');
   629  06F8  300C               	movlw	12
   630  06F9  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   631  06FE                     l1148:
   632                           
   633                           ;newmain.c: 40:     lcd_gotoxy(0, 0);
   634  06FE  01F6               	clrf	lcd_gotoxy@row
   635  06FF  3000               	movlw	0
   636  0700  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   637  0705                     l1150:
   638                           
   639                           ;newmain.c: 41:     lcd_puts(your_born);
   640  0705  3012               	movlw	(low ((main@your_born-__stringbase)| (0+32768)))& (0+255)
   641  0706  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   642  070B                     l1152:
   643                           
   644                           ;newmain.c: 42:     lcd_gotoxy(0, 1);
   645  070B  01F6               	clrf	lcd_gotoxy@row
   646  070C  0AF6               	incf	lcd_gotoxy@row,f
   647  070D  3000               	movlw	0
   648  070E  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   649  0713                     l1154:
   650                           
   651                           ;newmain.c: 43:     lcd_puts(your_live);
   652  0713  3001               	movlw	(low ((main@your_live-__stringbase)| (0+32768)))& (0+255)
   653  0714  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   654  0719                     l1156:
   655                           
   656                           ;newmain.c: 44:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   657  0719  300B               	movlw	11
   658  071A  1283               	bcf	3,5	;RP0=0, select bank0
   659  071B  1303               	bcf	3,6	;RP1=0, select bank0
   660  071C  00A3               	movwf	??_main+2
   661  071D  3026               	movlw	38
   662  071E  00A2               	movwf	??_main+1
   663  071F  305D               	movlw	93
   664  0720  00A1               	movwf	??_main
   665  0721                     u597:
   666  0721  0BA1               	decfsz	??_main,f
   667  0722  2F21               	goto	u597
   668  0723  0BA2               	decfsz	??_main+1,f
   669  0724  2F21               	goto	u597
   670  0725  0BA3               	decfsz	??_main+2,f
   671  0726  2F21               	goto	u597
   672  0727                     l1158:
   673                           
   674                           ;newmain.c: 45:     lcd_putc('\f');
   675  0727  300C               	movlw	12
   676  0728  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   677                           
   678                           ;newmain.c: 46:     lcd_gotoxy(0, 0);
   679  072D  01F6               	clrf	lcd_gotoxy@row
   680  072E  3000               	movlw	0
   681  072F  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   682  0734                     l1160:
   683                           
   684                           ;newmain.c: 47:     lcd_puts(HKTT);
   685  0734  3042               	movlw	(low ((main@HKTT-__stringbase)| (0+32768)))& (0+255)
   686  0735  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   687  073A                     l1162:
   688                           
   689                           ;newmain.c: 48:     lcd_gotoxy(0, 1);
   690  073A  01F6               	clrf	lcd_gotoxy@row
   691  073B  0AF6               	incf	lcd_gotoxy@row,f
   692  073C  3000               	movlw	0
   693  073D  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   694                           
   695                           ;newmain.c: 49:     lcd_puts(class);
   696  0742  3050               	movlw	(low ((main@class-__stringbase)| (0+32768)))& (0+255)
   697  0743  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   698  0748                     l1164:
   699                           
   700                           ;newmain.c: 50:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   701  0748  300B               	movlw	11
   702  0749  1283               	bcf	3,5	;RP0=0, select bank0
   703  074A  1303               	bcf	3,6	;RP1=0, select bank0
   704  074B  00A3               	movwf	??_main+2
   705  074C  3026               	movlw	38
   706  074D  00A2               	movwf	??_main+1
   707  074E  305D               	movlw	93
   708  074F  00A1               	movwf	??_main
   709  0750                     u607:
   710  0750  0BA1               	decfsz	??_main,f
   711  0751  2F50               	goto	u607
   712  0752  0BA2               	decfsz	??_main+1,f
   713  0753  2F50               	goto	u607
   714  0754  0BA3               	decfsz	??_main+2,f
   715  0755  2F50               	goto	u607
   716  0756                     l27:
   717  0756  120A  118A  2800   	ljmp	start
   718  0759                     __end_of_main:
   719                           
   720                           	psect	text1
   721  0572                     __ptext1:	
   722 ;; *************** function _lcd_puts *****************
   723 ;; Defined at:
   724 ;;		line 224 in file "lcd.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  s               1    wreg     PTR const unsigned char 
   727 ;;		 -> main@class(13), main@HKTT(14), main@your_live(17), main@your_born(17), 
   728 ;;		 -> main@MSSV(14), main@your_name(17), 
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  s               1    0[BANK0 ] PTR const unsigned char 
   731 ;;		 -> main@class(13), main@HKTT(14), main@your_live(17), main@your_born(17), 
   732 ;;		 -> main@MSSV(14), main@your_name(17), 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   742 ;;      Params:         0       0       0       0       0
   743 ;;      Locals:         0       1       0       0       0
   744 ;;      Temps:          1       0       0       0       0
   745 ;;      Totals:         1       1       0       0       0
   746 ;;Total ram usage:        2 bytes
   747 ;; Hardware stack levels used: 1
   748 ;; Hardware stack levels required when called: 4
   749 ;; This function calls:
   750 ;;		_lcd_putc
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           
   757                           ;psect for function _lcd_puts
   758  0572                     _lcd_puts:
   759                           
   760                           ;incstack = 0
   761                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   762                           ;lcd_puts@s stored from wreg
   763  0572  1283               	bcf	3,5	;RP0=0, select bank0
   764  0573  1303               	bcf	3,6	;RP1=0, select bank0
   765  0574  00A0               	movwf	lcd_puts@s
   766  0575                     l1122:
   767                           
   768                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   769  0575  2D88               	goto	l1128
   770  0576                     l1124:
   771                           
   772                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   773  0576  0820               	movf	lcd_puts@s,w
   774  0577  0084               	movwf	4
   775  0578  120A  118A  2003  120A  118A  	fcall	stringdir
   776  057D  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   777  0582                     l1126:
   778  0582  3001               	movlw	1
   779  0583  00FD               	movwf	??_lcd_puts
   780  0584  087D               	movf	??_lcd_puts,w
   781  0585  1283               	bcf	3,5	;RP0=0, select bank0
   782  0586  1303               	bcf	3,6	;RP1=0, select bank0
   783  0587  07A0               	addwf	lcd_puts@s,f
   784  0588                     l1128:
   785                           
   786                           ;lcd.c: 229:  while(*s)
   787  0588  0820               	movf	lcd_puts@s,w
   788  0589  0084               	movwf	4
   789  058A  120A  118A  2003  120A  118A  	fcall	stringdir
   790  058F  3A00               	xorlw	0
   791  0590  1D03               	skipz
   792  0591  2D93               	goto	u541
   793  0592  2D94               	goto	u540
   794  0593                     u541:
   795  0593  2D76               	goto	l1124
   796  0594                     u540:
   797  0594                     l105:
   798  0594  0008               	return
   799  0595                     __end_of_lcd_puts:
   800                           
   801                           	psect	text2
   802  0668                     __ptext2:	
   803 ;; *************** function _lcd_putc *****************
   804 ;; Defined at:
   805 ;;		line 190 in file "lcd.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  c               1    wreg     unsigned char 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  c               1   12[COMMON] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         0       0       0       0       0
   820 ;;      Locals:         1       0       0       0       0
   821 ;;      Temps:          2       0       0       0       0
   822 ;;      Totals:         3       0       0       0       0
   823 ;;Total ram usage:        3 bytes
   824 ;; Hardware stack levels used: 1
   825 ;; Hardware stack levels required when called: 3
   826 ;; This function calls:
   827 ;;		_lcd_busy
   828 ;;		_lcd_gotoxy
   829 ;;		_lcd_put_byte
   830 ;; This function is called by:
   831 ;;		_main
   832 ;;		_lcd_puts
   833 ;;		_lcd_String_Delay
   834 ;;		_putch
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function _lcd_putc
   840  0668                     _lcd_putc:
   841                           
   842                           ;incstack = 0
   843                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   844                           ;lcd_putc@c stored from wreg
   845  0668  00FC               	movwf	lcd_putc@c
   846  0669                     l1062:
   847                           
   848                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   849  0669  2EB0               	goto	l1078
   850  066A                     l1064:
   851                           
   852                           ;lcd.c: 198:    lcd_put_byte(0,1);
   853  066A  01F3               	clrf	lcd_put_byte@b
   854  066B  0AF3               	incf	lcd_put_byte@b,f
   855  066C  3000               	movlw	0
   856  066D  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
   857  0672                     l1066:	
   858                           ;lcd.c: 199:    while(lcd_busy());
   859                           
   860  0672  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
   861  0677  3A00               	xorlw	0
   862  0678  1D03               	skipz
   863  0679  2E7B               	goto	u461
   864  067A  2E7C               	goto	u460
   865  067B                     u461:
   866  067B  2E72               	goto	l1066
   867  067C                     u460:
   868  067C  2EC3               	goto	l99
   869  067D                     l1068:
   870                           
   871                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   872  067D  01F6               	clrf	lcd_gotoxy@row
   873  067E  0AF6               	incf	lcd_gotoxy@row,f
   874  067F  3000               	movlw	0
   875  0680  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   876                           
   877                           ;lcd.c: 203:    break;
   878  0685  2EC3               	goto	l99
   879  0686                     l1070:
   880                           
   881                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   882  0686  3010               	movlw	16
   883  0687  00FA               	movwf	??_lcd_putc
   884  0688  087A               	movf	??_lcd_putc,w
   885  0689  00F3               	movwf	lcd_put_byte@b
   886  068A  3000               	movlw	0
   887  068B  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
   888  0690                     l1072:	
   889                           ;lcd.c: 206:    while(lcd_busy());
   890                           
   891  0690  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
   892  0695  3A00               	xorlw	0
   893  0696  1D03               	skipz
   894  0697  2E99               	goto	u471
   895  0698  2E9A               	goto	u470
   896  0699                     u471:
   897  0699  2E90               	goto	l1072
   898  069A                     u470:
   899  069A  2EC3               	goto	l99
   900  069B                     l1074:
   901                           
   902                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   903  069B  087C               	movf	lcd_putc@c,w
   904  069C  00FA               	movwf	??_lcd_putc
   905  069D  087A               	movf	??_lcd_putc,w
   906  069E  00F3               	movwf	lcd_put_byte@b
   907  069F  3001               	movlw	1
   908  06A0  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
   909  06A5                     l1076:	
   910                           ;lcd.c: 212:     while(lcd_busy());
   911                           
   912  06A5  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
   913  06AA  3A00               	xorlw	0
   914  06AB  1D03               	skipz
   915  06AC  2EAE               	goto	u481
   916  06AD  2EAF               	goto	u480
   917  06AE                     u481:
   918  06AE  2EA5               	goto	l1076
   919  06AF                     u480:
   920  06AF  2EC3               	goto	l99
   921  06B0                     l1078:
   922  06B0  087C               	movf	lcd_putc@c,w
   923  06B1  00FA               	movwf	??_lcd_putc
   924  06B2  01FB               	clrf	??_lcd_putc+1
   925                           
   926                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   927                           ; Switch size 1, requested type "simple"
   928                           ; Number of cases is 1, Range of values is 0 to 0
   929                           ; switch strategies available:
   930                           ; Name         Instructions Cycles
   931                           ; simple_byte            4     3 (average)
   932                           ; direct_byte           11     8 (fixed)
   933                           ; jumptable            260     6 (fixed)
   934                           ;	Chosen strategy is simple_byte
   935  06B3  087B               	movf	??_lcd_putc+1,w
   936  06B4  3A00               	xorlw	0	; case 0
   937  06B5  1903               	skipnz
   938  06B6  2EB8               	goto	l1216
   939  06B7  2E9B               	goto	l1074
   940  06B8                     l1216:
   941                           
   942                           ; Switch size 1, requested type "simple"
   943                           ; Number of cases is 3, Range of values is 8 to 12
   944                           ; switch strategies available:
   945                           ; Name         Instructions Cycles
   946                           ; simple_byte           10     6 (average)
   947                           ; direct_byte           26    11 (fixed)
   948                           ; jumptable            263     9 (fixed)
   949                           ;	Chosen strategy is simple_byte
   950  06B8  087A               	movf	??_lcd_putc,w
   951  06B9  3A08               	xorlw	8	; case 8
   952  06BA  1903               	skipnz
   953  06BB  2E86               	goto	l1070
   954  06BC  3A02               	xorlw	2	; case 10
   955  06BD  1903               	skipnz
   956  06BE  2E7D               	goto	l1068
   957  06BF  3A06               	xorlw	6	; case 12
   958  06C0  1903               	skipnz
   959  06C1  2E6A               	goto	l1064
   960  06C2  2E9B               	goto	l1074
   961  06C3                     l99:
   962  06C3  0008               	return
   963  06C4                     __end_of_lcd_putc:
   964                           
   965                           	psect	text3
   966  0595                     __ptext3:	
   967 ;; *************** function _lcd_gotoxy *****************
   968 ;; Defined at:
   969 ;;		line 167 in file "lcd.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  col             1    wreg     unsigned char 
   972 ;;  row             1    6[COMMON] unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  col             1    8[COMMON] unsigned char 
   975 ;;  address         1    9[COMMON] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, pclath, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         1       0       0       0       0
   986 ;;      Locals:         2       0       0       0       0
   987 ;;      Temps:          1       0       0       0       0
   988 ;;      Totals:         4       0       0       0       0
   989 ;;Total ram usage:        4 bytes
   990 ;; Hardware stack levels used: 1
   991 ;; Hardware stack levels required when called: 2
   992 ;; This function calls:
   993 ;;		_lcd_busy
   994 ;;		_lcd_put_byte
   995 ;; This function is called by:
   996 ;;		_main
   997 ;;		_lcd_putc
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           
  1002                           ;psect for function _lcd_gotoxy
  1003  0595                     _lcd_gotoxy:
  1004                           
  1005                           ;incstack = 0
  1006                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1007                           ;lcd_gotoxy@col stored from wreg
  1008  0595  00F8               	movwf	lcd_gotoxy@col
  1009  0596                     l1050:
  1010                           
  1011                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1012  0596  0876               	movf	lcd_gotoxy@row,w
  1013  0597  1903               	btfsc	3,2
  1014  0598  2D9A               	goto	u441
  1015  0599  2D9B               	goto	u440
  1016  059A                     u441:
  1017  059A  2DA0               	goto	l1054
  1018  059B                     u440:
  1019  059B                     l1052:
  1020                           
  1021                           ;lcd.c: 174:   address=0x40;
  1022  059B  3040               	movlw	64
  1023  059C  00F7               	movwf	??_lcd_gotoxy
  1024  059D  0877               	movf	??_lcd_gotoxy,w
  1025  059E  00F9               	movwf	lcd_gotoxy@address
  1026  059F  2DA1               	goto	l1056
  1027  05A0                     l1054:
  1028                           
  1029                           ;lcd.c: 176:   address=0;
  1030  05A0  01F9               	clrf	lcd_gotoxy@address
  1031  05A1                     l1056:
  1032                           
  1033                           ;lcd.c: 178:  address += col;
  1034  05A1  0878               	movf	lcd_gotoxy@col,w
  1035  05A2  00F7               	movwf	??_lcd_gotoxy
  1036  05A3  0877               	movf	??_lcd_gotoxy,w
  1037  05A4  07F9               	addwf	lcd_gotoxy@address,f
  1038  05A5                     l1058:
  1039                           
  1040                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1041  05A5  0879               	movf	lcd_gotoxy@address,w
  1042  05A6  3880               	iorlw	128
  1043  05A7  00F7               	movwf	??_lcd_gotoxy
  1044  05A8  0877               	movf	??_lcd_gotoxy,w
  1045  05A9  00F3               	movwf	lcd_put_byte@b
  1046  05AA  3000               	movlw	0
  1047  05AB  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1048  05B0                     l1060:	
  1049                           ;lcd.c: 181:  while(lcd_busy());
  1050                           
  1051  05B0  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1052  05B5  3A00               	xorlw	0
  1053  05B6  1D03               	skipz
  1054  05B7  2DB9               	goto	u451
  1055  05B8  2DBA               	goto	u450
  1056  05B9                     u451:
  1057  05B9  2DB0               	goto	l1060
  1058  05BA                     u450:
  1059  05BA                     l81:
  1060  05BA  0008               	return
  1061  05BB                     __end_of_lcd_gotoxy:
  1062                           
  1063                           	psect	text4
  1064  0759                     __ptext4:	
  1065 ;; *************** function _lcd_init *****************
  1066 ;; Defined at:
  1067 ;;		line 241 in file "lcd.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  i               1    0        unsigned char 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, pclath, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1081 ;;      Params:         0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0
  1083 ;;      Temps:          2       0       0       0       0
  1084 ;;      Totals:         2       0       0       0       0
  1085 ;;Total ram usage:        2 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 2
  1088 ;; This function calls:
  1089 ;;		_lcd_busy
  1090 ;;		_lcd_put_byte
  1091 ;;		_lcd_put_nibble
  1092 ;; This function is called by:
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           
  1098                           ;psect for function _lcd_init
  1099  0759                     _lcd_init:
  1100  0759                     l1084:	
  1101                           ;incstack = 0
  1102                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1103                           
  1104                           
  1105                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1106  0759  1683               	bsf	3,5	;RP0=1, select bank1
  1107  075A  1303               	bcf	3,6	;RP1=0, select bank1
  1108  075B  1188               	bcf	8,3	;volatile
  1109                           
  1110                           ;lcd.c: 248:  TRISD1 = 0;
  1111  075C  1088               	bcf	8,1	;volatile
  1112                           
  1113                           ;lcd.c: 249:  TRISD2 = 0;
  1114  075D  1108               	bcf	8,2	;volatile
  1115                           
  1116                           ;lcd.c: 250:  TRISD4 = 0;
  1117  075E  1208               	bcf	8,4	;volatile
  1118                           
  1119                           ;lcd.c: 251:  TRISD5 = 0;
  1120  075F  1288               	bcf	8,5	;volatile
  1121                           
  1122                           ;lcd.c: 252:  TRISD6 = 0;
  1123  0760  1308               	bcf	8,6	;volatile
  1124                           
  1125                           ;lcd.c: 253:  TRISD7 = 0;
  1126  0761  1388               	bcf	8,7	;volatile
  1127  0762                     l1086:
  1128                           
  1129                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1130  0762  3014               	movlw	20
  1131  0763  00F7               	movwf	??_lcd_init+1
  1132  0764  3079               	movlw	121
  1133  0765  00F6               	movwf	??_lcd_init
  1134  0766                     u617:
  1135  0766  0BF6               	decfsz	??_lcd_init,f
  1136  0767  2F66               	goto	u617
  1137  0768  0BF7               	decfsz	??_lcd_init+1,f
  1138  0769  2F66               	goto	u617
  1139  076A  2F6B               	nop2
  1140  076B                     l1088:
  1141                           
  1142                           ;lcd.c: 257:  RD1 = 0;
  1143  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1144  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1145  076D  1088               	bcf	8,1	;volatile
  1146  076E                     l1090:
  1147                           
  1148                           ;lcd.c: 258:  RD2 = 0;
  1149  076E  1108               	bcf	8,2	;volatile
  1150  076F                     l1092:
  1151                           
  1152                           ;lcd.c: 259:  RD3 = 0;
  1153  076F  1188               	bcf	8,3	;volatile
  1154  0770                     l1094:
  1155                           
  1156                           ;lcd.c: 261:  lcd_put_nibble(3);
  1157  0770  3003               	movlw	3
  1158  0771  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1159  0776                     l1096:
  1160                           
  1161                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1162  0776  300D               	movlw	13
  1163  0777  00F7               	movwf	??_lcd_init+1
  1164  0778  30FB               	movlw	251
  1165  0779  00F6               	movwf	??_lcd_init
  1166  077A                     u627:
  1167  077A  0BF6               	decfsz	??_lcd_init,f
  1168  077B  2F7A               	goto	u627
  1169  077C  0BF7               	decfsz	??_lcd_init+1,f
  1170  077D  2F7A               	goto	u627
  1171  077E  2F7F               	nop2
  1172                           
  1173                           ;lcd.c: 263:  lcd_put_nibble(3);
  1174  077F  3003               	movlw	3
  1175  0780  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1176  0785                     l1098:
  1177                           
  1178                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1179  0785  300D               	movlw	13
  1180  0786  00F7               	movwf	??_lcd_init+1
  1181  0787  30FB               	movlw	251
  1182  0788  00F6               	movwf	??_lcd_init
  1183  0789                     u637:
  1184  0789  0BF6               	decfsz	??_lcd_init,f
  1185  078A  2F89               	goto	u637
  1186  078B  0BF7               	decfsz	??_lcd_init+1,f
  1187  078C  2F89               	goto	u637
  1188  078D  2F8E               	nop2
  1189  078E                     l1100:
  1190                           
  1191                           ;lcd.c: 265:  lcd_put_nibble(3);
  1192  078E  3003               	movlw	3
  1193  078F  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1194                           
  1195                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1196  0794  300D               	movlw	13
  1197  0795  00F7               	movwf	??_lcd_init+1
  1198  0796  30FB               	movlw	251
  1199  0797  00F6               	movwf	??_lcd_init
  1200  0798                     u647:
  1201  0798  0BF6               	decfsz	??_lcd_init,f
  1202  0799  2F98               	goto	u647
  1203  079A  0BF7               	decfsz	??_lcd_init+1,f
  1204  079B  2F98               	goto	u647
  1205  079C  2F9D               	nop2
  1206  079D                     l1102:
  1207                           
  1208                           ;lcd.c: 268:  lcd_put_nibble(2);
  1209  079D  3002               	movlw	2
  1210  079E  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1211  07A3                     l1104:	
  1212                           ;lcd.c: 269:  while(lcd_busy());
  1213                           
  1214  07A3  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1215  07A8  3A00               	xorlw	0
  1216  07A9  1D03               	skipz
  1217  07AA  2FAC               	goto	u491
  1218  07AB  2FAD               	goto	u490
  1219  07AC                     u491:
  1220  07AC  2FA3               	goto	l1104
  1221  07AD                     u490:
  1222  07AD                     l1106:
  1223                           
  1224                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1225  07AD  3028               	movlw	40
  1226  07AE  00F6               	movwf	??_lcd_init
  1227  07AF  0876               	movf	??_lcd_init,w
  1228  07B0  00F3               	movwf	lcd_put_byte@b
  1229  07B1  3000               	movlw	0
  1230  07B2  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1231  07B7                     l1108:	
  1232                           ;lcd.c: 272:  while(lcd_busy());
  1233                           
  1234  07B7  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1235  07BC  3A00               	xorlw	0
  1236  07BD  1D03               	skipz
  1237  07BE  2FC0               	goto	u501
  1238  07BF  2FC1               	goto	u500
  1239  07C0                     u501:
  1240  07C0  2FB7               	goto	l1108
  1241  07C1                     u500:
  1242  07C1                     l1110:
  1243                           
  1244                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1245  07C1  300C               	movlw	12
  1246  07C2  00F6               	movwf	??_lcd_init
  1247  07C3  0876               	movf	??_lcd_init,w
  1248  07C4  00F3               	movwf	lcd_put_byte@b
  1249  07C5  3000               	movlw	0
  1250  07C6  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1251  07CB                     l1112:	
  1252                           ;lcd.c: 275:  while(lcd_busy());
  1253                           
  1254  07CB  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1255  07D0  3A00               	xorlw	0
  1256  07D1  1D03               	skipz
  1257  07D2  2FD4               	goto	u511
  1258  07D3  2FD5               	goto	u510
  1259  07D4                     u511:
  1260  07D4  2FCB               	goto	l1112
  1261  07D5                     u510:
  1262  07D5                     l1114:
  1263                           
  1264                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1265  07D5  01F3               	clrf	lcd_put_byte@b
  1266  07D6  0AF3               	incf	lcd_put_byte@b,f
  1267  07D7  3000               	movlw	0
  1268  07D8  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1269  07DD                     l1116:	
  1270                           ;lcd.c: 278:  while(lcd_busy());
  1271                           
  1272  07DD  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1273  07E2  3A00               	xorlw	0
  1274  07E3  1D03               	skipz
  1275  07E4  2FE6               	goto	u521
  1276  07E5  2FE7               	goto	u520
  1277  07E6                     u521:
  1278  07E6  2FDD               	goto	l1116
  1279  07E7                     u520:
  1280  07E7                     l1118:
  1281                           
  1282                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1283  07E7  3006               	movlw	6
  1284  07E8  00F6               	movwf	??_lcd_init
  1285  07E9  0876               	movf	??_lcd_init,w
  1286  07EA  00F3               	movwf	lcd_put_byte@b
  1287  07EB  3000               	movlw	0
  1288  07EC  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1289  07F1                     l1120:	
  1290                           ;lcd.c: 281:  while(lcd_busy());
  1291                           
  1292  07F1  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1293  07F6  3A00               	xorlw	0
  1294  07F7  1D03               	skipz
  1295  07F8  2FFA               	goto	u531
  1296  07F9  2FFB               	goto	u530
  1297  07FA                     u531:
  1298  07FA  2FF1               	goto	l1120
  1299  07FB                     u530:
  1300  07FB                     l123:
  1301  07FB  0008               	return
  1302  07FC                     __end_of_lcd_init:
  1303                           
  1304                           	psect	text5
  1305  05EB                     __ptext5:	
  1306 ;; *************** function _lcd_put_byte *****************
  1307 ;; Defined at:
  1308 ;;		line 134 in file "lcd.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  rs              1    wreg     unsigned char 
  1311 ;;  b               1    3[COMMON] unsigned char 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  rs              1    5[COMMON] unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0, pclath, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         1       0       0       0       0
  1324 ;;      Locals:         1       0       0       0       0
  1325 ;;      Temps:          1       0       0       0       0
  1326 ;;      Totals:         3       0       0       0       0
  1327 ;;Total ram usage:        3 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; Hardware stack levels required when called: 1
  1330 ;; This function calls:
  1331 ;;		_lcd_put_nibble
  1332 ;; This function is called by:
  1333 ;;		_lcd_gotoxy
  1334 ;;		_lcd_putc
  1335 ;;		_lcd_init
  1336 ;;		_lcd_ShiftLeft
  1337 ;;		_lcd_ShiftRight
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _lcd_put_byte
  1343  05EB                     _lcd_put_byte:
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1347                           ;lcd_put_byte@rs stored from wreg
  1348  05EB  00F5               	movwf	lcd_put_byte@rs
  1349  05EC                     l1034:
  1350                           
  1351                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1352  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  1353  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  1354  05EE  1208               	bcf	8,4	;volatile
  1355                           
  1356                           ;lcd.c: 140:  TRISD5 = 0;
  1357  05EF  1288               	bcf	8,5	;volatile
  1358                           
  1359                           ;lcd.c: 141:  TRISD6 = 0;
  1360  05F0  1308               	bcf	8,6	;volatile
  1361                           
  1362                           ;lcd.c: 142:  TRISD7 = 0;
  1363  05F1  1388               	bcf	8,7	;volatile
  1364  05F2                     l1036:
  1365                           
  1366                           ;lcd.c: 144:  if(rs)
  1367  05F2  0875               	movf	lcd_put_byte@rs,w
  1368  05F3  1903               	btfsc	3,2
  1369  05F4  2DF6               	goto	u421
  1370  05F5  2DF7               	goto	u420
  1371  05F6                     u421:
  1372  05F6  2DFB               	goto	l71
  1373  05F7                     u420:
  1374  05F7                     l1038:
  1375                           
  1376                           ;lcd.c: 145:   RD1 = 1;
  1377  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1378  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1379  05F9  1488               	bsf	8,1	;volatile
  1380  05FA  2DFE               	goto	l1040
  1381  05FB                     l71:	
  1382                           ;lcd.c: 146:  else
  1383                           
  1384                           
  1385                           ;lcd.c: 147:   RD1 = 0;
  1386  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1387  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1388  05FD  1088               	bcf	8,1	;volatile
  1389  05FE                     l1040:
  1390                           
  1391                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1392  05FE  3006               	movlw	6
  1393  05FF  00F4               	movwf	??_lcd_put_byte
  1394  0600                     u657:
  1395  0600  0BF4               	decfsz	??_lcd_put_byte,f
  1396  0601  2E00               	goto	u657
  1397  0602  0000               	nop
  1398  0603                     l1042:
  1399                           
  1400                           ;lcd.c: 150:  RD2 = 0;
  1401  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0605  1108               	bcf	8,2	;volatile
  1404                           
  1405                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1406  0606  3006               	movlw	6
  1407  0607  00F4               	movwf	??_lcd_put_byte
  1408  0608                     u667:
  1409  0608  0BF4               	decfsz	??_lcd_put_byte,f
  1410  0609  2E08               	goto	u667
  1411  060A  0000               	nop
  1412  060B                     l1044:
  1413                           
  1414                           ;lcd.c: 153:  RD3 = 0;
  1415  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1416  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1417  060D  1188               	bcf	8,3	;volatile
  1418  060E                     l1046:
  1419                           
  1420                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1421  060E  0873               	movf	lcd_put_byte@b,w
  1422  060F  00F4               	movwf	??_lcd_put_byte
  1423  0610  3004               	movlw	4
  1424  0611                     u435:
  1425  0611  1003               	clrc
  1426  0612  0CF4               	rrf	??_lcd_put_byte,f
  1427  0613  3EFF               	addlw	-1
  1428  0614  1D03               	skipz
  1429  0615  2E11               	goto	u435
  1430  0616  0874               	movf	??_lcd_put_byte,w
  1431  0617  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1432  061C                     l1048:
  1433                           
  1434                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1435  061C  0873               	movf	lcd_put_byte@b,w
  1436  061D  390F               	andlw	15
  1437  061E  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1438  0623                     l73:
  1439  0623  0008               	return
  1440  0624                     __end_of_lcd_put_byte:
  1441                           
  1442                           	psect	text6
  1443  0624                     __ptext6:	
  1444 ;; *************** function _lcd_put_nibble *****************
  1445 ;; Defined at:
  1446 ;;		line 103 in file "lcd.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  b               1    wreg     unsigned char 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  b               1    1[COMMON] unsigned char 
  1451 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         2       0       0       0       0
  1463 ;;      Temps:          1       0       0       0       0
  1464 ;;      Totals:         3       0       0       0       0
  1465 ;;Total ram usage:        3 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_lcd_put_byte
  1471 ;;		_lcd_init
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           
  1476                           ;psect for function _lcd_put_nibble
  1477  0624                     _lcd_put_nibble:
  1478                           
  1479                           ;incstack = 0
  1480                           ; Regs used in _lcd_put_nibble: [wreg]
  1481                           ;lcd_put_nibble@b stored from wreg
  1482  0624  00F1               	movwf	lcd_put_nibble@b
  1483  0625                     l996:
  1484                           
  1485                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1486  0625  1683               	bsf	3,5	;RP0=1, select bank1
  1487  0626  1303               	bcf	3,6	;RP1=0, select bank1
  1488  0627  1208               	bcf	8,4	;volatile
  1489                           
  1490                           ;lcd.c: 110:  TRISD5 = 0;
  1491  0628  1288               	bcf	8,5	;volatile
  1492                           
  1493                           ;lcd.c: 111:  TRISD6 = 0;
  1494  0629  1308               	bcf	8,6	;volatile
  1495                           
  1496                           ;lcd.c: 112:  TRISD7 = 0;
  1497  062A  1388               	bcf	8,7	;volatile
  1498  062B                     l998:
  1499                           
  1500                           ;lcd.c: 114:  temp.Val = b;
  1501  062B  0871               	movf	lcd_put_nibble@b,w
  1502  062C  00F0               	movwf	??_lcd_put_nibble
  1503  062D  0870               	movf	??_lcd_put_nibble,w
  1504  062E  00F2               	movwf	lcd_put_nibble@temp
  1505  062F                     l1000:
  1506                           
  1507                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1508  062F  1872               	btfsc	lcd_put_nibble@temp,0
  1509  0630  2E32               	goto	u341
  1510  0631  2E36               	goto	u340
  1511  0632                     u341:
  1512  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1513  0633  1303               	bcf	3,6	;RP1=0, select bank0
  1514  0634  1608               	bsf	8,4	;volatile
  1515  0635  2E39               	goto	u354
  1516  0636                     u340:
  1517  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0638  1208               	bcf	8,4	;volatile
  1520  0639                     u354:
  1521  0639                     l1002:
  1522                           
  1523                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1524  0639  18F2               	btfsc	lcd_put_nibble@temp,1
  1525  063A  2E3C               	goto	u361
  1526  063B  2E40               	goto	u360
  1527  063C                     u361:
  1528  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1529  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1530  063E  1688               	bsf	8,5	;volatile
  1531  063F  2E43               	goto	u374
  1532  0640                     u360:
  1533  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0642  1288               	bcf	8,5	;volatile
  1536  0643                     u374:
  1537  0643                     l1004:
  1538                           
  1539                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1540  0643  1972               	btfsc	lcd_put_nibble@temp,2
  1541  0644  2E46               	goto	u381
  1542  0645  2E4A               	goto	u380
  1543  0646                     u381:
  1544  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0648  1708               	bsf	8,6	;volatile
  1547  0649  2E4D               	goto	u394
  1548  064A                     u380:
  1549  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1550  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1551  064C  1308               	bcf	8,6	;volatile
  1552  064D                     u394:
  1553  064D                     l1006:
  1554                           
  1555                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1556  064D  19F2               	btfsc	lcd_put_nibble@temp,3
  1557  064E  2E50               	goto	u401
  1558  064F  2E54               	goto	u400
  1559  0650                     u401:
  1560  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0652  1788               	bsf	8,7	;volatile
  1563  0653  2E57               	goto	u414
  1564  0654                     u400:
  1565  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0656  1388               	bcf	8,7	;volatile
  1568  0657                     u414:
  1569                           
  1570                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1571  0657  3006               	movlw	6
  1572  0658  00F0               	movwf	??_lcd_put_nibble
  1573  0659                     u677:
  1574  0659  0BF0               	decfsz	??_lcd_put_nibble,f
  1575  065A  2E59               	goto	u677
  1576  065B  0000               	nop
  1577  065C                     l1008:
  1578                           
  1579                           ;lcd.c: 122:  RD3 = 1;
  1580  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1581  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1582  065E  1588               	bsf	8,3	;volatile
  1583                           
  1584                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1585  065F  3006               	movlw	6
  1586  0660  00F0               	movwf	??_lcd_put_nibble
  1587  0661                     u687:
  1588  0661  0BF0               	decfsz	??_lcd_put_nibble,f
  1589  0662  2E61               	goto	u687
  1590  0663  0000               	nop
  1591  0664                     l1010:
  1592                           
  1593                           ;lcd.c: 124:  RD3 = 0;
  1594  0664  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0665  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0666  1188               	bcf	8,3	;volatile
  1597  0667                     l68:
  1598  0667  0008               	return
  1599  0668                     __end_of_lcd_put_nibble:
  1600                           
  1601                           	psect	text7
  1602  05BB                     __ptext7:	
  1603 ;; *************** function _lcd_busy *****************
  1604 ;; Defined at:
  1605 ;;		line 18 in file "lcd.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  busy            1    1[COMMON] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      unsigned char 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       0       0       0
  1620 ;;      Locals:         1       0       0       0       0
  1621 ;;      Temps:          1       0       0       0       0
  1622 ;;      Totals:         2       0       0       0       0
  1623 ;;Total ram usage:        2 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_lcd_gotoxy
  1629 ;;		_lcd_putc
  1630 ;;		_lcd_init
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _lcd_busy
  1636  05BB                     _lcd_busy:
  1637  05BB                     l1012:	
  1638                           ;incstack = 0
  1639                           ; Regs used in _lcd_busy: [wreg+status,2]
  1640                           
  1641                           
  1642                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1643  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  1644  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  1645  05BD  1608               	bsf	8,4	;volatile
  1646                           
  1647                           ;lcd.c: 25:  TRISD5 = 1;
  1648  05BE  1688               	bsf	8,5	;volatile
  1649                           
  1650                           ;lcd.c: 26:  TRISD6 = 1;
  1651  05BF  1708               	bsf	8,6	;volatile
  1652                           
  1653                           ;lcd.c: 27:  TRISD7 = 1;
  1654  05C0  1788               	bsf	8,7	;volatile
  1655                           
  1656                           ;lcd.c: 29:  RD2 = 1;
  1657  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1658  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1659  05C3  1508               	bsf	8,2	;volatile
  1660                           
  1661                           ;lcd.c: 30:  RD1 = 0;
  1662  05C4  1088               	bcf	8,1	;volatile
  1663  05C5                     l1014:
  1664                           
  1665                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1666  05C5  3006               	movlw	6
  1667  05C6  00F0               	movwf	??_lcd_busy
  1668  05C7                     u697:
  1669  05C7  0BF0               	decfsz	??_lcd_busy,f
  1670  05C8  2DC7               	goto	u697
  1671  05C9  0000               	nop
  1672  05CA                     l1016:
  1673                           
  1674                           ;lcd.c: 32:  RD3 = 1;
  1675  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1676  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1677  05CC  1588               	bsf	8,3	;volatile
  1678                           
  1679                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1680  05CD  3006               	movlw	6
  1681  05CE  00F0               	movwf	??_lcd_busy
  1682  05CF                     u707:
  1683  05CF  0BF0               	decfsz	??_lcd_busy,f
  1684  05D0  2DCF               	goto	u707
  1685  05D1  0000               	nop
  1686  05D2                     l1018:
  1687                           
  1688                           ;lcd.c: 35:  busy = RD7;
  1689  05D2  3000               	movlw	0
  1690  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1691  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1692  05D5  1B88               	btfsc	8,7	;volatile
  1693  05D6  3001               	movlw	1
  1694  05D7  00F1               	movwf	lcd_busy@busy
  1695  05D8                     l1020:
  1696                           
  1697                           ;lcd.c: 37:  RD3 = 0;
  1698  05D8  1188               	bcf	8,3	;volatile
  1699  05D9                     l1022:
  1700                           
  1701                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1702  05D9  3006               	movlw	6
  1703  05DA  00F0               	movwf	??_lcd_busy
  1704  05DB                     u717:
  1705  05DB  0BF0               	decfsz	??_lcd_busy,f
  1706  05DC  2DDB               	goto	u717
  1707  05DD  0000               	nop
  1708  05DE                     l1024:
  1709                           
  1710                           ;lcd.c: 39:  RD3 = 1;
  1711  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1712  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1713  05E0  1588               	bsf	8,3	;volatile
  1714  05E1                     l1026:
  1715                           
  1716                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1717  05E1  3006               	movlw	6
  1718  05E2  00F0               	movwf	??_lcd_busy
  1719  05E3                     u727:
  1720  05E3  0BF0               	decfsz	??_lcd_busy,f
  1721  05E4  2DE3               	goto	u727
  1722  05E5  0000               	nop
  1723  05E6                     l1028:
  1724                           
  1725                           ;lcd.c: 41:  RD3 = 0;
  1726  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1727  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1728  05E8  1188               	bcf	8,3	;volatile
  1729  05E9                     l1030:
  1730                           
  1731                           ;lcd.c: 43:  return busy;
  1732  05E9  0871               	movf	lcd_busy@busy,w
  1733  05EA                     l60:
  1734  05EA  0008               	return
  1735  05EB                     __end_of_lcd_busy:
  1736  007E                     btemp	set	126	;btemp
  1737  007E                     wtemp0	set	126
  1738                           
  1739                           	psect	config
  1740                           
  1741                           ;Config register CONFIG1 @ 0x2007
  1742                           ;	Oscillator Selection bits
  1743                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1744                           ;	Watchdog Timer Enable bit
  1745                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1746                           ;	Power-up Timer Enable bit
  1747                           ;	PWRTE = OFF, PWRT disabled
  1748                           ;	RE3/MCLR pin function select bit
  1749                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1750                           ;	Code Protection bit
  1751                           ;	CP = OFF, Program memory code protection is disabled
  1752                           ;	Data Code Protection bit
  1753                           ;	CPD = OFF, Data memory code protection is disabled
  1754                           ;	Brown Out Reset Selection bits
  1755                           ;	BOREN = OFF, BOR disabled
  1756                           ;	Internal External Switchover bit
  1757                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1758                           ;	Fail-Safe Clock Monitor Enabled bit
  1759                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1760                           ;	Low Voltage Programming Enable bit
  1761                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1762                           ;	In-Circuit Debugger Mode bit
  1763                           ;	DEBUG = 0x1, unprogrammed default
  1764  2007                     	org	8199
  1765  2007  20F2               	dw	8434
  1766                           
  1767                           ;Config register CONFIG2 @ 0x2008
  1768                           ;	Brown-out Reset Selection bit
  1769                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1770                           ;	Flash Program Memory Self Write Enable bits
  1771                           ;	WRT = OFF, Write protection off
  1772  2008                     	org	8200
  1773  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    92
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 17
		 -> main@class(CODE[13]), main@HKTT(CODE[14]), main@your_live(CODE[17]), main@your_born(CODE[17]), 
		 -> main@MSSV(CODE[14]), main@your_name(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8005
                                              1 BANK0      3     3      0
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2808
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1561
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1071
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1     937
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jun 04 21:49:09 2021

                      pc 0002                       l27 0756                       l60 05EA  
                     l71 05FB                       l73 0623                       l81 05BA  
                     l68 0667                       l99 06C3   __end_of_lcd_put_nibble 0668  
                     fsr 0004            ?_lcd_put_byte 0073                      l105 0594  
                    l123 07FB                      l996 0625                      l998 062B  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      u400 0654                      u401 0650  
                    u340 0636                      u420 05F7                      u500 07C1  
                    u341 0632                      u421 05F6                      u501 07C0  
                    u414 0657                      u510 07D5                      u511 07D4  
                    u360 0640                      u520 07E7                      u440 059B  
                    u361 063C                      u521 07E6                      u441 059A  
                    u354 0639                      u530 07FB                      u450 05BA  
                    u435 0611                      u531 07FA                      u451 05B9  
                    u380 064A                      u460 067C                      u540 0594  
                    u381 0646                      u461 067B                      u541 0593  
                    u374 0643                      u470 069A                      u471 0699  
                    u607 0750                      u480 06AF                      u617 0766  
                    u481 06AE                      u394 064D                      u490 07AD  
                    u707 05CF                      u491 07AC                      u627 077A  
                    u717 05DB                      u637 0789                      u727 05E3  
                    u647 0798                      u657 0600                      u667 0608  
                    u587 06F2                      u677 0659                      u597 0721  
                    u687 0661                      u697 05C7                      fsr0 0004  
                   l1000 062F                     l1010 0664                     l1002 0639  
                   l1020 05D8                     l1012 05BB                     l1004 0643  
                   l1100 078E                     l1030 05E9                     l1022 05D9  
                   l1014 05C5                     l1006 064D                     l1110 07C1  
                   l1102 079D                     l1024 05DE                     l1016 05CA  
                   l1008 065C                     l1040 05FE                     l1120 07F1  
                   l1112 07CB                     l1104 07A3                     l1026 05E1  
                   l1018 05D2                     l1042 0603                     l1034 05EC  
                   l1114 07D5                     l1106 07AD                     l1050 0596  
                   l1122 0575                     l1028 05E6                     l1044 060B  
                   l1036 05F2                     l1116 07DD                     l1108 07B7  
                   l1060 05B0                     l1052 059B                     l1124 0576  
                   l1140 06DC                     l1046 060E                     l1038 05F7  
                   l1118 07E7                     l1054 05A0                     l1070 0686  
                   l1062 0669                     l1126 0582                     l1150 0705  
                   l1142 06E4                     l1134 06C4                     l1048 061C  
                   l1056 05A1                     l1216 06B8                     l1072 0690  
                   l1064 066A                     l1128 0588                     l1160 0734  
                   l1152 070B                     l1144 06EA                     l1136 06C9  
                   l1090 076E                     l1058 05A5                     l1074 069B  
                   l1066 0672                     l1162 073A                     l1154 0713  
                   l1146 06F8                     l1138 06CF                     l1092 076F  
                   l1084 0759                     l1076 06A5                     l1068 067D  
                   l1164 0748                     l1156 0719                     l1148 06FE  
                   l1094 0770                     l1086 0762                     l1078 06B0  
                   l1158 0727                     l1096 0776                     l1088 076B  
                   l1098 0785                     _main 06C4             lcd_busy@busy 0071  
                   btemp 007E                     start 0000          ?_lcd_put_nibble 0070  
         ??_lcd_put_byte 0074                    ?_main 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0759            lcd_gotoxy@col 0078            lcd_gotoxy@row 0076  
     lcd_put_nibble@temp 0072                   ??_main 0021                   _TRISD1 0441  
                 _TRISD2 0442                   _TRISD3 0443                   _TRISD4 0444  
                 _TRISD5 0445                   _TRISD6 0446                   _TRISD7 0447  
       __end_of_lcd_busy 05EB         __end_of_lcd_init 07FC         __end_of_lcd_putc 06C4  
       __end_of_lcd_puts 0595            lcd_put_byte@b 0073         __end_ofmain@HKTT 0058  
       __end_ofmain@MSSV 004A  __end_of__initialization 07FC     __end_of_lcd_put_byte 0624  
         __pcstackCOMMON 0070            main@your_born 001A            main@your_name 002B  
          main@your_live 0009        lcd_gotoxy@address 0079         ??_lcd_put_nibble 0070  
             __pmaintext 06C4               _lcd_gotoxy 0595                ?_lcd_busy 0070  
              ?_lcd_init 0070                ?_lcd_putc 0070                ?_lcd_puts 0070  
             __stringtab 0003                  __ptext1 0572                  __ptext2 0668  
                __ptext3 0595                  __ptext4 0759                  __ptext5 05EB  
                __ptext6 0624                  __ptext7 05BB    __size_of_lcd_put_byte 0039  
             ??_lcd_busy 0070               ??_lcd_init 0076               ??_lcd_putc 007A  
             ??_lcd_puts 007D     end_of_initialization 07FC           lcd_put_byte@rs 0075  
      __end_ofmain@class 0065             _lcd_put_byte 05EB              ?_lcd_gotoxy 0076  
    start_initialization 07FC      __size_of_lcd_gotoxy 0026                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_lcd_busy 0030        __size_of_lcd_init 00A3  
      __size_of_lcd_putc 005C        __size_of_lcd_puts 0023                __pstrings 0003  
            __stringbase 0008  __size_of_lcd_put_nibble 0044                main@class 0058  
              lcd_putc@c 007C                lcd_puts@s 0020             ??_lcd_gotoxy 0077  
  __end_ofmain@your_born 002B    __end_ofmain@your_name 003C    __end_ofmain@your_live 001A  
     __end_of_lcd_gotoxy 05BB       __end_of__stringtab 0009                 _lcd_busy 05BB  
               _lcd_init 0759                 _lcd_putc 0668                 _lcd_puts 0572  
          __size_of_main 0095                 main@HKTT 004A                 main@MSSV 003C  
        lcd_put_nibble@b 0071                stringcode 0003           _lcd_put_nibble 0624  
               stringdir 0003                 stringtab 0003  
