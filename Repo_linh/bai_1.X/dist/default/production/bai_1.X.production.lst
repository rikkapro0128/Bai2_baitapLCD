

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 06 17:52:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287                           
   288                           	psect	strings
   289  0003                     __pstrings:
   290  0003                     stringtab:
   291  0003                     __stringtab:
   292  0003                     stringcode:	
   293                           ;	String table - string pointers are 1 byte each
   294                           
   295  0003                     stringdir:
   296  0003  3000               	movlw	high stringdir
   297  0004  008A               	movwf	10
   298  0005  0804               	movf	4,w
   299  0006  0A84               	incf	4,f
   300  0007  0782               	addwf	2,f
   301  0008                     __stringbase:
   302  0008  3400               	retlw	0
   303  0009                     __end_of__stringtab:
   304  0009                     main@your_live:
   305  0009  344E               	retlw	78
   306  000A  346F               	retlw	111
   307  000B  3469               	retlw	105
   308  000C  3453               	retlw	83
   309  000D  3469               	retlw	105
   310  000E  346E               	retlw	110
   311  000F  3468               	retlw	104
   312  0010  343A               	retlw	58
   313  0011  3441               	retlw	65
   314  0012  346E               	retlw	110
   315  0013  3420               	retlw	32
   316  0014  3447               	retlw	71
   317  0015  3469               	retlw	105
   318  0016  3461               	retlw	97
   319  0017  346E               	retlw	110
   320  0018  3467               	retlw	103
   321  0019  3400               	retlw	0
   322  001A                     __end_ofmain@your_live:
   323  001A                     main@your_born:
   324  001A  344E               	retlw	78
   325  001B  3467               	retlw	103
   326  001C  3461               	retlw	97
   327  001D  3479               	retlw	121
   328  001E  3453               	retlw	83
   329  001F  3469               	retlw	105
   330  0020  346E               	retlw	110
   331  0021  3468               	retlw	104
   332  0022  343A               	retlw	58
   333  0023  3430               	retlw	48
   334  0024  3435               	retlw	53
   335  0025  342F               	retlw	47
   336  0026  3432               	retlw	50
   337  0027  3430               	retlw	48
   338  0028  3430               	retlw	48
   339  0029  3431               	retlw	49
   340  002A  3400               	retlw	0
   341  002B                     __end_ofmain@your_born:
   342  002B                     main@your_name:
   343  002B  3450               	retlw	80
   344  002C  3468               	retlw	104
   345  002D  3461               	retlw	97
   346  002E  346D               	retlw	109
   347  002F  3420               	retlw	32
   348  0030  3454               	retlw	84
   349  0031  342E               	retlw	46
   350  0032  3454               	retlw	84
   351  0033  3468               	retlw	104
   352  0034  3475               	retlw	117
   353  0035  3479               	retlw	121
   354  0036  3420               	retlw	32
   355  0037  344C               	retlw	76
   356  0038  3469               	retlw	105
   357  0039  346E               	retlw	110
   358  003A  3468               	retlw	104
   359  003B  3400               	retlw	0
   360  003C                     __end_ofmain@your_name:
   361  003C                     main@MSSV:
   362  003C  344D               	retlw	77
   363  003D  3453               	retlw	83
   364  003E  3453               	retlw	83
   365  003F  3456               	retlw	86
   366  0040  343A               	retlw	58
   367  0041  3431               	retlw	49
   368  0042  3439               	retlw	57
   369  0043  3434               	retlw	52
   370  0044  3438               	retlw	56
   371  0045  3434               	retlw	52
   372  0046  3430               	retlw	48
   373  0047  3438               	retlw	56
   374  0048  3431               	retlw	49
   375  0049  3400               	retlw	0
   376  004A                     __end_ofmain@MSSV:
   377  004A                     main@class:
   378  004A  344C               	retlw	76
   379  004B  346F               	retlw	111
   380  004C  3470               	retlw	112
   381  004D  343A               	retlw	58
   382  004E  3420               	retlw	32
   383  004F  3444               	retlw	68
   384  0050  3454               	retlw	84
   385  0051  3456               	retlw	86
   386  0052  3454               	retlw	84
   387  0053  3431               	retlw	49
   388  0054  3435               	retlw	53
   389  0055  3441               	retlw	65
   390  0056  3400               	retlw	0
   391  0057                     __end_ofmain@class:
   392  0057                     main@HKTT:
   393  0057  3448               	retlw	72
   394  0058  344B               	retlw	75
   395  0059  3454               	retlw	84
   396  005A  3454               	retlw	84
   397  005B  343A               	retlw	58
   398  005C  3420               	retlw	32
   399  005D  3447               	retlw	71
   400  005E  346F               	retlw	111
   401  005F  3420               	retlw	32
   402  0060  3456               	retlw	86
   403  0061  3461               	retlw	97
   404  0062  3470               	retlw	112
   405  0063  3400               	retlw	0
   406  0064                     __end_ofmain@HKTT:
   407  0044                     _RD4	set	68
   408  0045                     _RD5	set	69
   409  0046                     _RD6	set	70
   410  0047                     _RD7	set	71
   411  0043                     _RD3	set	67
   412  0041                     _RD1	set	65
   413  0042                     _RD2	set	66
   414  0442                     _TRISD2	set	1090
   415  0441                     _TRISD1	set	1089
   416  0443                     _TRISD3	set	1091
   417  0447                     _TRISD7	set	1095
   418  0446                     _TRISD6	set	1094
   419  0445                     _TRISD5	set	1093
   420  0444                     _TRISD4	set	1092
   421                           
   422                           	psect	cinit
   423  07FC                     start_initialization:	
   424                           ; #config settings
   425                           
   426  07FC                     __initialization:
   427  07FC                     end_of_initialization:	
   428                           ;End of C runtime variable initialization code
   429                           
   430  07FC                     __end_of__initialization:
   431  07FC  0183               	clrf	3
   432  07FD  120A  118A  2EC4   	ljmp	_main	;jump to C main() function
   433                           
   434                           	psect	cstackCOMMON
   435  0070                     __pcstackCOMMON:
   436  0070                     ?_lcd_init:
   437  0070                     ?_lcd_putc:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_lcd_puts:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_lcd_busy:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ??_lcd_busy:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_lcd_put_nibble:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ??_lcd_put_nibble:	
   456                           ; 1 bytes @ 0x0
   457                           
   458                           
   459                           ; 1 bytes @ 0x0
   460  0070                     	ds	1
   461  0071                     lcd_busy@busy:
   462  0071                     lcd_put_nibble@b:	
   463                           ; 1 bytes @ 0x1
   464                           
   465                           
   466                           ; 1 bytes @ 0x1
   467  0071                     	ds	1
   468  0072                     lcd_put_nibble@temp:
   469                           
   470                           ; 1 bytes @ 0x2
   471  0072                     	ds	1
   472  0073                     ?_lcd_put_byte:
   473  0073                     lcd_put_byte@b:	
   474                           ; 1 bytes @ 0x3
   475                           
   476                           
   477                           ; 1 bytes @ 0x3
   478  0073                     	ds	1
   479  0074                     ??_lcd_put_byte:
   480                           
   481                           ; 1 bytes @ 0x4
   482  0074                     	ds	1
   483  0075                     lcd_put_byte@rs:
   484                           
   485                           ; 1 bytes @ 0x5
   486  0075                     	ds	1
   487  0076                     ??_lcd_init:
   488  0076                     ?_lcd_gotoxy:	
   489                           ; 1 bytes @ 0x6
   490                           
   491  0076                     lcd_gotoxy@row:	
   492                           ; 1 bytes @ 0x6
   493                           
   494                           
   495                           ; 1 bytes @ 0x6
   496  0076                     	ds	1
   497  0077                     ??_lcd_gotoxy:
   498                           
   499                           ; 1 bytes @ 0x7
   500  0077                     	ds	1
   501  0078                     lcd_gotoxy@col:
   502                           
   503                           ; 1 bytes @ 0x8
   504  0078                     	ds	1
   505  0079                     lcd_gotoxy@address:
   506                           
   507                           ; 1 bytes @ 0x9
   508  0079                     	ds	1
   509  007A                     ??_lcd_putc:
   510                           
   511                           ; 1 bytes @ 0xA
   512  007A                     	ds	2
   513  007C                     lcd_putc@c:
   514                           
   515                           ; 1 bytes @ 0xC
   516  007C                     	ds	1
   517  007D                     ??_lcd_puts:
   518                           
   519                           ; 1 bytes @ 0xD
   520  007D                     	ds	1
   521                           
   522                           	psect	cstackBANK0
   523  0020                     __pcstackBANK0:
   524  0020                     lcd_puts@s:
   525                           
   526                           ; 1 bytes @ 0x0
   527  0020                     	ds	1
   528  0021                     ??_main:
   529                           
   530                           ; 1 bytes @ 0x1
   531  0021                     	ds	3
   532                           
   533                           	psect	maintext
   534  06C4                     __pmaintext:	
   535 ;;
   536 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   537 ;;
   538 ;; *************** function _main *****************
   539 ;; Defined at:
   540 ;;		line 25 in file "newmain.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : B00/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       3       0       0       0
   557 ;;      Totals:         0       3       0       0       0
   558 ;;Total ram usage:        3 bytes
   559 ;; Hardware stack levels required when called: 5
   560 ;; This function calls:
   561 ;;		_lcd_gotoxy
   562 ;;		_lcd_init
   563 ;;		_lcd_putc
   564 ;;		_lcd_puts
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _main
   572  06C4                     _main:
   573  06C4                     l1134:	
   574                           ;incstack = 0
   575                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   576                           
   577                           
   578                           ;newmain.c: 26:     const char your_name[] = "Pham T.Thuy Linh";;newmain.c: 27:     cons
      +                          t char your_born[] = "NgaySinh:05/2001";;newmain.c: 28:     const char your_live[] = "No
      +                          iSinh:An Giang";;newmain.c: 29:     const char HKTT[] = "HKTT: Go Vap";;newmain.c: 30:  
      +                             const char class[] = "Lop: DTVT15A";;newmain.c: 31:     const char MSSV[] = "MSSV:194
      +                          84081";;newmain.c: 32:     lcd_init();
   579  06C4  120A  118A  2759  120A  118A  	fcall	_lcd_init
   580  06C9                     l1136:
   581                           
   582                           ;newmain.c: 33:     lcd_putc('\f');
   583  06C9  300C               	movlw	12
   584  06CA  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   585  06CF                     l1138:
   586                           
   587                           ;newmain.c: 34:     lcd_gotoxy(0, 0);
   588  06CF  01F6               	clrf	lcd_gotoxy@row
   589  06D0  3000               	movlw	0
   590  06D1  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   591                           
   592                           ;newmain.c: 35:     lcd_puts(your_name);
   593  06D6  3023               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   594  06D7  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   595  06DC                     l1140:
   596                           
   597                           ;newmain.c: 36:     lcd_gotoxy(0, 1);
   598  06DC  01F6               	clrf	lcd_gotoxy@row
   599  06DD  0AF6               	incf	lcd_gotoxy@row,f
   600  06DE  3000               	movlw	0
   601  06DF  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   602  06E4                     l1142:
   603                           
   604                           ;newmain.c: 37:     lcd_puts(MSSV);
   605  06E4  3034               	movlw	(low ((main@MSSV-__stringbase)| (0+32768)))& (0+255)
   606  06E5  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   607  06EA                     l1144:
   608                           
   609                           ;newmain.c: 38:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   610  06EA  300B               	movlw	11
   611  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   612  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   613  06ED  00A3               	movwf	??_main+2
   614  06EE  3026               	movlw	38
   615  06EF  00A2               	movwf	??_main+1
   616  06F0  305D               	movlw	93
   617  06F1  00A1               	movwf	??_main
   618  06F2                     u587:
   619  06F2  0BA1               	decfsz	??_main,f
   620  06F3  2EF2               	goto	u587
   621  06F4  0BA2               	decfsz	??_main+1,f
   622  06F5  2EF2               	goto	u587
   623  06F6  0BA3               	decfsz	??_main+2,f
   624  06F7  2EF2               	goto	u587
   625  06F8                     l1146:
   626                           
   627                           ;newmain.c: 39:     lcd_putc('\f');
   628  06F8  300C               	movlw	12
   629  06F9  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   630  06FE                     l1148:
   631                           
   632                           ;newmain.c: 40:     lcd_gotoxy(0, 0);
   633  06FE  01F6               	clrf	lcd_gotoxy@row
   634  06FF  3000               	movlw	0
   635  0700  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   636  0705                     l1150:
   637                           
   638                           ;newmain.c: 41:     lcd_puts(your_born);
   639  0705  3012               	movlw	(low ((main@your_born-__stringbase)| (0+32768)))& (0+255)
   640  0706  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   641  070B                     l1152:
   642                           
   643                           ;newmain.c: 42:     lcd_gotoxy(0, 1);
   644  070B  01F6               	clrf	lcd_gotoxy@row
   645  070C  0AF6               	incf	lcd_gotoxy@row,f
   646  070D  3000               	movlw	0
   647  070E  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   648  0713                     l1154:
   649                           
   650                           ;newmain.c: 43:     lcd_puts(your_live);
   651  0713  3001               	movlw	(low ((main@your_live-__stringbase)| (0+32768)))& (0+255)
   652  0714  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   653  0719                     l1156:
   654                           
   655                           ;newmain.c: 44:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   656  0719  300B               	movlw	11
   657  071A  1283               	bcf	3,5	;RP0=0, select bank0
   658  071B  1303               	bcf	3,6	;RP1=0, select bank0
   659  071C  00A3               	movwf	??_main+2
   660  071D  3026               	movlw	38
   661  071E  00A2               	movwf	??_main+1
   662  071F  305D               	movlw	93
   663  0720  00A1               	movwf	??_main
   664  0721                     u597:
   665  0721  0BA1               	decfsz	??_main,f
   666  0722  2F21               	goto	u597
   667  0723  0BA2               	decfsz	??_main+1,f
   668  0724  2F21               	goto	u597
   669  0725  0BA3               	decfsz	??_main+2,f
   670  0726  2F21               	goto	u597
   671  0727                     l1158:
   672                           
   673                           ;newmain.c: 45:     lcd_putc('\f');
   674  0727  300C               	movlw	12
   675  0728  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   676                           
   677                           ;newmain.c: 46:     lcd_gotoxy(0, 0);
   678  072D  01F6               	clrf	lcd_gotoxy@row
   679  072E  3000               	movlw	0
   680  072F  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   681  0734                     l1160:
   682                           
   683                           ;newmain.c: 47:     lcd_puts(HKTT);
   684  0734  304F               	movlw	(low ((main@HKTT-__stringbase)| (0+32768)))& (0+255)
   685  0735  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   686  073A                     l1162:
   687                           
   688                           ;newmain.c: 48:     lcd_gotoxy(0, 1);
   689  073A  01F6               	clrf	lcd_gotoxy@row
   690  073B  0AF6               	incf	lcd_gotoxy@row,f
   691  073C  3000               	movlw	0
   692  073D  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   693                           
   694                           ;newmain.c: 49:     lcd_puts(class);
   695  0742  3042               	movlw	(low ((main@class-__stringbase)| (0+32768)))& (0+255)
   696  0743  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   697  0748                     l1164:
   698                           
   699                           ;newmain.c: 50:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   700  0748  300B               	movlw	11
   701  0749  1283               	bcf	3,5	;RP0=0, select bank0
   702  074A  1303               	bcf	3,6	;RP1=0, select bank0
   703  074B  00A3               	movwf	??_main+2
   704  074C  3026               	movlw	38
   705  074D  00A2               	movwf	??_main+1
   706  074E  305D               	movlw	93
   707  074F  00A1               	movwf	??_main
   708  0750                     u607:
   709  0750  0BA1               	decfsz	??_main,f
   710  0751  2F50               	goto	u607
   711  0752  0BA2               	decfsz	??_main+1,f
   712  0753  2F50               	goto	u607
   713  0754  0BA3               	decfsz	??_main+2,f
   714  0755  2F50               	goto	u607
   715  0756                     l27:
   716  0756  120A  118A  2800   	ljmp	start
   717  0759                     __end_of_main:
   718                           
   719                           	psect	text1
   720  0572                     __ptext1:	
   721 ;; *************** function _lcd_puts *****************
   722 ;; Defined at:
   723 ;;		line 224 in file "lcd.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;  s               1    wreg     PTR const unsigned char 
   726 ;;		 -> main@class(13), main@HKTT(13), main@your_live(17), main@your_born(17), 
   727 ;;		 -> main@MSSV(14), main@your_name(17), 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  s               1    0[BANK0 ] PTR const unsigned char 
   730 ;;		 -> main@class(13), main@HKTT(13), main@your_live(17), main@your_born(17), 
   731 ;;		 -> main@MSSV(14), main@your_name(17), 
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         0       1       0       0       0
   743 ;;      Temps:          1       0       0       0       0
   744 ;;      Totals:         1       1       0       0       0
   745 ;;Total ram usage:        2 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; Hardware stack levels required when called: 4
   748 ;; This function calls:
   749 ;;		_lcd_putc
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _lcd_puts
   757  0572                     _lcd_puts:
   758                           
   759                           ;incstack = 0
   760                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   761                           ;lcd_puts@s stored from wreg
   762  0572  1283               	bcf	3,5	;RP0=0, select bank0
   763  0573  1303               	bcf	3,6	;RP1=0, select bank0
   764  0574  00A0               	movwf	lcd_puts@s
   765  0575                     l1122:
   766                           
   767                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   768  0575  2D88               	goto	l1128
   769  0576                     l1124:
   770                           
   771                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   772  0576  0820               	movf	lcd_puts@s,w
   773  0577  0084               	movwf	4
   774  0578  120A  118A  2003  120A  118A  	fcall	stringdir
   775  057D  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   776  0582                     l1126:
   777  0582  3001               	movlw	1
   778  0583  00FD               	movwf	??_lcd_puts
   779  0584  087D               	movf	??_lcd_puts,w
   780  0585  1283               	bcf	3,5	;RP0=0, select bank0
   781  0586  1303               	bcf	3,6	;RP1=0, select bank0
   782  0587  07A0               	addwf	lcd_puts@s,f
   783  0588                     l1128:
   784                           
   785                           ;lcd.c: 229:  while(*s)
   786  0588  0820               	movf	lcd_puts@s,w
   787  0589  0084               	movwf	4
   788  058A  120A  118A  2003  120A  118A  	fcall	stringdir
   789  058F  3A00               	xorlw	0
   790  0590  1D03               	skipz
   791  0591  2D93               	goto	u541
   792  0592  2D94               	goto	u540
   793  0593                     u541:
   794  0593  2D76               	goto	l1124
   795  0594                     u540:
   796  0594                     l105:
   797  0594  0008               	return
   798  0595                     __end_of_lcd_puts:
   799                           
   800                           	psect	text2
   801  0668                     __ptext2:	
   802 ;; *************** function _lcd_putc *****************
   803 ;; Defined at:
   804 ;;		line 190 in file "lcd.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  c               1    wreg     unsigned char 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  c               1   12[COMMON] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0
   820 ;;      Temps:          2       0       0       0       0
   821 ;;      Totals:         3       0       0       0       0
   822 ;;Total ram usage:        3 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 3
   825 ;; This function calls:
   826 ;;		_lcd_busy
   827 ;;		_lcd_gotoxy
   828 ;;		_lcd_put_byte
   829 ;; This function is called by:
   830 ;;		_main
   831 ;;		_lcd_puts
   832 ;;		_lcd_String_Delay
   833 ;;		_putch
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           
   838                           ;psect for function _lcd_putc
   839  0668                     _lcd_putc:
   840                           
   841                           ;incstack = 0
   842                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   843                           ;lcd_putc@c stored from wreg
   844  0668  00FC               	movwf	lcd_putc@c
   845  0669                     l1062:
   846                           
   847                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   848  0669  2EB0               	goto	l1078
   849  066A                     l1064:
   850                           
   851                           ;lcd.c: 198:    lcd_put_byte(0,1);
   852  066A  01F3               	clrf	lcd_put_byte@b
   853  066B  0AF3               	incf	lcd_put_byte@b,f
   854  066C  3000               	movlw	0
   855  066D  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
   856  0672                     l1066:	
   857                           ;lcd.c: 199:    while(lcd_busy());
   858                           
   859  0672  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
   860  0677  3A00               	xorlw	0
   861  0678  1D03               	skipz
   862  0679  2E7B               	goto	u461
   863  067A  2E7C               	goto	u460
   864  067B                     u461:
   865  067B  2E72               	goto	l1066
   866  067C                     u460:
   867  067C  2EC3               	goto	l99
   868  067D                     l1068:
   869                           
   870                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   871  067D  01F6               	clrf	lcd_gotoxy@row
   872  067E  0AF6               	incf	lcd_gotoxy@row,f
   873  067F  3000               	movlw	0
   874  0680  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   875                           
   876                           ;lcd.c: 203:    break;
   877  0685  2EC3               	goto	l99
   878  0686                     l1070:
   879                           
   880                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   881  0686  3010               	movlw	16
   882  0687  00FA               	movwf	??_lcd_putc
   883  0688  087A               	movf	??_lcd_putc,w
   884  0689  00F3               	movwf	lcd_put_byte@b
   885  068A  3000               	movlw	0
   886  068B  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
   887  0690                     l1072:	
   888                           ;lcd.c: 206:    while(lcd_busy());
   889                           
   890  0690  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
   891  0695  3A00               	xorlw	0
   892  0696  1D03               	skipz
   893  0697  2E99               	goto	u471
   894  0698  2E9A               	goto	u470
   895  0699                     u471:
   896  0699  2E90               	goto	l1072
   897  069A                     u470:
   898  069A  2EC3               	goto	l99
   899  069B                     l1074:
   900                           
   901                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   902  069B  087C               	movf	lcd_putc@c,w
   903  069C  00FA               	movwf	??_lcd_putc
   904  069D  087A               	movf	??_lcd_putc,w
   905  069E  00F3               	movwf	lcd_put_byte@b
   906  069F  3001               	movlw	1
   907  06A0  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
   908  06A5                     l1076:	
   909                           ;lcd.c: 212:     while(lcd_busy());
   910                           
   911  06A5  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
   912  06AA  3A00               	xorlw	0
   913  06AB  1D03               	skipz
   914  06AC  2EAE               	goto	u481
   915  06AD  2EAF               	goto	u480
   916  06AE                     u481:
   917  06AE  2EA5               	goto	l1076
   918  06AF                     u480:
   919  06AF  2EC3               	goto	l99
   920  06B0                     l1078:
   921  06B0  087C               	movf	lcd_putc@c,w
   922  06B1  00FA               	movwf	??_lcd_putc
   923  06B2  01FB               	clrf	??_lcd_putc+1
   924                           
   925                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   926                           ; Switch size 1, requested type "simple"
   927                           ; Number of cases is 1, Range of values is 0 to 0
   928                           ; switch strategies available:
   929                           ; Name         Instructions Cycles
   930                           ; simple_byte            4     3 (average)
   931                           ; direct_byte           11     8 (fixed)
   932                           ; jumptable            260     6 (fixed)
   933                           ;	Chosen strategy is simple_byte
   934  06B3  087B               	movf	??_lcd_putc+1,w
   935  06B4  3A00               	xorlw	0	; case 0
   936  06B5  1903               	skipnz
   937  06B6  2EB8               	goto	l1216
   938  06B7  2E9B               	goto	l1074
   939  06B8                     l1216:
   940                           
   941                           ; Switch size 1, requested type "simple"
   942                           ; Number of cases is 3, Range of values is 8 to 12
   943                           ; switch strategies available:
   944                           ; Name         Instructions Cycles
   945                           ; simple_byte           10     6 (average)
   946                           ; direct_byte           26    11 (fixed)
   947                           ; jumptable            263     9 (fixed)
   948                           ;	Chosen strategy is simple_byte
   949  06B8  087A               	movf	??_lcd_putc,w
   950  06B9  3A08               	xorlw	8	; case 8
   951  06BA  1903               	skipnz
   952  06BB  2E86               	goto	l1070
   953  06BC  3A02               	xorlw	2	; case 10
   954  06BD  1903               	skipnz
   955  06BE  2E7D               	goto	l1068
   956  06BF  3A06               	xorlw	6	; case 12
   957  06C0  1903               	skipnz
   958  06C1  2E6A               	goto	l1064
   959  06C2  2E9B               	goto	l1074
   960  06C3                     l99:
   961  06C3  0008               	return
   962  06C4                     __end_of_lcd_putc:
   963                           
   964                           	psect	text3
   965  0595                     __ptext3:	
   966 ;; *************** function _lcd_gotoxy *****************
   967 ;; Defined at:
   968 ;;		line 167 in file "lcd.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  col             1    wreg     unsigned char 
   971 ;;  row             1    6[COMMON] unsigned char 
   972 ;; Auto vars:     Size  Location     Type
   973 ;;  col             1    8[COMMON] unsigned char 
   974 ;;  address         1    9[COMMON] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, pclath, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         1       0       0       0       0
   985 ;;      Locals:         2       0       0       0       0
   986 ;;      Temps:          1       0       0       0       0
   987 ;;      Totals:         4       0       0       0       0
   988 ;;Total ram usage:        4 bytes
   989 ;; Hardware stack levels used: 1
   990 ;; Hardware stack levels required when called: 2
   991 ;; This function calls:
   992 ;;		_lcd_busy
   993 ;;		_lcd_put_byte
   994 ;; This function is called by:
   995 ;;		_main
   996 ;;		_lcd_putc
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           
  1001                           ;psect for function _lcd_gotoxy
  1002  0595                     _lcd_gotoxy:
  1003                           
  1004                           ;incstack = 0
  1005                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1006                           ;lcd_gotoxy@col stored from wreg
  1007  0595  00F8               	movwf	lcd_gotoxy@col
  1008  0596                     l1050:
  1009                           
  1010                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1011  0596  0876               	movf	lcd_gotoxy@row,w
  1012  0597  1903               	btfsc	3,2
  1013  0598  2D9A               	goto	u441
  1014  0599  2D9B               	goto	u440
  1015  059A                     u441:
  1016  059A  2DA0               	goto	l1054
  1017  059B                     u440:
  1018  059B                     l1052:
  1019                           
  1020                           ;lcd.c: 174:   address=0x40;
  1021  059B  3040               	movlw	64
  1022  059C  00F7               	movwf	??_lcd_gotoxy
  1023  059D  0877               	movf	??_lcd_gotoxy,w
  1024  059E  00F9               	movwf	lcd_gotoxy@address
  1025  059F  2DA1               	goto	l1056
  1026  05A0                     l1054:
  1027                           
  1028                           ;lcd.c: 176:   address=0;
  1029  05A0  01F9               	clrf	lcd_gotoxy@address
  1030  05A1                     l1056:
  1031                           
  1032                           ;lcd.c: 178:  address += col;
  1033  05A1  0878               	movf	lcd_gotoxy@col,w
  1034  05A2  00F7               	movwf	??_lcd_gotoxy
  1035  05A3  0877               	movf	??_lcd_gotoxy,w
  1036  05A4  07F9               	addwf	lcd_gotoxy@address,f
  1037  05A5                     l1058:
  1038                           
  1039                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1040  05A5  0879               	movf	lcd_gotoxy@address,w
  1041  05A6  3880               	iorlw	128
  1042  05A7  00F7               	movwf	??_lcd_gotoxy
  1043  05A8  0877               	movf	??_lcd_gotoxy,w
  1044  05A9  00F3               	movwf	lcd_put_byte@b
  1045  05AA  3000               	movlw	0
  1046  05AB  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1047  05B0                     l1060:	
  1048                           ;lcd.c: 181:  while(lcd_busy());
  1049                           
  1050  05B0  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1051  05B5  3A00               	xorlw	0
  1052  05B6  1D03               	skipz
  1053  05B7  2DB9               	goto	u451
  1054  05B8  2DBA               	goto	u450
  1055  05B9                     u451:
  1056  05B9  2DB0               	goto	l1060
  1057  05BA                     u450:
  1058  05BA                     l81:
  1059  05BA  0008               	return
  1060  05BB                     __end_of_lcd_gotoxy:
  1061                           
  1062                           	psect	text4
  1063  0759                     __ptext4:	
  1064 ;; *************** function _lcd_init *****************
  1065 ;; Defined at:
  1066 ;;		line 241 in file "lcd.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;  i               1    0        unsigned char 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0, pclath, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0
  1082 ;;      Temps:          2       0       0       0       0
  1083 ;;      Totals:         2       0       0       0       0
  1084 ;;Total ram usage:        2 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 2
  1087 ;; This function calls:
  1088 ;;		_lcd_busy
  1089 ;;		_lcd_put_byte
  1090 ;;		_lcd_put_nibble
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _lcd_init
  1098  0759                     _lcd_init:
  1099  0759                     l1084:	
  1100                           ;incstack = 0
  1101                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1102                           
  1103                           
  1104                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1105  0759  1683               	bsf	3,5	;RP0=1, select bank1
  1106  075A  1303               	bcf	3,6	;RP1=0, select bank1
  1107  075B  1188               	bcf	8,3	;volatile
  1108                           
  1109                           ;lcd.c: 248:  TRISD1 = 0;
  1110  075C  1088               	bcf	8,1	;volatile
  1111                           
  1112                           ;lcd.c: 249:  TRISD2 = 0;
  1113  075D  1108               	bcf	8,2	;volatile
  1114                           
  1115                           ;lcd.c: 250:  TRISD4 = 0;
  1116  075E  1208               	bcf	8,4	;volatile
  1117                           
  1118                           ;lcd.c: 251:  TRISD5 = 0;
  1119  075F  1288               	bcf	8,5	;volatile
  1120                           
  1121                           ;lcd.c: 252:  TRISD6 = 0;
  1122  0760  1308               	bcf	8,6	;volatile
  1123                           
  1124                           ;lcd.c: 253:  TRISD7 = 0;
  1125  0761  1388               	bcf	8,7	;volatile
  1126  0762                     l1086:
  1127                           
  1128                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1129  0762  3014               	movlw	20
  1130  0763  00F7               	movwf	??_lcd_init+1
  1131  0764  3079               	movlw	121
  1132  0765  00F6               	movwf	??_lcd_init
  1133  0766                     u617:
  1134  0766  0BF6               	decfsz	??_lcd_init,f
  1135  0767  2F66               	goto	u617
  1136  0768  0BF7               	decfsz	??_lcd_init+1,f
  1137  0769  2F66               	goto	u617
  1138  076A  2F6B               	nop2
  1139  076B                     l1088:
  1140                           
  1141                           ;lcd.c: 257:  RD1 = 0;
  1142  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1143  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1144  076D  1088               	bcf	8,1	;volatile
  1145  076E                     l1090:
  1146                           
  1147                           ;lcd.c: 258:  RD2 = 0;
  1148  076E  1108               	bcf	8,2	;volatile
  1149  076F                     l1092:
  1150                           
  1151                           ;lcd.c: 259:  RD3 = 0;
  1152  076F  1188               	bcf	8,3	;volatile
  1153  0770                     l1094:
  1154                           
  1155                           ;lcd.c: 261:  lcd_put_nibble(3);
  1156  0770  3003               	movlw	3
  1157  0771  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1158  0776                     l1096:
  1159                           
  1160                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1161  0776  300D               	movlw	13
  1162  0777  00F7               	movwf	??_lcd_init+1
  1163  0778  30FB               	movlw	251
  1164  0779  00F6               	movwf	??_lcd_init
  1165  077A                     u627:
  1166  077A  0BF6               	decfsz	??_lcd_init,f
  1167  077B  2F7A               	goto	u627
  1168  077C  0BF7               	decfsz	??_lcd_init+1,f
  1169  077D  2F7A               	goto	u627
  1170  077E  2F7F               	nop2
  1171                           
  1172                           ;lcd.c: 263:  lcd_put_nibble(3);
  1173  077F  3003               	movlw	3
  1174  0780  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1175  0785                     l1098:
  1176                           
  1177                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1178  0785  300D               	movlw	13
  1179  0786  00F7               	movwf	??_lcd_init+1
  1180  0787  30FB               	movlw	251
  1181  0788  00F6               	movwf	??_lcd_init
  1182  0789                     u637:
  1183  0789  0BF6               	decfsz	??_lcd_init,f
  1184  078A  2F89               	goto	u637
  1185  078B  0BF7               	decfsz	??_lcd_init+1,f
  1186  078C  2F89               	goto	u637
  1187  078D  2F8E               	nop2
  1188  078E                     l1100:
  1189                           
  1190                           ;lcd.c: 265:  lcd_put_nibble(3);
  1191  078E  3003               	movlw	3
  1192  078F  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1193                           
  1194                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1195  0794  300D               	movlw	13
  1196  0795  00F7               	movwf	??_lcd_init+1
  1197  0796  30FB               	movlw	251
  1198  0797  00F6               	movwf	??_lcd_init
  1199  0798                     u647:
  1200  0798  0BF6               	decfsz	??_lcd_init,f
  1201  0799  2F98               	goto	u647
  1202  079A  0BF7               	decfsz	??_lcd_init+1,f
  1203  079B  2F98               	goto	u647
  1204  079C  2F9D               	nop2
  1205  079D                     l1102:
  1206                           
  1207                           ;lcd.c: 268:  lcd_put_nibble(2);
  1208  079D  3002               	movlw	2
  1209  079E  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1210  07A3                     l1104:	
  1211                           ;lcd.c: 269:  while(lcd_busy());
  1212                           
  1213  07A3  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1214  07A8  3A00               	xorlw	0
  1215  07A9  1D03               	skipz
  1216  07AA  2FAC               	goto	u491
  1217  07AB  2FAD               	goto	u490
  1218  07AC                     u491:
  1219  07AC  2FA3               	goto	l1104
  1220  07AD                     u490:
  1221  07AD                     l1106:
  1222                           
  1223                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1224  07AD  3028               	movlw	40
  1225  07AE  00F6               	movwf	??_lcd_init
  1226  07AF  0876               	movf	??_lcd_init,w
  1227  07B0  00F3               	movwf	lcd_put_byte@b
  1228  07B1  3000               	movlw	0
  1229  07B2  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1230  07B7                     l1108:	
  1231                           ;lcd.c: 272:  while(lcd_busy());
  1232                           
  1233  07B7  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1234  07BC  3A00               	xorlw	0
  1235  07BD  1D03               	skipz
  1236  07BE  2FC0               	goto	u501
  1237  07BF  2FC1               	goto	u500
  1238  07C0                     u501:
  1239  07C0  2FB7               	goto	l1108
  1240  07C1                     u500:
  1241  07C1                     l1110:
  1242                           
  1243                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1244  07C1  300C               	movlw	12
  1245  07C2  00F6               	movwf	??_lcd_init
  1246  07C3  0876               	movf	??_lcd_init,w
  1247  07C4  00F3               	movwf	lcd_put_byte@b
  1248  07C5  3000               	movlw	0
  1249  07C6  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1250  07CB                     l1112:	
  1251                           ;lcd.c: 275:  while(lcd_busy());
  1252                           
  1253  07CB  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1254  07D0  3A00               	xorlw	0
  1255  07D1  1D03               	skipz
  1256  07D2  2FD4               	goto	u511
  1257  07D3  2FD5               	goto	u510
  1258  07D4                     u511:
  1259  07D4  2FCB               	goto	l1112
  1260  07D5                     u510:
  1261  07D5                     l1114:
  1262                           
  1263                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1264  07D5  01F3               	clrf	lcd_put_byte@b
  1265  07D6  0AF3               	incf	lcd_put_byte@b,f
  1266  07D7  3000               	movlw	0
  1267  07D8  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1268  07DD                     l1116:	
  1269                           ;lcd.c: 278:  while(lcd_busy());
  1270                           
  1271  07DD  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1272  07E2  3A00               	xorlw	0
  1273  07E3  1D03               	skipz
  1274  07E4  2FE6               	goto	u521
  1275  07E5  2FE7               	goto	u520
  1276  07E6                     u521:
  1277  07E6  2FDD               	goto	l1116
  1278  07E7                     u520:
  1279  07E7                     l1118:
  1280                           
  1281                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1282  07E7  3006               	movlw	6
  1283  07E8  00F6               	movwf	??_lcd_init
  1284  07E9  0876               	movf	??_lcd_init,w
  1285  07EA  00F3               	movwf	lcd_put_byte@b
  1286  07EB  3000               	movlw	0
  1287  07EC  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1288  07F1                     l1120:	
  1289                           ;lcd.c: 281:  while(lcd_busy());
  1290                           
  1291  07F1  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1292  07F6  3A00               	xorlw	0
  1293  07F7  1D03               	skipz
  1294  07F8  2FFA               	goto	u531
  1295  07F9  2FFB               	goto	u530
  1296  07FA                     u531:
  1297  07FA  2FF1               	goto	l1120
  1298  07FB                     u530:
  1299  07FB                     l123:
  1300  07FB  0008               	return
  1301  07FC                     __end_of_lcd_init:
  1302                           
  1303                           	psect	text5
  1304  05EB                     __ptext5:	
  1305 ;; *************** function _lcd_put_byte *****************
  1306 ;; Defined at:
  1307 ;;		line 134 in file "lcd.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  rs              1    wreg     unsigned char 
  1310 ;;  b               1    3[COMMON] unsigned char 
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  rs              1    5[COMMON] unsigned char 
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0, pclath, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         1       0       0       0       0
  1323 ;;      Locals:         1       0       0       0       0
  1324 ;;      Temps:          1       0       0       0       0
  1325 ;;      Totals:         3       0       0       0       0
  1326 ;;Total ram usage:        3 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 1
  1329 ;; This function calls:
  1330 ;;		_lcd_put_nibble
  1331 ;; This function is called by:
  1332 ;;		_lcd_gotoxy
  1333 ;;		_lcd_putc
  1334 ;;		_lcd_init
  1335 ;;		_lcd_ShiftLeft
  1336 ;;		_lcd_ShiftRight
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _lcd_put_byte
  1342  05EB                     _lcd_put_byte:
  1343                           
  1344                           ;incstack = 0
  1345                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1346                           ;lcd_put_byte@rs stored from wreg
  1347  05EB  00F5               	movwf	lcd_put_byte@rs
  1348  05EC                     l1034:
  1349                           
  1350                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1351  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  1352  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  1353  05EE  1208               	bcf	8,4	;volatile
  1354                           
  1355                           ;lcd.c: 140:  TRISD5 = 0;
  1356  05EF  1288               	bcf	8,5	;volatile
  1357                           
  1358                           ;lcd.c: 141:  TRISD6 = 0;
  1359  05F0  1308               	bcf	8,6	;volatile
  1360                           
  1361                           ;lcd.c: 142:  TRISD7 = 0;
  1362  05F1  1388               	bcf	8,7	;volatile
  1363  05F2                     l1036:
  1364                           
  1365                           ;lcd.c: 144:  if(rs)
  1366  05F2  0875               	movf	lcd_put_byte@rs,w
  1367  05F3  1903               	btfsc	3,2
  1368  05F4  2DF6               	goto	u421
  1369  05F5  2DF7               	goto	u420
  1370  05F6                     u421:
  1371  05F6  2DFB               	goto	l71
  1372  05F7                     u420:
  1373  05F7                     l1038:
  1374                           
  1375                           ;lcd.c: 145:   RD1 = 1;
  1376  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1377  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1378  05F9  1488               	bsf	8,1	;volatile
  1379  05FA  2DFE               	goto	l1040
  1380  05FB                     l71:	
  1381                           ;lcd.c: 146:  else
  1382                           
  1383                           
  1384                           ;lcd.c: 147:   RD1 = 0;
  1385  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1386  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1387  05FD  1088               	bcf	8,1	;volatile
  1388  05FE                     l1040:
  1389                           
  1390                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1391  05FE  3006               	movlw	6
  1392  05FF  00F4               	movwf	??_lcd_put_byte
  1393  0600                     u657:
  1394  0600  0BF4               	decfsz	??_lcd_put_byte,f
  1395  0601  2E00               	goto	u657
  1396  0602  0000               	nop
  1397  0603                     l1042:
  1398                           
  1399                           ;lcd.c: 150:  RD2 = 0;
  1400  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0605  1108               	bcf	8,2	;volatile
  1403                           
  1404                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1405  0606  3006               	movlw	6
  1406  0607  00F4               	movwf	??_lcd_put_byte
  1407  0608                     u667:
  1408  0608  0BF4               	decfsz	??_lcd_put_byte,f
  1409  0609  2E08               	goto	u667
  1410  060A  0000               	nop
  1411  060B                     l1044:
  1412                           
  1413                           ;lcd.c: 153:  RD3 = 0;
  1414  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1415  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1416  060D  1188               	bcf	8,3	;volatile
  1417  060E                     l1046:
  1418                           
  1419                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1420  060E  0873               	movf	lcd_put_byte@b,w
  1421  060F  00F4               	movwf	??_lcd_put_byte
  1422  0610  3004               	movlw	4
  1423  0611                     u435:
  1424  0611  1003               	clrc
  1425  0612  0CF4               	rrf	??_lcd_put_byte,f
  1426  0613  3EFF               	addlw	-1
  1427  0614  1D03               	skipz
  1428  0615  2E11               	goto	u435
  1429  0616  0874               	movf	??_lcd_put_byte,w
  1430  0617  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1431  061C                     l1048:
  1432                           
  1433                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1434  061C  0873               	movf	lcd_put_byte@b,w
  1435  061D  390F               	andlw	15
  1436  061E  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1437  0623                     l73:
  1438  0623  0008               	return
  1439  0624                     __end_of_lcd_put_byte:
  1440                           
  1441                           	psect	text6
  1442  0624                     __ptext6:	
  1443 ;; *************** function _lcd_put_nibble *****************
  1444 ;; Defined at:
  1445 ;;		line 103 in file "lcd.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  b               1    wreg     unsigned char 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  b               1    1[COMMON] unsigned char 
  1450 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         0       0       0       0       0
  1461 ;;      Locals:         2       0       0       0       0
  1462 ;;      Temps:          1       0       0       0       0
  1463 ;;      Totals:         3       0       0       0       0
  1464 ;;Total ram usage:        3 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_lcd_put_byte
  1470 ;;		_lcd_init
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _lcd_put_nibble
  1476  0624                     _lcd_put_nibble:
  1477                           
  1478                           ;incstack = 0
  1479                           ; Regs used in _lcd_put_nibble: [wreg]
  1480                           ;lcd_put_nibble@b stored from wreg
  1481  0624  00F1               	movwf	lcd_put_nibble@b
  1482  0625                     l996:
  1483                           
  1484                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1485  0625  1683               	bsf	3,5	;RP0=1, select bank1
  1486  0626  1303               	bcf	3,6	;RP1=0, select bank1
  1487  0627  1208               	bcf	8,4	;volatile
  1488                           
  1489                           ;lcd.c: 110:  TRISD5 = 0;
  1490  0628  1288               	bcf	8,5	;volatile
  1491                           
  1492                           ;lcd.c: 111:  TRISD6 = 0;
  1493  0629  1308               	bcf	8,6	;volatile
  1494                           
  1495                           ;lcd.c: 112:  TRISD7 = 0;
  1496  062A  1388               	bcf	8,7	;volatile
  1497  062B                     l998:
  1498                           
  1499                           ;lcd.c: 114:  temp.Val = b;
  1500  062B  0871               	movf	lcd_put_nibble@b,w
  1501  062C  00F0               	movwf	??_lcd_put_nibble
  1502  062D  0870               	movf	??_lcd_put_nibble,w
  1503  062E  00F2               	movwf	lcd_put_nibble@temp
  1504  062F                     l1000:
  1505                           
  1506                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1507  062F  1872               	btfsc	lcd_put_nibble@temp,0
  1508  0630  2E32               	goto	u341
  1509  0631  2E36               	goto	u340
  1510  0632                     u341:
  1511  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0633  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0634  1608               	bsf	8,4	;volatile
  1514  0635  2E39               	goto	u354
  1515  0636                     u340:
  1516  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1517  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1518  0638  1208               	bcf	8,4	;volatile
  1519  0639                     u354:
  1520  0639                     l1002:
  1521                           
  1522                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1523  0639  18F2               	btfsc	lcd_put_nibble@temp,1
  1524  063A  2E3C               	goto	u361
  1525  063B  2E40               	goto	u360
  1526  063C                     u361:
  1527  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1528  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1529  063E  1688               	bsf	8,5	;volatile
  1530  063F  2E43               	goto	u374
  1531  0640                     u360:
  1532  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0642  1288               	bcf	8,5	;volatile
  1535  0643                     u374:
  1536  0643                     l1004:
  1537                           
  1538                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1539  0643  1972               	btfsc	lcd_put_nibble@temp,2
  1540  0644  2E46               	goto	u381
  1541  0645  2E4A               	goto	u380
  1542  0646                     u381:
  1543  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0648  1708               	bsf	8,6	;volatile
  1546  0649  2E4D               	goto	u394
  1547  064A                     u380:
  1548  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1549  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1550  064C  1308               	bcf	8,6	;volatile
  1551  064D                     u394:
  1552  064D                     l1006:
  1553                           
  1554                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1555  064D  19F2               	btfsc	lcd_put_nibble@temp,3
  1556  064E  2E50               	goto	u401
  1557  064F  2E54               	goto	u400
  1558  0650                     u401:
  1559  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0652  1788               	bsf	8,7	;volatile
  1562  0653  2E57               	goto	u414
  1563  0654                     u400:
  1564  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0656  1388               	bcf	8,7	;volatile
  1567  0657                     u414:
  1568                           
  1569                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1570  0657  3006               	movlw	6
  1571  0658  00F0               	movwf	??_lcd_put_nibble
  1572  0659                     u677:
  1573  0659  0BF0               	decfsz	??_lcd_put_nibble,f
  1574  065A  2E59               	goto	u677
  1575  065B  0000               	nop
  1576  065C                     l1008:
  1577                           
  1578                           ;lcd.c: 122:  RD3 = 1;
  1579  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1580  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1581  065E  1588               	bsf	8,3	;volatile
  1582                           
  1583                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1584  065F  3006               	movlw	6
  1585  0660  00F0               	movwf	??_lcd_put_nibble
  1586  0661                     u687:
  1587  0661  0BF0               	decfsz	??_lcd_put_nibble,f
  1588  0662  2E61               	goto	u687
  1589  0663  0000               	nop
  1590  0664                     l1010:
  1591                           
  1592                           ;lcd.c: 124:  RD3 = 0;
  1593  0664  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0665  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0666  1188               	bcf	8,3	;volatile
  1596  0667                     l68:
  1597  0667  0008               	return
  1598  0668                     __end_of_lcd_put_nibble:
  1599                           
  1600                           	psect	text7
  1601  05BB                     __ptext7:	
  1602 ;; *************** function _lcd_busy *****************
  1603 ;; Defined at:
  1604 ;;		line 18 in file "lcd.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  busy            1    1[COMMON] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      unsigned char 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1618 ;;      Params:         0       0       0       0       0
  1619 ;;      Locals:         1       0       0       0       0
  1620 ;;      Temps:          1       0       0       0       0
  1621 ;;      Totals:         2       0       0       0       0
  1622 ;;Total ram usage:        2 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_lcd_gotoxy
  1628 ;;		_lcd_putc
  1629 ;;		_lcd_init
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _lcd_busy
  1635  05BB                     _lcd_busy:
  1636  05BB                     l1012:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _lcd_busy: [wreg+status,2]
  1639                           
  1640                           
  1641                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1642  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  1643  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  1644  05BD  1608               	bsf	8,4	;volatile
  1645                           
  1646                           ;lcd.c: 25:  TRISD5 = 1;
  1647  05BE  1688               	bsf	8,5	;volatile
  1648                           
  1649                           ;lcd.c: 26:  TRISD6 = 1;
  1650  05BF  1708               	bsf	8,6	;volatile
  1651                           
  1652                           ;lcd.c: 27:  TRISD7 = 1;
  1653  05C0  1788               	bsf	8,7	;volatile
  1654                           
  1655                           ;lcd.c: 29:  RD2 = 1;
  1656  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1657  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1658  05C3  1508               	bsf	8,2	;volatile
  1659                           
  1660                           ;lcd.c: 30:  RD1 = 0;
  1661  05C4  1088               	bcf	8,1	;volatile
  1662  05C5                     l1014:
  1663                           
  1664                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1665  05C5  3006               	movlw	6
  1666  05C6  00F0               	movwf	??_lcd_busy
  1667  05C7                     u697:
  1668  05C7  0BF0               	decfsz	??_lcd_busy,f
  1669  05C8  2DC7               	goto	u697
  1670  05C9  0000               	nop
  1671  05CA                     l1016:
  1672                           
  1673                           ;lcd.c: 32:  RD3 = 1;
  1674  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1675  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1676  05CC  1588               	bsf	8,3	;volatile
  1677                           
  1678                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1679  05CD  3006               	movlw	6
  1680  05CE  00F0               	movwf	??_lcd_busy
  1681  05CF                     u707:
  1682  05CF  0BF0               	decfsz	??_lcd_busy,f
  1683  05D0  2DCF               	goto	u707
  1684  05D1  0000               	nop
  1685  05D2                     l1018:
  1686                           
  1687                           ;lcd.c: 35:  busy = RD7;
  1688  05D2  3000               	movlw	0
  1689  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1690  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1691  05D5  1B88               	btfsc	8,7	;volatile
  1692  05D6  3001               	movlw	1
  1693  05D7  00F1               	movwf	lcd_busy@busy
  1694  05D8                     l1020:
  1695                           
  1696                           ;lcd.c: 37:  RD3 = 0;
  1697  05D8  1188               	bcf	8,3	;volatile
  1698  05D9                     l1022:
  1699                           
  1700                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1701  05D9  3006               	movlw	6
  1702  05DA  00F0               	movwf	??_lcd_busy
  1703  05DB                     u717:
  1704  05DB  0BF0               	decfsz	??_lcd_busy,f
  1705  05DC  2DDB               	goto	u717
  1706  05DD  0000               	nop
  1707  05DE                     l1024:
  1708                           
  1709                           ;lcd.c: 39:  RD3 = 1;
  1710  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1711  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1712  05E0  1588               	bsf	8,3	;volatile
  1713  05E1                     l1026:
  1714                           
  1715                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1716  05E1  3006               	movlw	6
  1717  05E2  00F0               	movwf	??_lcd_busy
  1718  05E3                     u727:
  1719  05E3  0BF0               	decfsz	??_lcd_busy,f
  1720  05E4  2DE3               	goto	u727
  1721  05E5  0000               	nop
  1722  05E6                     l1028:
  1723                           
  1724                           ;lcd.c: 41:  RD3 = 0;
  1725  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1726  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1727  05E8  1188               	bcf	8,3	;volatile
  1728  05E9                     l1030:
  1729                           
  1730                           ;lcd.c: 43:  return busy;
  1731  05E9  0871               	movf	lcd_busy@busy,w
  1732  05EA                     l60:
  1733  05EA  0008               	return
  1734  05EB                     __end_of_lcd_busy:
  1735  007E                     btemp	set	126	;btemp
  1736  007E                     wtemp0	set	126
  1737                           
  1738                           	psect	config
  1739                           
  1740                           ;Config register CONFIG1 @ 0x2007
  1741                           ;	Oscillator Selection bits
  1742                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1743                           ;	Watchdog Timer Enable bit
  1744                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1745                           ;	Power-up Timer Enable bit
  1746                           ;	PWRTE = OFF, PWRT disabled
  1747                           ;	RE3/MCLR pin function select bit
  1748                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1749                           ;	Code Protection bit
  1750                           ;	CP = OFF, Program memory code protection is disabled
  1751                           ;	Data Code Protection bit
  1752                           ;	CPD = OFF, Data memory code protection is disabled
  1753                           ;	Brown Out Reset Selection bits
  1754                           ;	BOREN = OFF, BOR disabled
  1755                           ;	Internal External Switchover bit
  1756                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1757                           ;	Fail-Safe Clock Monitor Enabled bit
  1758                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1759                           ;	Low Voltage Programming Enable bit
  1760                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1761                           ;	In-Circuit Debugger Mode bit
  1762                           ;	DEBUG = 0x1, unprogrammed default
  1763  2007                     	org	8199
  1764  2007  20F2               	dw	8434
  1765                           
  1766                           ;Config register CONFIG2 @ 0x2008
  1767                           ;	Brown-out Reset Selection bit
  1768                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1769                           ;	Flash Program Memory Self Write Enable bits
  1770                           ;	WRT = OFF, Write protection off
  1771  2008                     	org	8200
  1772  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    91
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 17
		 -> main@class(CODE[13]), main@HKTT(CODE[13]), main@your_live(CODE[17]), main@your_born(CODE[17]), 
		 -> main@MSSV(CODE[14]), main@your_name(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8005
                                              1 BANK0      3     3      0
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2808
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1561
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1071
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1     937
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 06 17:52:39 2021

                      pc 0002                       l27 0756                       l60 05EA  
                     l71 05FB                       l73 0623                       l81 05BA  
                     l68 0667                       l99 06C3   __end_of_lcd_put_nibble 0668  
                     fsr 0004            ?_lcd_put_byte 0073                      l105 0594  
                    l123 07FB                      l996 0625                      l998 062B  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      u400 0654                      u401 0650  
                    u340 0636                      u420 05F7                      u500 07C1  
                    u341 0632                      u421 05F6                      u501 07C0  
                    u414 0657                      u510 07D5                      u511 07D4  
                    u360 0640                      u520 07E7                      u440 059B  
                    u361 063C                      u521 07E6                      u441 059A  
                    u354 0639                      u530 07FB                      u450 05BA  
                    u435 0611                      u531 07FA                      u451 05B9  
                    u380 064A                      u460 067C                      u540 0594  
                    u381 0646                      u461 067B                      u541 0593  
                    u374 0643                      u470 069A                      u471 0699  
                    u607 0750                      u480 06AF                      u617 0766  
                    u481 06AE                      u394 064D                      u490 07AD  
                    u707 05CF                      u491 07AC                      u627 077A  
                    u717 05DB                      u637 0789                      u727 05E3  
                    u647 0798                      u657 0600                      u667 0608  
                    u587 06F2                      u677 0659                      u597 0721  
                    u687 0661                      u697 05C7                      fsr0 0004  
                   l1000 062F                     l1010 0664                     l1002 0639  
                   l1020 05D8                     l1012 05BB                     l1004 0643  
                   l1100 078E                     l1030 05E9                     l1022 05D9  
                   l1014 05C5                     l1006 064D                     l1110 07C1  
                   l1102 079D                     l1024 05DE                     l1016 05CA  
                   l1008 065C                     l1040 05FE                     l1120 07F1  
                   l1112 07CB                     l1104 07A3                     l1026 05E1  
                   l1018 05D2                     l1042 0603                     l1034 05EC  
                   l1114 07D5                     l1106 07AD                     l1050 0596  
                   l1122 0575                     l1028 05E6                     l1044 060B  
                   l1036 05F2                     l1116 07DD                     l1108 07B7  
                   l1060 05B0                     l1052 059B                     l1124 0576  
                   l1140 06DC                     l1046 060E                     l1038 05F7  
                   l1118 07E7                     l1054 05A0                     l1070 0686  
                   l1062 0669                     l1126 0582                     l1150 0705  
                   l1142 06E4                     l1134 06C4                     l1048 061C  
                   l1056 05A1                     l1216 06B8                     l1072 0690  
                   l1064 066A                     l1128 0588                     l1160 0734  
                   l1152 070B                     l1144 06EA                     l1136 06C9  
                   l1090 076E                     l1058 05A5                     l1074 069B  
                   l1066 0672                     l1162 073A                     l1154 0713  
                   l1146 06F8                     l1138 06CF                     l1092 076F  
                   l1084 0759                     l1076 06A5                     l1068 067D  
                   l1164 0748                     l1156 0719                     l1148 06FE  
                   l1094 0770                     l1086 0762                     l1078 06B0  
                   l1158 0727                     l1096 0776                     l1088 076B  
                   l1098 0785                     _main 06C4             lcd_busy@busy 0071  
                   btemp 007E                     start 0000          ?_lcd_put_nibble 0070  
         ??_lcd_put_byte 0074                    ?_main 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0759            lcd_gotoxy@col 0078            lcd_gotoxy@row 0076  
     lcd_put_nibble@temp 0072                   ??_main 0021                   _TRISD1 0441  
                 _TRISD2 0442                   _TRISD3 0443                   _TRISD4 0444  
                 _TRISD5 0445                   _TRISD6 0446                   _TRISD7 0447  
       __end_of_lcd_busy 05EB         __end_of_lcd_init 07FC         __end_of_lcd_putc 06C4  
       __end_of_lcd_puts 0595            lcd_put_byte@b 0073         __end_ofmain@HKTT 0064  
       __end_ofmain@MSSV 004A  __end_of__initialization 07FC     __end_of_lcd_put_byte 0624  
         __pcstackCOMMON 0070            main@your_born 001A            main@your_name 002B  
          main@your_live 0009        lcd_gotoxy@address 0079         ??_lcd_put_nibble 0070  
             __pmaintext 06C4               _lcd_gotoxy 0595                ?_lcd_busy 0070  
              ?_lcd_init 0070                ?_lcd_putc 0070                ?_lcd_puts 0070  
             __stringtab 0003                  __ptext1 0572                  __ptext2 0668  
                __ptext3 0595                  __ptext4 0759                  __ptext5 05EB  
                __ptext6 0624                  __ptext7 05BB    __size_of_lcd_put_byte 0039  
             ??_lcd_busy 0070               ??_lcd_init 0076               ??_lcd_putc 007A  
             ??_lcd_puts 007D     end_of_initialization 07FC           lcd_put_byte@rs 0075  
      __end_ofmain@class 0057             _lcd_put_byte 05EB              ?_lcd_gotoxy 0076  
    start_initialization 07FC      __size_of_lcd_gotoxy 0026                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_lcd_busy 0030        __size_of_lcd_init 00A3  
      __size_of_lcd_putc 005C        __size_of_lcd_puts 0023                __pstrings 0003  
            __stringbase 0008  __size_of_lcd_put_nibble 0044                main@class 004A  
              lcd_putc@c 007C                lcd_puts@s 0020             ??_lcd_gotoxy 0077  
  __end_ofmain@your_born 002B    __end_ofmain@your_name 003C    __end_ofmain@your_live 001A  
     __end_of_lcd_gotoxy 05BB       __end_of__stringtab 0009                 _lcd_busy 05BB  
               _lcd_init 0759                 _lcd_putc 0668                 _lcd_puts 0572  
          __size_of_main 0095                 main@HKTT 0057                 main@MSSV 003C  
        lcd_put_nibble@b 0071                stringcode 0003           _lcd_put_nibble 0624  
               stringdir 0003                 stringtab 0003  
