

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 06 18:20:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289                           
   290                           	psect	strings
   291  0003                     __pstrings:
   292  0003                     stringtab:
   293  0003                     __stringtab:
   294  0003                     stringcode:	
   295                           ;	String table - string pointers are 1 byte each
   296                           
   297  0003                     stringdir:
   298  0003  3000               	movlw	high stringdir
   299  0004  008A               	movwf	10
   300  0005  0804               	movf	4,w
   301  0006  0A84               	incf	4,f
   302  0007  0782               	addwf	2,f
   303  0008                     __stringbase:
   304  0008  3400               	retlw	0
   305  0009                     __end_of__stringtab:
   306  0009                     main@special_name_born_live:
   307  0009  3400               	retlw	0
   308  000A  340C               	retlw	12
   309  000B  3412               	retlw	18
   310  000C  3412               	retlw	18
   311  000D  340F               	retlw	15
   312  000E  3400               	retlw	0
   313  000F  3404               	retlw	4
   314  0010  3400               	retlw	0
   315  0011  3408               	retlw	8
   316  0012  3404               	retlw	4
   317  0013  3400               	retlw	0
   318  0014  3412               	retlw	18
   319  0015  3412               	retlw	18
   320  0016  3412               	retlw	18
   321  0017  340C               	retlw	12
   322  0018  3400               	retlw	0
   323  0019  3408               	retlw	8
   324  001A  3404               	retlw	4
   325  001B  3400               	retlw	0
   326  001C  340C               	retlw	12
   327  001D  3412               	retlw	18
   328  001E  3412               	retlw	18
   329  001F  340F               	retlw	15
   330  0020  3400               	retlw	0
   331  0021  3406               	retlw	6
   332  0022  3401               	retlw	1
   333  0023  340E               	retlw	14
   334  0024  3411               	retlw	17
   335  0025  3411               	retlw	17
   336  0026  3411               	retlw	17
   337  0027  340E               	retlw	14
   338  0028  3400               	retlw	0
   339  0029  340E               	retlw	14
   340  002A  3409               	retlw	9
   341  002B  3409               	retlw	9
   342  002C  341D               	retlw	29
   343  002D  3409               	retlw	9
   344  002E  3409               	retlw	9
   345  002F  340E               	retlw	14
   346  0030  3400               	retlw	0
   347  0031  3402               	retlw	2
   348  0032  340D               	retlw	13
   349  0033  3412               	retlw	18
   350  0034  340C               	retlw	12
   351  0035  3412               	retlw	18
   352  0036  3412               	retlw	18
   353  0037  340C               	retlw	12
   354  0038  3400               	retlw	0
   355  0039  3499               	retlw	153
   356  003A                     __end_ofmain@special_name_born_live:
   357  003A                     main@special_HKTT_class:
   358  003A  340E               	retlw	14
   359  003B  3409               	retlw	9
   360  003C  3409               	retlw	9
   361  003D  341D               	retlw	29
   362  003E  3409               	retlw	9
   363  003F  3409               	retlw	9
   364  0040  340E               	retlw	14
   365  0041  3400               	retlw	0
   366  0042  3408               	retlw	8
   367  0043  3404               	retlw	4
   368  0044  3400               	retlw	0
   369  0045  340C               	retlw	12
   370  0046  3412               	retlw	18
   371  0047  3412               	retlw	18
   372  0048  340C               	retlw	12
   373  0049  3400               	retlw	0
   374  004A  3401               	retlw	1
   375  004B  340A               	retlw	10
   376  004C  3414               	retlw	20
   377  004D  3400               	retlw	0
   378  004E  341C               	retlw	28
   379  004F  3414               	retlw	20
   380  0050  341F               	retlw	31
   381  0051  3400               	retlw	0
   382  0052  3401               	retlw	1
   383  0053  340D               	retlw	13
   384  0054  3405               	retlw	5
   385  0055  341C               	retlw	28
   386  0056  3414               	retlw	20
   387  0057  3414               	retlw	20
   388  0058  341C               	retlw	28
   389  0059  3400               	retlw	0
   390  005A  3499               	retlw	153
   391  005B                     __end_ofmain@special_HKTT_class:
   392  005B                     main@your_live:
   393  005B  344E               	retlw	78
   394  005C  3403               	retlw	3
   395  005D  3469               	retlw	105
   396  005E  3453               	retlw	83
   397  005F  3469               	retlw	105
   398  0060  346E               	retlw	110
   399  0061  3468               	retlw	104
   400  0062  343A               	retlw	58
   401  0063  3441               	retlw	65
   402  0064  346E               	retlw	110
   403  0065  3420               	retlw	32
   404  0066  3447               	retlw	71
   405  0067  3469               	retlw	105
   406  0068  3461               	retlw	97
   407  0069  346E               	retlw	110
   408  006A  3467               	retlw	103
   409  006B  340A               	retlw	10
   410  006C                     __end_ofmain@your_live:
   411  006C                     main@your_born:
   412  006C  344E               	retlw	78
   413  006D  3467               	retlw	103
   414  006E  3402               	retlw	2
   415  006F  3479               	retlw	121
   416  0070  3453               	retlw	83
   417  0071  3469               	retlw	105
   418  0072  346E               	retlw	110
   419  0073  3468               	retlw	104
   420  0074  343A               	retlw	58
   421  0075  3430               	retlw	48
   422  0076  3435               	retlw	53
   423  0077  342F               	retlw	47
   424  0078  3432               	retlw	50
   425  0079  3430               	retlw	48
   426  007A  3430               	retlw	48
   427  007B  3431               	retlw	49
   428  007C  340A               	retlw	10
   429  007D                     __end_ofmain@your_born:
   430  007D                     main@your_name:
   431  007D  3450               	retlw	80
   432  007E  3468               	retlw	104
   433  007F  3400               	retlw	0
   434  0080  346D               	retlw	109
   435  0081  3420               	retlw	32
   436  0082  3454               	retlw	84
   437  0083  342E               	retlw	46
   438  0084  3454               	retlw	84
   439  0085  3468               	retlw	104
   440  0086  3401               	retlw	1
   441  0087  3479               	retlw	121
   442  0088  3420               	retlw	32
   443  0089  344C               	retlw	76
   444  008A  3469               	retlw	105
   445  008B  346E               	retlw	110
   446  008C  3468               	retlw	104
   447  008D  340A               	retlw	10
   448  008E                     __end_ofmain@your_name:
   449  008E                     main@MSSV:
   450  008E  344D               	retlw	77
   451  008F  3453               	retlw	83
   452  0090  3453               	retlw	83
   453  0091  3456               	retlw	86
   454  0092  343A               	retlw	58
   455  0093  3431               	retlw	49
   456  0094  3439               	retlw	57
   457  0095  3434               	retlw	52
   458  0096  3438               	retlw	56
   459  0097  3434               	retlw	52
   460  0098  3430               	retlw	48
   461  0099  3438               	retlw	56
   462  009A  3431               	retlw	49
   463  009B  340A               	retlw	10
   464  009C  3400               	retlw	0
   465  009D                     __end_ofmain@MSSV:
   466  009D                     main@class:
   467  009D  344C               	retlw	76
   468  009E  3403               	retlw	3
   469  009F  3470               	retlw	112
   470  00A0  343A               	retlw	58
   471  00A1  3400               	retlw	0
   472  00A2  3448               	retlw	72
   473  00A3  3456               	retlw	86
   474  00A4  3454               	retlw	84
   475  00A5  3431               	retlw	49
   476  00A6  3435               	retlw	53
   477  00A7  3441               	retlw	65
   478  00A8  340A               	retlw	10
   479  00A9                     __end_ofmain@class:
   480  00A9                     main@HKTT:
   481  00A9  3448               	retlw	72
   482  00AA  344B               	retlw	75
   483  00AB  3454               	retlw	84
   484  00AC  3454               	retlw	84
   485  00AD  343A               	retlw	58
   486  00AE  3447               	retlw	71
   487  00AF  3401               	retlw	1
   488  00B0  3420               	retlw	32
   489  00B1  3456               	retlw	86
   490  00B2  3402               	retlw	2
   491  00B3  3470               	retlw	112
   492  00B4  340A               	retlw	10
   493  00B5                     __end_ofmain@HKTT:
   494  0044                     _RD4	set	68
   495  0045                     _RD5	set	69
   496  0046                     _RD6	set	70
   497  0047                     _RD7	set	71
   498  0043                     _RD3	set	67
   499  0041                     _RD1	set	65
   500  0042                     _RD2	set	66
   501  0442                     _TRISD2	set	1090
   502  0441                     _TRISD1	set	1089
   503  0443                     _TRISD3	set	1091
   504  0447                     _TRISD7	set	1095
   505  0446                     _TRISD6	set	1094
   506  0445                     _TRISD5	set	1093
   507  0444                     _TRISD4	set	1092
   508                           
   509                           	psect	cinit
   510  07FC                     start_initialization:	
   511                           ; #config settings
   512                           
   513  07FC                     __initialization:
   514  07FC                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  07FC                     __end_of__initialization:
   518  07FC  0183               	clrf	3
   519  07FD  120A  118A  2E7A   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	cstackCOMMON
   522  0070                     __pcstackCOMMON:
   523  0070                     ?_lcd_busy:
   524  0070                     ??_lcd_busy:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_lcd_putc:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_lcd_init:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_addCharSpecial:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_lcd_put_nibble:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ??_lcd_put_nibble:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_getLengthArr:	
   546                           ; 1 bytes @ 0x0
   547                           
   548                           
   549                           ; 2 bytes @ 0x0
   550  0070                     	ds	1
   551  0071                     lcd_busy@busy:
   552  0071                     lcd_put_nibble@b:	
   553                           ; 1 bytes @ 0x1
   554                           
   555                           
   556                           ; 1 bytes @ 0x1
   557  0071                     	ds	1
   558  0072                     ??_getLengthArr:
   559  0072                     getLengthArr@character:	
   560                           ; 1 bytes @ 0x2
   561                           
   562  0072                     lcd_put_nibble@temp:	
   563                           ; 1 bytes @ 0x2
   564                           
   565                           
   566                           ; 1 bytes @ 0x2
   567  0072                     	ds	1
   568  0073                     ?_lcd_put_byte:
   569  0073                     lcd_put_byte@b:	
   570                           ; 1 bytes @ 0x3
   571                           
   572  0073                     getLengthArr@i:	
   573                           ; 1 bytes @ 0x3
   574                           
   575                           
   576                           ; 2 bytes @ 0x3
   577  0073                     	ds	1
   578  0074                     ??_lcd_put_byte:
   579                           
   580                           ; 1 bytes @ 0x4
   581  0074                     	ds	1
   582  0075                     lcd_put_byte@rs:
   583                           
   584                           ; 1 bytes @ 0x5
   585  0075                     	ds	1
   586  0076                     ?_lcd_gotoxy:
   587  0076                     ??_lcd_init:	
   588                           ; 1 bytes @ 0x6
   589                           
   590  0076                     ??_addCharSpecial:	
   591                           ; 1 bytes @ 0x6
   592                           
   593  0076                     lcd_gotoxy@row:	
   594                           ; 1 bytes @ 0x6
   595                           
   596                           
   597                           ; 1 bytes @ 0x6
   598  0076                     	ds	1
   599  0077                     ??_lcd_gotoxy:
   600  0077                     addCharSpecial@i:	
   601                           ; 1 bytes @ 0x7
   602                           
   603                           
   604                           ; 2 bytes @ 0x7
   605  0077                     	ds	1
   606  0078                     lcd_gotoxy@col:
   607                           
   608                           ; 1 bytes @ 0x8
   609  0078                     	ds	1
   610  0079                     addCharSpecial@character:
   611  0079                     lcd_gotoxy@address:	
   612                           ; 1 bytes @ 0x9
   613                           
   614                           
   615                           ; 1 bytes @ 0x9
   616  0079                     	ds	1
   617  007A                     ??_lcd_putc:
   618                           
   619                           ; 1 bytes @ 0xA
   620  007A                     	ds	2
   621  007C                     lcd_putc@c:
   622                           
   623                           ; 1 bytes @ 0xC
   624  007C                     	ds	1
   625  007D                     ?_showContent:
   626  007D                     showContent@character_second:	
   627                           ; 1 bytes @ 0xD
   628                           
   629                           
   630                           ; 1 bytes @ 0xD
   631  007D                     	ds	1
   632  007E                     ??_showContent:
   633                           
   634                           	psect	cstackBANK0
   635  0020                     __pcstackBANK0:	
   636                           ; 1 bytes @ 0xE
   637                           
   638  0020                     showContent@length_1:
   639                           
   640                           ; 2 bytes @ 0x0
   641  0020                     	ds	2
   642  0022                     showContent@length_2:
   643                           
   644                           ; 2 bytes @ 0x2
   645  0022                     	ds	2
   646  0024                     showContent@character_firt:
   647                           
   648                           ; 1 bytes @ 0x4
   649  0024                     	ds	1
   650  0025                     showContent@i:
   651                           
   652                           ; 2 bytes @ 0x5
   653  0025                     	ds	2
   654  0027                     ??_main:
   655                           
   656                           ; 1 bytes @ 0x7
   657  0027                     	ds	3
   658  002A                     main@length:
   659                           
   660                           ; 2 bytes @ 0xA
   661  002A                     	ds	2
   662                           
   663                           	psect	maintext
   664  067A                     __pmaintext:	
   665 ;;
   666 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   667 ;;
   668 ;; *************** function _main *****************
   669 ;; Defined at:
   670 ;;		line 67 in file "newmain.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  length          2   10[BANK0 ] unsigned int 
   675 ;;  i               2    0        unsigned int 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : B00/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   685 ;;      Params:         0       0       0       0       0
   686 ;;      Locals:         0       2       0       0       0
   687 ;;      Temps:          0       3       0       0       0
   688 ;;      Totals:         0       5       0       0       0
   689 ;;Total ram usage:        5 bytes
   690 ;; Hardware stack levels required when called: 5
   691 ;; This function calls:
   692 ;;		_addCharSpecial
   693 ;;		_lcd_init
   694 ;;		_showContent
   695 ;; This function is called by:
   696 ;;		Startup code after reset
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           
   701                           ;psect for function _main
   702  067A                     _main:
   703  067A                     l1248:	
   704                           ;incstack = 0
   705                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   706                           
   707  067A  1283               	bcf	3,5	;RP0=0, select bank0
   708  067B  1303               	bcf	3,6	;RP1=0, select bank0
   709  067C  01AA               	clrf	main@length
   710  067D  01AB               	clrf	main@length+1
   711  067E                     l1250:
   712                           
   713                           ;newmain.c: 93:     lcd_init();
   714  067E  120A  118A  2759  120A  118A  	fcall	_lcd_init
   715  0683                     l1252:
   716                           
   717                           ;newmain.c: 94:     addCharSpecial(special_name_born_live);
   718  0683  3001               	movlw	(low ((main@special_name_born_live-__stringbase)| (0+32768)))& (0+255)
   719  0684  120A  118A  25D7  120A  118A  	fcall	_addCharSpecial
   720  0689                     l1254:
   721                           
   722                           ;newmain.c: 95:     showContent(your_name, MSSV);
   723  0689  3086               	movlw	(low ((main@MSSV-__stringbase)| (0+32768)))& (0+255)
   724  068A  1283               	bcf	3,5	;RP0=0, select bank0
   725  068B  1303               	bcf	3,6	;RP1=0, select bank0
   726  068C  00A7               	movwf	??_main
   727  068D  0827               	movf	??_main,w
   728  068E  00FD               	movwf	showContent@character_second
   729  068F  3075               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   730  0690  120A  118A  26E0  120A  118A  	fcall	_showContent
   731  0695                     l1256:
   732                           
   733                           ;newmain.c: 96:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   734  0695  300B               	movlw	11
   735  0696  1283               	bcf	3,5	;RP0=0, select bank0
   736  0697  1303               	bcf	3,6	;RP1=0, select bank0
   737  0698  00A9               	movwf	??_main+2
   738  0699  3026               	movlw	38
   739  069A  00A8               	movwf	??_main+1
   740  069B  305D               	movlw	93
   741  069C  00A7               	movwf	??_main
   742  069D                     u707:
   743  069D  0BA7               	decfsz	??_main,f
   744  069E  2E9D               	goto	u707
   745  069F  0BA8               	decfsz	??_main+1,f
   746  06A0  2E9D               	goto	u707
   747  06A1  0BA9               	decfsz	??_main+2,f
   748  06A2  2E9D               	goto	u707
   749  06A3                     l1258:
   750                           
   751                           ;newmain.c: 97:     showContent(your_born, your_live);
   752  06A3  3053               	movlw	(low ((main@your_live-__stringbase)| (0+32768)))& (0+255)
   753  06A4  1283               	bcf	3,5	;RP0=0, select bank0
   754  06A5  1303               	bcf	3,6	;RP1=0, select bank0
   755  06A6  00A7               	movwf	??_main
   756  06A7  0827               	movf	??_main,w
   757  06A8  00FD               	movwf	showContent@character_second
   758  06A9  3064               	movlw	(low ((main@your_born-__stringbase)| (0+32768)))& (0+255)
   759  06AA  120A  118A  26E0  120A  118A  	fcall	_showContent
   760  06AF                     l1260:
   761                           
   762                           ;newmain.c: 98:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   763  06AF  300B               	movlw	11
   764  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   765  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   766  06B2  00A9               	movwf	??_main+2
   767  06B3  3026               	movlw	38
   768  06B4  00A8               	movwf	??_main+1
   769  06B5  305D               	movlw	93
   770  06B6  00A7               	movwf	??_main
   771  06B7                     u717:
   772  06B7  0BA7               	decfsz	??_main,f
   773  06B8  2EB7               	goto	u717
   774  06B9  0BA8               	decfsz	??_main+1,f
   775  06BA  2EB7               	goto	u717
   776  06BB  0BA9               	decfsz	??_main+2,f
   777  06BC  2EB7               	goto	u717
   778  06BD                     l1262:
   779                           
   780                           ;newmain.c: 99:     addCharSpecial(special_HKTT_class);
   781  06BD  3032               	movlw	(low ((main@special_HKTT_class-__stringbase)| (0+32768)))& (0+255)
   782  06BE  120A  118A  25D7  120A  118A  	fcall	_addCharSpecial
   783  06C3                     l1264:
   784                           
   785                           ;newmain.c: 100:     showContent(HKTT, class);
   786  06C3  3095               	movlw	(low ((main@class-__stringbase)| (0+32768)))& (0+255)
   787  06C4  1283               	bcf	3,5	;RP0=0, select bank0
   788  06C5  1303               	bcf	3,6	;RP1=0, select bank0
   789  06C6  00A7               	movwf	??_main
   790  06C7  0827               	movf	??_main,w
   791  06C8  00FD               	movwf	showContent@character_second
   792  06C9  30A1               	movlw	(low ((main@HKTT-__stringbase)| (0+32768)))& (0+255)
   793  06CA  120A  118A  26E0  120A  118A  	fcall	_showContent
   794  06CF                     l1266:
   795                           
   796                           ;newmain.c: 101:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   797  06CF  300B               	movlw	11
   798  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   799  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   800  06D2  00A9               	movwf	??_main+2
   801  06D3  3026               	movlw	38
   802  06D4  00A8               	movwf	??_main+1
   803  06D5  305D               	movlw	93
   804  06D6  00A7               	movwf	??_main
   805  06D7                     u727:
   806  06D7  0BA7               	decfsz	??_main,f
   807  06D8  2ED7               	goto	u727
   808  06D9  0BA8               	decfsz	??_main+1,f
   809  06DA  2ED7               	goto	u727
   810  06DB  0BA9               	decfsz	??_main+2,f
   811  06DC  2ED7               	goto	u727
   812  06DD                     l61:
   813  06DD  120A  118A  2800   	ljmp	start
   814  06E0                     __end_of_main:
   815                           
   816                           	psect	text1
   817  06E0                     __ptext1:	
   818 ;; *************** function _showContent *****************
   819 ;; Defined at:
   820 ;;		line 52 in file "newmain.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  character_fi    1    wreg     PTR unsigned char 
   823 ;;		 -> main@HKTT(12), main@your_born(17), main@your_name(17), 
   824 ;;  character_se    1   13[COMMON] PTR unsigned char 
   825 ;;		 -> main@class(12), main@your_live(17), main@MSSV(15), 
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  character_fi    1    4[BANK0 ] PTR unsigned char 
   828 ;;		 -> main@HKTT(12), main@your_born(17), main@your_name(17), 
   829 ;;  i               2    5[BANK0 ] unsigned int 
   830 ;;  length_2        2    2[BANK0 ] unsigned int 
   831 ;;  length_1        2    0[BANK0 ] unsigned int 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         1       0       0       0       0
   842 ;;      Locals:         0       7       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         1       7       0       0       0
   845 ;;Total ram usage:        8 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 4
   848 ;; This function calls:
   849 ;;		_getLengthArr
   850 ;;		_lcd_gotoxy
   851 ;;		_lcd_putc
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function _showContent
   859  06E0                     _showContent:
   860                           
   861                           ;incstack = 0
   862                           ; Regs used in _showContent: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   863                           ;showContent@character_firt stored from wreg
   864  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   865  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   866  06E2  00A4               	movwf	showContent@character_firt
   867  06E3                     l1182:
   868                           
   869                           ;newmain.c: 53:     unsigned int i;;newmain.c: 54:     unsigned int length_1 = getLength
      +                          Arr(character_firt);
   870  06E3  0824               	movf	showContent@character_firt,w
   871  06E4  120A  118A  24E7  120A  118A  	fcall	_getLengthArr
   872  06E9  0871               	movf	?_getLengthArr+1,w
   873  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   874  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   875  06EC  00A1               	movwf	showContent@length_1+1
   876  06ED  0870               	movf	?_getLengthArr,w
   877  06EE  00A0               	movwf	showContent@length_1
   878                           
   879                           ;newmain.c: 55:     lcd_putc('\f');
   880  06EF  300C               	movlw	12
   881  06F0  120A  118A  261E  120A  118A  	fcall	_lcd_putc
   882  06F5                     l1184:
   883                           
   884                           ;newmain.c: 56:     lcd_gotoxy(0, 0);
   885  06F5  01F6               	clrf	lcd_gotoxy@row
   886  06F6  3000               	movlw	0
   887  06F7  120A  118A  2504  120A  118A  	fcall	_lcd_gotoxy
   888  06FC                     l1186:
   889                           
   890                           ;newmain.c: 57:     for(i = 0; i < length_1; i++) {
   891  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   892  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   893  06FE  01A5               	clrf	showContent@i
   894  06FF  01A6               	clrf	showContent@i+1
   895  0700  2F16               	goto	l1192
   896  0701                     l1188:
   897                           
   898                           ;newmain.c: 58:         lcd_putc(character_firt[i]);
   899  0701  0825               	movf	showContent@i,w
   900  0702  0724               	addwf	showContent@character_firt,w
   901  0703  0084               	movwf	4
   902  0704  120A  118A  2003  120A  118A  	fcall	stringdir
   903  0709  120A  118A  261E  120A  118A  	fcall	_lcd_putc
   904  070E                     l1190:
   905                           
   906                           ;newmain.c: 59:     }
   907  070E  3001               	movlw	1
   908  070F  1283               	bcf	3,5	;RP0=0, select bank0
   909  0710  1303               	bcf	3,6	;RP1=0, select bank0
   910  0711  07A5               	addwf	showContent@i,f
   911  0712  1803               	skipnc
   912  0713  0AA6               	incf	showContent@i+1,f
   913  0714  3000               	movlw	0
   914  0715  07A6               	addwf	showContent@i+1,f
   915  0716                     l1192:
   916  0716  0821               	movf	showContent@length_1+1,w
   917  0717  0226               	subwf	showContent@i+1,w
   918  0718  1D03               	skipz
   919  0719  2F1C               	goto	u595
   920  071A  0820               	movf	showContent@length_1,w
   921  071B  0225               	subwf	showContent@i,w
   922  071C                     u595:
   923  071C  1C03               	skipc
   924  071D  2F1F               	goto	u591
   925  071E  2F20               	goto	u590
   926  071F                     u591:
   927  071F  2F01               	goto	l1188
   928  0720                     u590:
   929  0720                     l1194:
   930                           
   931                           ;newmain.c: 60:     unsigned int length_2 = getLengthArr(character_second);
   932  0720  087D               	movf	showContent@character_second,w
   933  0721  120A  118A  24E7  120A  118A  	fcall	_getLengthArr
   934  0726  0871               	movf	?_getLengthArr+1,w
   935  0727  1283               	bcf	3,5	;RP0=0, select bank0
   936  0728  1303               	bcf	3,6	;RP1=0, select bank0
   937  0729  00A3               	movwf	showContent@length_2+1
   938  072A  0870               	movf	?_getLengthArr,w
   939  072B  00A2               	movwf	showContent@length_2
   940  072C                     l1196:
   941                           
   942                           ;newmain.c: 61:     lcd_gotoxy(0, 1);
   943  072C  01F6               	clrf	lcd_gotoxy@row
   944  072D  0AF6               	incf	lcd_gotoxy@row,f
   945  072E  3000               	movlw	0
   946  072F  120A  118A  2504  120A  118A  	fcall	_lcd_gotoxy
   947  0734                     l1198:
   948                           
   949                           ;newmain.c: 62:     for(i = 0; i < length_2; i++) {
   950  0734  1283               	bcf	3,5	;RP0=0, select bank0
   951  0735  1303               	bcf	3,6	;RP1=0, select bank0
   952  0736  01A5               	clrf	showContent@i
   953  0737  01A6               	clrf	showContent@i+1
   954  0738  2F4E               	goto	l1204
   955  0739                     l1200:
   956                           
   957                           ;newmain.c: 63:         lcd_putc(character_second[i]);
   958  0739  0825               	movf	showContent@i,w
   959  073A  077D               	addwf	showContent@character_second,w
   960  073B  0084               	movwf	4
   961  073C  120A  118A  2003  120A  118A  	fcall	stringdir
   962  0741  120A  118A  261E  120A  118A  	fcall	_lcd_putc
   963  0746                     l1202:
   964                           
   965                           ;newmain.c: 64:     }
   966  0746  3001               	movlw	1
   967  0747  1283               	bcf	3,5	;RP0=0, select bank0
   968  0748  1303               	bcf	3,6	;RP1=0, select bank0
   969  0749  07A5               	addwf	showContent@i,f
   970  074A  1803               	skipnc
   971  074B  0AA6               	incf	showContent@i+1,f
   972  074C  3000               	movlw	0
   973  074D  07A6               	addwf	showContent@i+1,f
   974  074E                     l1204:
   975  074E  0823               	movf	showContent@length_2+1,w
   976  074F  0226               	subwf	showContent@i+1,w
   977  0750  1D03               	skipz
   978  0751  2F54               	goto	u605
   979  0752  0822               	movf	showContent@length_2,w
   980  0753  0225               	subwf	showContent@i,w
   981  0754                     u605:
   982  0754  1C03               	skipc
   983  0755  2F57               	goto	u601
   984  0756  2F58               	goto	u600
   985  0757                     u601:
   986  0757  2F39               	goto	l1200
   987  0758                     u600:
   988  0758                     l40:
   989  0758  0008               	return
   990  0759                     __end_of_showContent:
   991                           
   992                           	psect	text2
   993  061E                     __ptext2:	
   994 ;; *************** function _lcd_putc *****************
   995 ;; Defined at:
   996 ;;		line 190 in file "lcd.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  c               1    wreg     unsigned char 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  c               1   12[COMMON] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       0       0       0       0
  1011 ;;      Locals:         1       0       0       0       0
  1012 ;;      Temps:          2       0       0       0       0
  1013 ;;      Totals:         3       0       0       0       0
  1014 ;;Total ram usage:        3 bytes
  1015 ;; Hardware stack levels used: 1
  1016 ;; Hardware stack levels required when called: 3
  1017 ;; This function calls:
  1018 ;;		_lcd_busy
  1019 ;;		_lcd_gotoxy
  1020 ;;		_lcd_put_byte
  1021 ;; This function is called by:
  1022 ;;		_showContent
  1023 ;;		_lcd_puts
  1024 ;;		_lcd_String_Delay
  1025 ;;		_putch
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _lcd_putc
  1031  061E                     _lcd_putc:
  1032                           
  1033                           ;incstack = 0
  1034                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1035                           ;lcd_putc@c stored from wreg
  1036  061E  00FC               	movwf	lcd_putc@c
  1037  061F                     l1146:
  1038                           
  1039                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1040  061F  2E66               	goto	l1162
  1041  0620                     l1148:
  1042                           
  1043                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1044  0620  01F3               	clrf	lcd_put_byte@b
  1045  0621  0AF3               	incf	lcd_put_byte@b,f
  1046  0622  3000               	movlw	0
  1047  0623  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1048  0628                     l1150:	
  1049                           ;lcd.c: 199:    while(lcd_busy());
  1050                           
  1051  0628  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1052  062D  3A00               	xorlw	0
  1053  062E  1D03               	skipz
  1054  062F  2E31               	goto	u531
  1055  0630  2E32               	goto	u530
  1056  0631                     u531:
  1057  0631  2E28               	goto	l1150
  1058  0632                     u530:
  1059  0632  2E79               	goto	l133
  1060  0633                     l1152:
  1061                           
  1062                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1063  0633  01F6               	clrf	lcd_gotoxy@row
  1064  0634  0AF6               	incf	lcd_gotoxy@row,f
  1065  0635  3000               	movlw	0
  1066  0636  120A  118A  2504  120A  118A  	fcall	_lcd_gotoxy
  1067                           
  1068                           ;lcd.c: 203:    break;
  1069  063B  2E79               	goto	l133
  1070  063C                     l1154:
  1071                           
  1072                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1073  063C  3010               	movlw	16
  1074  063D  00FA               	movwf	??_lcd_putc
  1075  063E  087A               	movf	??_lcd_putc,w
  1076  063F  00F3               	movwf	lcd_put_byte@b
  1077  0640  3000               	movlw	0
  1078  0641  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1079  0646                     l1156:	
  1080                           ;lcd.c: 206:    while(lcd_busy());
  1081                           
  1082  0646  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1083  064B  3A00               	xorlw	0
  1084  064C  1D03               	skipz
  1085  064D  2E4F               	goto	u541
  1086  064E  2E50               	goto	u540
  1087  064F                     u541:
  1088  064F  2E46               	goto	l1156
  1089  0650                     u540:
  1090  0650  2E79               	goto	l133
  1091  0651                     l1158:
  1092                           
  1093                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1094  0651  087C               	movf	lcd_putc@c,w
  1095  0652  00FA               	movwf	??_lcd_putc
  1096  0653  087A               	movf	??_lcd_putc,w
  1097  0654  00F3               	movwf	lcd_put_byte@b
  1098  0655  3001               	movlw	1
  1099  0656  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1100  065B                     l1160:	
  1101                           ;lcd.c: 212:     while(lcd_busy());
  1102                           
  1103  065B  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1104  0660  3A00               	xorlw	0
  1105  0661  1D03               	skipz
  1106  0662  2E64               	goto	u551
  1107  0663  2E65               	goto	u550
  1108  0664                     u551:
  1109  0664  2E5B               	goto	l1160
  1110  0665                     u550:
  1111  0665  2E79               	goto	l133
  1112  0666                     l1162:
  1113  0666  087C               	movf	lcd_putc@c,w
  1114  0667  00FA               	movwf	??_lcd_putc
  1115  0668  01FB               	clrf	??_lcd_putc+1
  1116                           
  1117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1118                           ; Switch size 1, requested type "simple"
  1119                           ; Number of cases is 1, Range of values is 0 to 0
  1120                           ; switch strategies available:
  1121                           ; Name         Instructions Cycles
  1122                           ; simple_byte            4     3 (average)
  1123                           ; direct_byte           11     8 (fixed)
  1124                           ; jumptable            260     6 (fixed)
  1125                           ;	Chosen strategy is simple_byte
  1126  0669  087B               	movf	??_lcd_putc+1,w
  1127  066A  3A00               	xorlw	0	; case 0
  1128  066B  1903               	skipnz
  1129  066C  2E6E               	goto	l1326
  1130  066D  2E51               	goto	l1158
  1131  066E                     l1326:
  1132                           
  1133                           ; Switch size 1, requested type "simple"
  1134                           ; Number of cases is 3, Range of values is 8 to 12
  1135                           ; switch strategies available:
  1136                           ; Name         Instructions Cycles
  1137                           ; simple_byte           10     6 (average)
  1138                           ; direct_byte           26    11 (fixed)
  1139                           ; jumptable            263     9 (fixed)
  1140                           ;	Chosen strategy is simple_byte
  1141  066E  087A               	movf	??_lcd_putc,w
  1142  066F  3A08               	xorlw	8	; case 8
  1143  0670  1903               	skipnz
  1144  0671  2E3C               	goto	l1154
  1145  0672  3A02               	xorlw	2	; case 10
  1146  0673  1903               	skipnz
  1147  0674  2E33               	goto	l1152
  1148  0675  3A06               	xorlw	6	; case 12
  1149  0676  1903               	skipnz
  1150  0677  2E20               	goto	l1148
  1151  0678  2E51               	goto	l1158
  1152  0679                     l133:
  1153  0679  0008               	return
  1154  067A                     __end_of_lcd_putc:
  1155                           
  1156                           	psect	text3
  1157  0504                     __ptext3:	
  1158 ;; *************** function _lcd_gotoxy *****************
  1159 ;; Defined at:
  1160 ;;		line 167 in file "lcd.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  col             1    wreg     unsigned char 
  1163 ;;  row             1    6[COMMON] unsigned char 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  col             1    8[COMMON] unsigned char 
  1166 ;;  address         1    9[COMMON] unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, pclath, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         1       0       0       0       0
  1177 ;;      Locals:         2       0       0       0       0
  1178 ;;      Temps:          1       0       0       0       0
  1179 ;;      Totals:         4       0       0       0       0
  1180 ;;Total ram usage:        4 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 2
  1183 ;; This function calls:
  1184 ;;		_lcd_busy
  1185 ;;		_lcd_put_byte
  1186 ;; This function is called by:
  1187 ;;		_showContent
  1188 ;;		_lcd_putc
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           
  1193                           ;psect for function _lcd_gotoxy
  1194  0504                     _lcd_gotoxy:
  1195                           
  1196                           ;incstack = 0
  1197                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1198                           ;lcd_gotoxy@col stored from wreg
  1199  0504  00F8               	movwf	lcd_gotoxy@col
  1200  0505                     l1122:
  1201                           
  1202                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1203  0505  0876               	movf	lcd_gotoxy@row,w
  1204  0506  1903               	btfsc	3,2
  1205  0507  2D09               	goto	u501
  1206  0508  2D0A               	goto	u500
  1207  0509                     u501:
  1208  0509  2D0F               	goto	l1126
  1209  050A                     u500:
  1210  050A                     l1124:
  1211                           
  1212                           ;lcd.c: 174:   address=0x40;
  1213  050A  3040               	movlw	64
  1214  050B  00F7               	movwf	??_lcd_gotoxy
  1215  050C  0877               	movf	??_lcd_gotoxy,w
  1216  050D  00F9               	movwf	lcd_gotoxy@address
  1217  050E  2D10               	goto	l1128
  1218  050F                     l1126:
  1219                           
  1220                           ;lcd.c: 176:   address=0;
  1221  050F  01F9               	clrf	lcd_gotoxy@address
  1222  0510                     l1128:
  1223                           
  1224                           ;lcd.c: 178:  address += col;
  1225  0510  0878               	movf	lcd_gotoxy@col,w
  1226  0511  00F7               	movwf	??_lcd_gotoxy
  1227  0512  0877               	movf	??_lcd_gotoxy,w
  1228  0513  07F9               	addwf	lcd_gotoxy@address,f
  1229  0514                     l1130:
  1230                           
  1231                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1232  0514  0879               	movf	lcd_gotoxy@address,w
  1233  0515  3880               	iorlw	128
  1234  0516  00F7               	movwf	??_lcd_gotoxy
  1235  0517  0877               	movf	??_lcd_gotoxy,w
  1236  0518  00F3               	movwf	lcd_put_byte@b
  1237  0519  3000               	movlw	0
  1238  051A  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1239  051F                     l1132:	
  1240                           ;lcd.c: 181:  while(lcd_busy());
  1241                           
  1242  051F  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1243  0524  3A00               	xorlw	0
  1244  0525  1D03               	skipz
  1245  0526  2D28               	goto	u511
  1246  0527  2D29               	goto	u510
  1247  0528                     u511:
  1248  0528  2D1F               	goto	l1132
  1249  0529                     u510:
  1250  0529                     l115:
  1251  0529  0008               	return
  1252  052A                     __end_of_lcd_gotoxy:
  1253                           
  1254                           	psect	text4
  1255  04E7                     __ptext4:	
  1256 ;; *************** function _getLengthArr *****************
  1257 ;; Defined at:
  1258 ;;		line 40 in file "newmain.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  character       1    wreg     PTR unsigned char 
  1261 ;;		 -> main@class(12), main@HKTT(12), main@your_live(17), main@your_born(17), 
  1262 ;;		 -> main@MSSV(15), main@your_name(17), 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  character       1    2[COMMON] PTR unsigned char 
  1265 ;;		 -> main@class(12), main@HKTT(12), main@your_live(17), main@your_born(17), 
  1266 ;;		 -> main@MSSV(15), main@your_name(17), 
  1267 ;;  i               2    3[COMMON] unsigned int 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  2    0[COMMON] unsigned int 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         2       0       0       0       0
  1278 ;;      Locals:         3       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0
  1280 ;;      Totals:         5       0       0       0       0
  1281 ;;Total ram usage:        5 bytes
  1282 ;; Hardware stack levels used: 2
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_showContent
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _getLengthArr
  1292  04E7                     _getLengthArr:
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1296                           ;getLengthArr@character stored from wreg
  1297  04E7  00F2               	movwf	getLengthArr@character
  1298  04E8                     l1134:
  1299                           
  1300                           ;newmain.c: 41:     unsigned int i = 0;
  1301  04E8  01F3               	clrf	getLengthArr@i
  1302  04E9  01F4               	clrf	getLengthArr@i+1
  1303  04EA                     l1136:
  1304                           
  1305                           ;newmain.c: 43:         if(character[i] == '\n')
  1306  04EA  0873               	movf	getLengthArr@i,w
  1307  04EB  0772               	addwf	getLengthArr@character,w
  1308  04EC  0084               	movwf	4
  1309  04ED  120A  118A  2003  120A  118A  	fcall	stringdir
  1310  04F2  3A0A               	xorlw	10
  1311  04F3  1D03               	skipz
  1312  04F4  2CF6               	goto	u521
  1313  04F5  2CF7               	goto	u520
  1314  04F6                     u521:
  1315  04F6  2CF8               	goto	l1140
  1316  04F7                     u520:
  1317  04F7  2CFF               	goto	l1142
  1318  04F8                     l1140:
  1319                           
  1320                           ;newmain.c: 47:         i++;
  1321  04F8  3001               	movlw	1
  1322  04F9  07F3               	addwf	getLengthArr@i,f
  1323  04FA  1803               	skipnc
  1324  04FB  0AF4               	incf	getLengthArr@i+1,f
  1325  04FC  3000               	movlw	0
  1326  04FD  07F4               	addwf	getLengthArr@i+1,f
  1327  04FE  2CEA               	goto	l1136
  1328  04FF                     l1142:
  1329                           
  1330                           ;newmain.c: 49:     return i;
  1331  04FF  0874               	movf	getLengthArr@i+1,w
  1332  0500  00F1               	movwf	?_getLengthArr+1
  1333  0501  0873               	movf	getLengthArr@i,w
  1334  0502  00F0               	movwf	?_getLengthArr
  1335  0503                     l31:
  1336  0503  0008               	return
  1337  0504                     __end_of_getLengthArr:
  1338                           
  1339                           	psect	text5
  1340  0759                     __ptext5:	
  1341 ;; *************** function _lcd_init *****************
  1342 ;; Defined at:
  1343 ;;		line 241 in file "lcd.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  i               1    0        unsigned char 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, pclath, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1357 ;;      Params:         0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0
  1359 ;;      Temps:          2       0       0       0       0
  1360 ;;      Totals:         2       0       0       0       0
  1361 ;;Total ram usage:        2 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 2
  1364 ;; This function calls:
  1365 ;;		_lcd_busy
  1366 ;;		_lcd_put_byte
  1367 ;;		_lcd_put_nibble
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _lcd_init
  1375  0759                     _lcd_init:
  1376  0759                     l1206:	
  1377                           ;incstack = 0
  1378                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1379                           
  1380                           
  1381                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1382  0759  1683               	bsf	3,5	;RP0=1, select bank1
  1383  075A  1303               	bcf	3,6	;RP1=0, select bank1
  1384  075B  1188               	bcf	8,3	;volatile
  1385                           
  1386                           ;lcd.c: 248:  TRISD1 = 0;
  1387  075C  1088               	bcf	8,1	;volatile
  1388                           
  1389                           ;lcd.c: 249:  TRISD2 = 0;
  1390  075D  1108               	bcf	8,2	;volatile
  1391                           
  1392                           ;lcd.c: 250:  TRISD4 = 0;
  1393  075E  1208               	bcf	8,4	;volatile
  1394                           
  1395                           ;lcd.c: 251:  TRISD5 = 0;
  1396  075F  1288               	bcf	8,5	;volatile
  1397                           
  1398                           ;lcd.c: 252:  TRISD6 = 0;
  1399  0760  1308               	bcf	8,6	;volatile
  1400                           
  1401                           ;lcd.c: 253:  TRISD7 = 0;
  1402  0761  1388               	bcf	8,7	;volatile
  1403  0762                     l1208:
  1404                           
  1405                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1406  0762  3014               	movlw	20
  1407  0763  00F7               	movwf	??_lcd_init+1
  1408  0764  3079               	movlw	121
  1409  0765  00F6               	movwf	??_lcd_init
  1410  0766                     u737:
  1411  0766  0BF6               	decfsz	??_lcd_init,f
  1412  0767  2F66               	goto	u737
  1413  0768  0BF7               	decfsz	??_lcd_init+1,f
  1414  0769  2F66               	goto	u737
  1415  076A  2F6B               	nop2
  1416  076B                     l1210:
  1417                           
  1418                           ;lcd.c: 257:  RD1 = 0;
  1419  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1420  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1421  076D  1088               	bcf	8,1	;volatile
  1422  076E                     l1212:
  1423                           
  1424                           ;lcd.c: 258:  RD2 = 0;
  1425  076E  1108               	bcf	8,2	;volatile
  1426  076F                     l1214:
  1427                           
  1428                           ;lcd.c: 259:  RD3 = 0;
  1429  076F  1188               	bcf	8,3	;volatile
  1430  0770                     l1216:
  1431                           
  1432                           ;lcd.c: 261:  lcd_put_nibble(3);
  1433  0770  3003               	movlw	3
  1434  0771  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1435  0776                     l1218:
  1436                           
  1437                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1438  0776  300D               	movlw	13
  1439  0777  00F7               	movwf	??_lcd_init+1
  1440  0778  30FB               	movlw	251
  1441  0779  00F6               	movwf	??_lcd_init
  1442  077A                     u747:
  1443  077A  0BF6               	decfsz	??_lcd_init,f
  1444  077B  2F7A               	goto	u747
  1445  077C  0BF7               	decfsz	??_lcd_init+1,f
  1446  077D  2F7A               	goto	u747
  1447  077E  2F7F               	nop2
  1448                           
  1449                           ;lcd.c: 263:  lcd_put_nibble(3);
  1450  077F  3003               	movlw	3
  1451  0780  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1452  0785                     l1220:
  1453                           
  1454                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1455  0785  300D               	movlw	13
  1456  0786  00F7               	movwf	??_lcd_init+1
  1457  0787  30FB               	movlw	251
  1458  0788  00F6               	movwf	??_lcd_init
  1459  0789                     u757:
  1460  0789  0BF6               	decfsz	??_lcd_init,f
  1461  078A  2F89               	goto	u757
  1462  078B  0BF7               	decfsz	??_lcd_init+1,f
  1463  078C  2F89               	goto	u757
  1464  078D  2F8E               	nop2
  1465  078E                     l1222:
  1466                           
  1467                           ;lcd.c: 265:  lcd_put_nibble(3);
  1468  078E  3003               	movlw	3
  1469  078F  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1470                           
  1471                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1472  0794  300D               	movlw	13
  1473  0795  00F7               	movwf	??_lcd_init+1
  1474  0796  30FB               	movlw	251
  1475  0797  00F6               	movwf	??_lcd_init
  1476  0798                     u767:
  1477  0798  0BF6               	decfsz	??_lcd_init,f
  1478  0799  2F98               	goto	u767
  1479  079A  0BF7               	decfsz	??_lcd_init+1,f
  1480  079B  2F98               	goto	u767
  1481  079C  2F9D               	nop2
  1482  079D                     l1224:
  1483                           
  1484                           ;lcd.c: 268:  lcd_put_nibble(2);
  1485  079D  3002               	movlw	2
  1486  079E  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1487  07A3                     l1226:	
  1488                           ;lcd.c: 269:  while(lcd_busy());
  1489                           
  1490  07A3  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1491  07A8  3A00               	xorlw	0
  1492  07A9  1D03               	skipz
  1493  07AA  2FAC               	goto	u611
  1494  07AB  2FAD               	goto	u610
  1495  07AC                     u611:
  1496  07AC  2FA3               	goto	l1226
  1497  07AD                     u610:
  1498  07AD                     l1228:
  1499                           
  1500                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1501  07AD  3028               	movlw	40
  1502  07AE  00F6               	movwf	??_lcd_init
  1503  07AF  0876               	movf	??_lcd_init,w
  1504  07B0  00F3               	movwf	lcd_put_byte@b
  1505  07B1  3000               	movlw	0
  1506  07B2  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1507  07B7                     l1230:	
  1508                           ;lcd.c: 272:  while(lcd_busy());
  1509                           
  1510  07B7  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1511  07BC  3A00               	xorlw	0
  1512  07BD  1D03               	skipz
  1513  07BE  2FC0               	goto	u621
  1514  07BF  2FC1               	goto	u620
  1515  07C0                     u621:
  1516  07C0  2FB7               	goto	l1230
  1517  07C1                     u620:
  1518  07C1                     l1232:
  1519                           
  1520                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1521  07C1  300C               	movlw	12
  1522  07C2  00F6               	movwf	??_lcd_init
  1523  07C3  0876               	movf	??_lcd_init,w
  1524  07C4  00F3               	movwf	lcd_put_byte@b
  1525  07C5  3000               	movlw	0
  1526  07C6  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1527  07CB                     l1234:	
  1528                           ;lcd.c: 275:  while(lcd_busy());
  1529                           
  1530  07CB  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1531  07D0  3A00               	xorlw	0
  1532  07D1  1D03               	skipz
  1533  07D2  2FD4               	goto	u631
  1534  07D3  2FD5               	goto	u630
  1535  07D4                     u631:
  1536  07D4  2FCB               	goto	l1234
  1537  07D5                     u630:
  1538  07D5                     l1236:
  1539                           
  1540                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1541  07D5  01F3               	clrf	lcd_put_byte@b
  1542  07D6  0AF3               	incf	lcd_put_byte@b,f
  1543  07D7  3000               	movlw	0
  1544  07D8  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1545  07DD                     l1238:	
  1546                           ;lcd.c: 278:  while(lcd_busy());
  1547                           
  1548  07DD  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1549  07E2  3A00               	xorlw	0
  1550  07E3  1D03               	skipz
  1551  07E4  2FE6               	goto	u641
  1552  07E5  2FE7               	goto	u640
  1553  07E6                     u641:
  1554  07E6  2FDD               	goto	l1238
  1555  07E7                     u640:
  1556  07E7                     l1240:
  1557                           
  1558                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1559  07E7  3006               	movlw	6
  1560  07E8  00F6               	movwf	??_lcd_init
  1561  07E9  0876               	movf	??_lcd_init,w
  1562  07EA  00F3               	movwf	lcd_put_byte@b
  1563  07EB  3000               	movlw	0
  1564  07EC  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1565  07F1                     l1242:	
  1566                           ;lcd.c: 281:  while(lcd_busy());
  1567                           
  1568  07F1  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1569  07F6  3A00               	xorlw	0
  1570  07F7  1D03               	skipz
  1571  07F8  2FFA               	goto	u651
  1572  07F9  2FFB               	goto	u650
  1573  07FA                     u651:
  1574  07FA  2FF1               	goto	l1242
  1575  07FB                     u650:
  1576  07FB                     l157:
  1577  07FB  0008               	return
  1578  07FC                     __end_of_lcd_init:
  1579                           
  1580                           	psect	text6
  1581  05D7                     __ptext6:	
  1582 ;; *************** function _addCharSpecial *****************
  1583 ;; Defined at:
  1584 ;;		line 29 in file "newmain.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  character       1    wreg     PTR unsigned char 
  1587 ;;		 -> main@special_HKTT_class(33), main@special_name_born_live(49), 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  character       1    9[COMMON] PTR unsigned char 
  1590 ;;		 -> main@special_HKTT_class(33), main@special_name_born_live(49), 
  1591 ;;  i               2    7[COMMON] unsigned int 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         3       0       0       0       0
  1603 ;;      Temps:          1       0       0       0       0
  1604 ;;      Totals:         4       0       0       0       0
  1605 ;;Total ram usage:        4 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 2
  1608 ;; This function calls:
  1609 ;;		_lcd_busy
  1610 ;;		_lcd_put_byte
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _addCharSpecial
  1618  05D7                     _addCharSpecial:
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1622                           ;addCharSpecial@character stored from wreg
  1623  05D7  00F9               	movwf	addCharSpecial@character
  1624  05D8                     l1168:
  1625                           
  1626                           ;newmain.c: 30:     unsigned int i = 0;
  1627  05D8  01F7               	clrf	addCharSpecial@i
  1628  05D9  01F8               	clrf	addCharSpecial@i+1
  1629  05DA                     l1170:
  1630                           
  1631                           ;newmain.c: 31:     lcd_put_byte(0, 0x40);
  1632  05DA  3040               	movlw	64
  1633  05DB  00F6               	movwf	??_addCharSpecial
  1634  05DC  0876               	movf	??_addCharSpecial,w
  1635  05DD  00F3               	movwf	lcd_put_byte@b
  1636  05DE  3000               	movlw	0
  1637  05DF  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1638  05E4                     l1172:	
  1639                           ;newmain.c: 32:     while(lcd_busy());
  1640                           
  1641  05E4  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1642  05E9  3A00               	xorlw	0
  1643  05EA  1D03               	skipz
  1644  05EB  2DED               	goto	u561
  1645  05EC  2DEE               	goto	u560
  1646  05ED                     u561:
  1647  05ED  2DE4               	goto	l1172
  1648  05EE                     u560:
  1649  05EE  2E10               	goto	l1180
  1650  05EF                     l1174:
  1651                           
  1652                           ;newmain.c: 34:         lcd_put_byte(1, character[i]);
  1653  05EF  0877               	movf	addCharSpecial@i,w
  1654  05F0  0779               	addwf	addCharSpecial@character,w
  1655  05F1  0084               	movwf	4
  1656  05F2  120A  118A  2003  120A  118A  	fcall	stringdir
  1657  05F7  00F6               	movwf	??_addCharSpecial
  1658  05F8  0876               	movf	??_addCharSpecial,w
  1659  05F9  00F3               	movwf	lcd_put_byte@b
  1660  05FA  3001               	movlw	1
  1661  05FB  120A  118A  255A  120A  118A  	fcall	_lcd_put_byte
  1662  0600                     l1176:	
  1663                           ;newmain.c: 35:         while(lcd_busy());
  1664                           
  1665  0600  120A  118A  252A  120A  118A  	fcall	_lcd_busy
  1666  0605  3A00               	xorlw	0
  1667  0606  1D03               	skipz
  1668  0607  2E09               	goto	u571
  1669  0608  2E0A               	goto	u570
  1670  0609                     u571:
  1671  0609  2E00               	goto	l1176
  1672  060A                     u570:
  1673  060A                     l1178:
  1674                           
  1675                           ;newmain.c: 36:         i++;
  1676  060A  3001               	movlw	1
  1677  060B  07F7               	addwf	addCharSpecial@i,f
  1678  060C  1803               	skipnc
  1679  060D  0AF8               	incf	addCharSpecial@i+1,f
  1680  060E  3000               	movlw	0
  1681  060F  07F8               	addwf	addCharSpecial@i+1,f
  1682  0610                     l1180:
  1683                           
  1684                           ;newmain.c: 33:     while(character[i] != 0x99) {
  1685  0610  0877               	movf	addCharSpecial@i,w
  1686  0611  0779               	addwf	addCharSpecial@character,w
  1687  0612  0084               	movwf	4
  1688  0613  120A  118A  2003  120A  118A  	fcall	stringdir
  1689  0618  3A99               	xorlw	153
  1690  0619  1D03               	skipz
  1691  061A  2E1C               	goto	u581
  1692  061B  2E1D               	goto	u580
  1693  061C                     u581:
  1694  061C  2DEF               	goto	l1174
  1695  061D                     u580:
  1696  061D                     l24:
  1697  061D  0008               	return
  1698  061E                     __end_of_addCharSpecial:
  1699                           
  1700                           	psect	text7
  1701  055A                     __ptext7:	
  1702 ;; *************** function _lcd_put_byte *****************
  1703 ;; Defined at:
  1704 ;;		line 134 in file "lcd.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  rs              1    wreg     unsigned char 
  1707 ;;  b               1    3[COMMON] unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  rs              1    5[COMMON] unsigned char 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         1       0       0       0       0
  1720 ;;      Locals:         1       0       0       0       0
  1721 ;;      Temps:          1       0       0       0       0
  1722 ;;      Totals:         3       0       0       0       0
  1723 ;;Total ram usage:        3 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 1
  1726 ;; This function calls:
  1727 ;;		_lcd_put_nibble
  1728 ;; This function is called by:
  1729 ;;		_addCharSpecial
  1730 ;;		_lcd_gotoxy
  1731 ;;		_lcd_putc
  1732 ;;		_lcd_init
  1733 ;;		_lcd_ShiftLeft
  1734 ;;		_lcd_ShiftRight
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           
  1739                           ;psect for function _lcd_put_byte
  1740  055A                     _lcd_put_byte:
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1744                           ;lcd_put_byte@rs stored from wreg
  1745  055A  00F5               	movwf	lcd_put_byte@rs
  1746  055B                     l1084:
  1747                           
  1748                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1749  055B  1683               	bsf	3,5	;RP0=1, select bank1
  1750  055C  1303               	bcf	3,6	;RP1=0, select bank1
  1751  055D  1208               	bcf	8,4	;volatile
  1752                           
  1753                           ;lcd.c: 140:  TRISD5 = 0;
  1754  055E  1288               	bcf	8,5	;volatile
  1755                           
  1756                           ;lcd.c: 141:  TRISD6 = 0;
  1757  055F  1308               	bcf	8,6	;volatile
  1758                           
  1759                           ;lcd.c: 142:  TRISD7 = 0;
  1760  0560  1388               	bcf	8,7	;volatile
  1761  0561                     l1086:
  1762                           
  1763                           ;lcd.c: 144:  if(rs)
  1764  0561  0875               	movf	lcd_put_byte@rs,w
  1765  0562  1903               	btfsc	3,2
  1766  0563  2D65               	goto	u481
  1767  0564  2D66               	goto	u480
  1768  0565                     u481:
  1769  0565  2D6A               	goto	l105
  1770  0566                     u480:
  1771  0566                     l1088:
  1772                           
  1773                           ;lcd.c: 145:   RD1 = 1;
  1774  0566  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0567  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0568  1488               	bsf	8,1	;volatile
  1777  0569  2D6D               	goto	l1090
  1778  056A                     l105:	
  1779                           ;lcd.c: 146:  else
  1780                           
  1781                           
  1782                           ;lcd.c: 147:   RD1 = 0;
  1783  056A  1283               	bcf	3,5	;RP0=0, select bank0
  1784  056B  1303               	bcf	3,6	;RP1=0, select bank0
  1785  056C  1088               	bcf	8,1	;volatile
  1786  056D                     l1090:
  1787                           
  1788                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1789  056D  3006               	movlw	6
  1790  056E  00F4               	movwf	??_lcd_put_byte
  1791  056F                     u777:
  1792  056F  0BF4               	decfsz	??_lcd_put_byte,f
  1793  0570  2D6F               	goto	u777
  1794  0571  0000               	nop
  1795  0572                     l1092:
  1796                           
  1797                           ;lcd.c: 150:  RD2 = 0;
  1798  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0573  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0574  1108               	bcf	8,2	;volatile
  1801                           
  1802                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1803  0575  3006               	movlw	6
  1804  0576  00F4               	movwf	??_lcd_put_byte
  1805  0577                     u787:
  1806  0577  0BF4               	decfsz	??_lcd_put_byte,f
  1807  0578  2D77               	goto	u787
  1808  0579  0000               	nop
  1809  057A                     l1094:
  1810                           
  1811                           ;lcd.c: 153:  RD3 = 0;
  1812  057A  1283               	bcf	3,5	;RP0=0, select bank0
  1813  057B  1303               	bcf	3,6	;RP1=0, select bank0
  1814  057C  1188               	bcf	8,3	;volatile
  1815  057D                     l1096:
  1816                           
  1817                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1818  057D  0873               	movf	lcd_put_byte@b,w
  1819  057E  00F4               	movwf	??_lcd_put_byte
  1820  057F  3004               	movlw	4
  1821  0580                     u495:
  1822  0580  1003               	clrc
  1823  0581  0CF4               	rrf	??_lcd_put_byte,f
  1824  0582  3EFF               	addlw	-1
  1825  0583  1D03               	skipz
  1826  0584  2D80               	goto	u495
  1827  0585  0874               	movf	??_lcd_put_byte,w
  1828  0586  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1829  058B                     l1098:
  1830                           
  1831                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1832  058B  0873               	movf	lcd_put_byte@b,w
  1833  058C  390F               	andlw	15
  1834  058D  120A  118A  2593  120A  118A  	fcall	_lcd_put_nibble
  1835  0592                     l107:
  1836  0592  0008               	return
  1837  0593                     __end_of_lcd_put_byte:
  1838                           
  1839                           	psect	text8
  1840  0593                     __ptext8:	
  1841 ;; *************** function _lcd_put_nibble *****************
  1842 ;; Defined at:
  1843 ;;		line 103 in file "lcd.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  b               1    wreg     unsigned char 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  b               1    1[COMMON] unsigned char 
  1848 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         0       0       0       0       0
  1859 ;;      Locals:         2       0       0       0       0
  1860 ;;      Temps:          1       0       0       0       0
  1861 ;;      Totals:         3       0       0       0       0
  1862 ;;Total ram usage:        3 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_lcd_put_byte
  1868 ;;		_lcd_init
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function _lcd_put_nibble
  1874  0593                     _lcd_put_nibble:
  1875                           
  1876                           ;incstack = 0
  1877                           ; Regs used in _lcd_put_nibble: [wreg]
  1878                           ;lcd_put_nibble@b stored from wreg
  1879  0593  00F1               	movwf	lcd_put_nibble@b
  1880  0594                     l1068:
  1881                           
  1882                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1883  0594  1683               	bsf	3,5	;RP0=1, select bank1
  1884  0595  1303               	bcf	3,6	;RP1=0, select bank1
  1885  0596  1208               	bcf	8,4	;volatile
  1886                           
  1887                           ;lcd.c: 110:  TRISD5 = 0;
  1888  0597  1288               	bcf	8,5	;volatile
  1889                           
  1890                           ;lcd.c: 111:  TRISD6 = 0;
  1891  0598  1308               	bcf	8,6	;volatile
  1892                           
  1893                           ;lcd.c: 112:  TRISD7 = 0;
  1894  0599  1388               	bcf	8,7	;volatile
  1895  059A                     l1070:
  1896                           
  1897                           ;lcd.c: 114:  temp.Val = b;
  1898  059A  0871               	movf	lcd_put_nibble@b,w
  1899  059B  00F0               	movwf	??_lcd_put_nibble
  1900  059C  0870               	movf	??_lcd_put_nibble,w
  1901  059D  00F2               	movwf	lcd_put_nibble@temp
  1902  059E                     l1072:
  1903                           
  1904                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1905  059E  1872               	btfsc	lcd_put_nibble@temp,0
  1906  059F  2DA1               	goto	u401
  1907  05A0  2DA5               	goto	u400
  1908  05A1                     u401:
  1909  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1910  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1911  05A3  1608               	bsf	8,4	;volatile
  1912  05A4  2DA8               	goto	u414
  1913  05A5                     u400:
  1914  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1915  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1916  05A7  1208               	bcf	8,4	;volatile
  1917  05A8                     u414:
  1918  05A8                     l1074:
  1919                           
  1920                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1921  05A8  18F2               	btfsc	lcd_put_nibble@temp,1
  1922  05A9  2DAB               	goto	u421
  1923  05AA  2DAF               	goto	u420
  1924  05AB                     u421:
  1925  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1926  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1927  05AD  1688               	bsf	8,5	;volatile
  1928  05AE  2DB2               	goto	u434
  1929  05AF                     u420:
  1930  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1931  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1932  05B1  1288               	bcf	8,5	;volatile
  1933  05B2                     u434:
  1934  05B2                     l1076:
  1935                           
  1936                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1937  05B2  1972               	btfsc	lcd_put_nibble@temp,2
  1938  05B3  2DB5               	goto	u441
  1939  05B4  2DB9               	goto	u440
  1940  05B5                     u441:
  1941  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1942  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1943  05B7  1708               	bsf	8,6	;volatile
  1944  05B8  2DBC               	goto	u454
  1945  05B9                     u440:
  1946  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  1947  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  1948  05BB  1308               	bcf	8,6	;volatile
  1949  05BC                     u454:
  1950  05BC                     l1078:
  1951                           
  1952                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1953  05BC  19F2               	btfsc	lcd_put_nibble@temp,3
  1954  05BD  2DBF               	goto	u461
  1955  05BE  2DC3               	goto	u460
  1956  05BF                     u461:
  1957  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1958  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1959  05C1  1788               	bsf	8,7	;volatile
  1960  05C2  2DC6               	goto	u474
  1961  05C3                     u460:
  1962  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1963  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1964  05C5  1388               	bcf	8,7	;volatile
  1965  05C6                     u474:
  1966                           
  1967                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1968  05C6  3006               	movlw	6
  1969  05C7  00F0               	movwf	??_lcd_put_nibble
  1970  05C8                     u797:
  1971  05C8  0BF0               	decfsz	??_lcd_put_nibble,f
  1972  05C9  2DC8               	goto	u797
  1973  05CA  0000               	nop
  1974  05CB                     l1080:
  1975                           
  1976                           ;lcd.c: 122:  RD3 = 1;
  1977  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  1978  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  1979  05CD  1588               	bsf	8,3	;volatile
  1980                           
  1981                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1982  05CE  3006               	movlw	6
  1983  05CF  00F0               	movwf	??_lcd_put_nibble
  1984  05D0                     u807:
  1985  05D0  0BF0               	decfsz	??_lcd_put_nibble,f
  1986  05D1  2DD0               	goto	u807
  1987  05D2  0000               	nop
  1988  05D3                     l1082:
  1989                           
  1990                           ;lcd.c: 124:  RD3 = 0;
  1991  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1992  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1993  05D5  1188               	bcf	8,3	;volatile
  1994  05D6                     l102:
  1995  05D6  0008               	return
  1996  05D7                     __end_of_lcd_put_nibble:
  1997                           
  1998                           	psect	text9
  1999  052A                     __ptext9:	
  2000 ;; *************** function _lcd_busy *****************
  2001 ;; Defined at:
  2002 ;;		line 18 in file "lcd.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  busy            1    1[COMMON] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      unsigned char 
  2009 ;; Registers used:
  2010 ;;		wreg, status,2
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2016 ;;      Params:         0       0       0       0       0
  2017 ;;      Locals:         1       0       0       0       0
  2018 ;;      Temps:          1       0       0       0       0
  2019 ;;      Totals:         2       0       0       0       0
  2020 ;;Total ram usage:        2 bytes
  2021 ;; Hardware stack levels used: 1
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_addCharSpecial
  2026 ;;		_lcd_gotoxy
  2027 ;;		_lcd_putc
  2028 ;;		_lcd_init
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           
  2033                           ;psect for function _lcd_busy
  2034  052A                     _lcd_busy:
  2035  052A                     l1100:	
  2036                           ;incstack = 0
  2037                           ; Regs used in _lcd_busy: [wreg+status,2]
  2038                           
  2039                           
  2040                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2041  052A  1683               	bsf	3,5	;RP0=1, select bank1
  2042  052B  1303               	bcf	3,6	;RP1=0, select bank1
  2043  052C  1608               	bsf	8,4	;volatile
  2044                           
  2045                           ;lcd.c: 25:  TRISD5 = 1;
  2046  052D  1688               	bsf	8,5	;volatile
  2047                           
  2048                           ;lcd.c: 26:  TRISD6 = 1;
  2049  052E  1708               	bsf	8,6	;volatile
  2050                           
  2051                           ;lcd.c: 27:  TRISD7 = 1;
  2052  052F  1788               	bsf	8,7	;volatile
  2053                           
  2054                           ;lcd.c: 29:  RD2 = 1;
  2055  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0532  1508               	bsf	8,2	;volatile
  2058                           
  2059                           ;lcd.c: 30:  RD1 = 0;
  2060  0533  1088               	bcf	8,1	;volatile
  2061  0534                     l1102:
  2062                           
  2063                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2064  0534  3006               	movlw	6
  2065  0535  00F0               	movwf	??_lcd_busy
  2066  0536                     u817:
  2067  0536  0BF0               	decfsz	??_lcd_busy,f
  2068  0537  2D36               	goto	u817
  2069  0538  0000               	nop
  2070  0539                     l1104:
  2071                           
  2072                           ;lcd.c: 32:  RD3 = 1;
  2073  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2074  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2075  053B  1588               	bsf	8,3	;volatile
  2076                           
  2077                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2078  053C  3006               	movlw	6
  2079  053D  00F0               	movwf	??_lcd_busy
  2080  053E                     u827:
  2081  053E  0BF0               	decfsz	??_lcd_busy,f
  2082  053F  2D3E               	goto	u827
  2083  0540  0000               	nop
  2084  0541                     l1106:
  2085                           
  2086                           ;lcd.c: 35:  busy = RD7;
  2087  0541  3000               	movlw	0
  2088  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0544  1B88               	btfsc	8,7	;volatile
  2091  0545  3001               	movlw	1
  2092  0546  00F1               	movwf	lcd_busy@busy
  2093  0547                     l1108:
  2094                           
  2095                           ;lcd.c: 37:  RD3 = 0;
  2096  0547  1188               	bcf	8,3	;volatile
  2097  0548                     l1110:
  2098                           
  2099                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2100  0548  3006               	movlw	6
  2101  0549  00F0               	movwf	??_lcd_busy
  2102  054A                     u837:
  2103  054A  0BF0               	decfsz	??_lcd_busy,f
  2104  054B  2D4A               	goto	u837
  2105  054C  0000               	nop
  2106  054D                     l1112:
  2107                           
  2108                           ;lcd.c: 39:  RD3 = 1;
  2109  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2110  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2111  054F  1588               	bsf	8,3	;volatile
  2112  0550                     l1114:
  2113                           
  2114                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2115  0550  3006               	movlw	6
  2116  0551  00F0               	movwf	??_lcd_busy
  2117  0552                     u847:
  2118  0552  0BF0               	decfsz	??_lcd_busy,f
  2119  0553  2D52               	goto	u847
  2120  0554  0000               	nop
  2121  0555                     l1116:
  2122                           
  2123                           ;lcd.c: 41:  RD3 = 0;
  2124  0555  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0556  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0557  1188               	bcf	8,3	;volatile
  2127  0558                     l1118:
  2128                           
  2129                           ;lcd.c: 43:  return busy;
  2130  0558  0871               	movf	lcd_busy@busy,w
  2131  0559                     l94:
  2132  0559  0008               	return
  2133  055A                     __end_of_lcd_busy:
  2134  007E                     btemp	set	126	;btemp
  2135  007E                     wtemp0	set	126
  2136                           
  2137                           	psect	config
  2138                           
  2139                           ;Config register CONFIG1 @ 0x2007
  2140                           ;	Oscillator Selection bits
  2141                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2142                           ;	Watchdog Timer Enable bit
  2143                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2144                           ;	Power-up Timer Enable bit
  2145                           ;	PWRTE = OFF, PWRT disabled
  2146                           ;	RE3/MCLR pin function select bit
  2147                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2148                           ;	Code Protection bit
  2149                           ;	CP = OFF, Program memory code protection is disabled
  2150                           ;	Data Code Protection bit
  2151                           ;	CPD = OFF, Data memory code protection is disabled
  2152                           ;	Brown Out Reset Selection bits
  2153                           ;	BOREN = OFF, BOR disabled
  2154                           ;	Internal External Switchover bit
  2155                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2156                           ;	Fail-Safe Clock Monitor Enabled bit
  2157                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2158                           ;	Low Voltage Programming Enable bit
  2159                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2160                           ;	In-Circuit Debugger Mode bit
  2161                           ;	DEBUG = 0x1, unprogrammed default
  2162  2007                     	org	8199
  2163  2007  20F2               	dw	8434
  2164                           
  2165                           ;Config register CONFIG2 @ 0x2008
  2166                           ;	Brown-out Reset Selection bit
  2167                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2168                           ;	Flash Program Memory Self Write Enable bits
  2169                           ;	WRT = OFF, Write protection off
  2170  2008                     	org	8200
  2171  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    172
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    showContent@character_second	PTR unsigned char  size(1) Largest target is 17
		 -> main@class(CODE[12]), main@your_live(CODE[17]), main@MSSV(CODE[15]), 

    showContent@character_firt	PTR unsigned char  size(1) Largest target is 17
		 -> main@HKTT(CODE[12]), main@your_born(CODE[17]), main@your_name(CODE[17]), 

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 17
		 -> main@class(CODE[12]), main@HKTT(CODE[12]), main@your_live(CODE[17]), main@your_born(CODE[17]), 
		 -> main@MSSV(CODE[15]), main@your_name(CODE[17]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 49
		 -> main@special_HKTT_class(CODE[33]), main@special_name_born_live(CODE[49]), 


Critical Paths under _main in COMMON

    _main->_showContent
    _showContent->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _addCharSpecial->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_showContent

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    7154
                                              7 BANK0      5     5      0
                     _addCharSpecial
                           _lcd_init
                        _showContent
 ---------------------------------------------------------------------------------
 (1) _showContent                                          8     7      1    4661
                                             13 COMMON     1     0      1
                                              0 BANK0      7     7      0
                       _getLengthArr
                         _lcd_gotoxy
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1409
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _getLengthArr                                         5     3      2     134
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _addCharSpecial                                       4     4      0    1268
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _addCharSpecial
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _showContent
     _getLengthArr
     _lcd_gotoxy
       _lcd_busy
       _lcd_put_byte
     _lcd_putc
       _lcd_busy
       _lcd_gotoxy
       _lcd_put_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 06 18:20:19 2021

                                 pc 0002                                  l31 0503  
                                l24 061D                                  l40 0758  
                                l61 06DD                                  l94 0559  
            __end_of_lcd_put_nibble 05D7                                  fsr 0004  
                   ?_addCharSpecial 0070                       ?_lcd_put_byte 0073  
                               l102 05D6                                 l105 056A  
                               l107 0592                                 l115 0529  
                               l133 0679                                 l157 07FB  
                               _RD1 0041                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u400 05A5  
                               u401 05A1                                 u420 05AF  
                               u500 050A                                 u421 05AB  
                               u501 0509                                 u414 05A8  
                               u510 0529                                 u511 0528  
                               u440 05B9                                 u520 04F7  
                               u600 0758                                 u441 05B5  
                               u521 04F6                                 u601 0757  
                               u434 05B2                                 u610 07AD  
                               u530 0632                                 u611 07AC  
                               u531 0631                                 u460 05C3  
                               u620 07C1                                 u540 0650  
                               u461 05BF                                 u621 07C0  
                               u541 064F                                 u605 0754  
                               u454 05BC                                 u630 07D5  
                               u550 0665                                 u631 07D4  
                               u551 0664                                 u480 0566  
                               u560 05EE                                 u640 07E7  
                               u481 0565                                 u561 05ED  
                               u641 07E6                                 u474 05C6  
                               u570 060A                                 u650 07FB  
                               u571 0609                                 u651 07FA  
                               u707 069D                                 u580 061D  
                               u581 061C                                 u717 06B7  
                               u590 0720                                 u807 05D0  
                               u495 0580                                 u591 071F  
                               u727 06D7                                 u817 0536  
                               u737 0766                                 u827 053E  
                               u747 077A                                 u595 071C  
                               u837 054A                                 u757 0789  
                               u847 0552                                 u767 0798  
                               u777 056F                                 u787 0577  
                               u797 05C8                                 fsr0 0004  
                              l1100 052A                                l1110 0548  
                              l1102 0534                                l1112 054D  
                              l1104 0539                                l1200 0739  
                              l1114 0550                                l1106 0541  
                              l1210 076B                                l1130 0514  
                              l1122 0505                                l1202 0746  
                              l1116 0555                                l1108 0547  
                              l1220 0785                                l1212 076E  
                              l1140 04F8                                l1132 051F  
                              l1124 050A                                l1204 074E  
                              l1118 0558                                l1070 059A  
                              l1230 07B7                                l1222 078E  
                              l1214 076F                                l1206 0759  
                              l1142 04FF                                l1134 04E8  
                              l1126 050F                                l1150 0628  
                              l1080 05CB                                l1072 059E  
                              l1240 07E7                                l1232 07C1  
                              l1224 079D                                l1216 0770  
                              l1208 0762                                l1136 04EA  
                              l1128 0510                                l1160 065B  
                              l1152 0633                                l1082 05D3  
                              l1074 05A8                                l1090 056D  
                              l1170 05DA                                l1242 07F1  
                              l1234 07CB                                l1226 07A3  
                              l1218 0776                                l1154 063C  
                              l1162 0666                                l1146 061F  
                              l1250 067E                                l1076 05B2  
                              l1068 0594                                l1092 0572  
                              l1084 055B                                l1180 0610  
                              l1172 05E4                                l1236 07D5  
                              l1228 07AD                                l1156 0646  
                              l1148 0620                                l1260 06AF  
                              l1252 0683                                l1078 05BC  
                              l1094 057A                                l1086 0561  
                              l1174 05EF                                l1238 07DD  
                              l1326 066E                                l1158 0651  
                              l1190 070E                                l1182 06E3  
                              l1262 06BD                                l1254 0689  
                              l1096 057D                                l1088 0566  
                              l1176 0600                                l1168 05D8  
                              l1192 0716                                l1184 06F5  
                              l1264 06C3                                l1256 0695  
                              l1248 067A                                l1098 058B  
                              l1178 060A                                l1194 0720  
                              l1186 06FC                                l1266 06CF  
                              l1258 06A3                                l1196 072C  
                              l1188 0701                                l1198 0734  
                              _main 067A                        lcd_busy@busy 0071  
                              btemp 007E                                start 0000  
                   ?_lcd_put_nibble 0070                      ??_lcd_put_byte 0074  
                             ?_main 0070               getLengthArr@character 0072  
                             pclath 000A                               status 0003  
                             wtemp0 007E                     __initialization 07FC  
              __end_of_getLengthArr 0504                        __end_of_main 06E0  
                     lcd_gotoxy@col 0078                       lcd_gotoxy@row 0076  
                lcd_put_nibble@temp 0072                              ??_main 0027  
                            _TRISD1 0441                              _TRISD2 0442  
                            _TRISD3 0443                              _TRISD4 0444  
                            _TRISD5 0445                              _TRISD6 0446  
                            _TRISD7 0447                    __end_of_lcd_busy 055A  
                  __end_of_lcd_init 07FC                    __end_of_lcd_putc 067A  
                      ?_showContent 007D                       lcd_put_byte@b 0073  
                  __end_ofmain@HKTT 00B5                    __end_ofmain@MSSV 009D  
           __end_of__initialization 07FC                __end_of_lcd_put_byte 0593  
                  ??_addCharSpecial 0076                      __pcstackCOMMON 0070  
                     main@your_born 006C                       main@your_name 007D  
                     main@your_live 005B                   lcd_gotoxy@address 0079  
             __size_of_getLengthArr 001D                    ??_lcd_put_nibble 0070  
                        __pmaintext 067A                          _lcd_gotoxy 0504  
         showContent@character_firt 0024                        _getLengthArr 04E7  
                         ?_lcd_busy 0070                           ?_lcd_init 0070  
                         ?_lcd_putc 0070                          __stringtab 0003  
           addCharSpecial@character 0079                             __ptext1 06E0  
                           __ptext2 061E                             __ptext3 0504  
                           __ptext4 04E7                             __ptext5 0759  
                           __ptext6 05D7                             __ptext7 055A  
                           __ptext8 0593                             __ptext9 052A  
              __size_of_showContent 0079               __size_of_lcd_put_byte 0039  
                        ??_lcd_busy 0070                          ??_lcd_init 0076  
                        ??_lcd_putc 007A                end_of_initialization 07FC  
                    lcd_put_byte@rs 0075              main@special_HKTT_class 003A  
                 __end_ofmain@class 00A9                        _lcd_put_byte 055A  
                       ?_lcd_gotoxy 0076                          main@length 002A  
               start_initialization 07FC                 __size_of_lcd_gotoxy 0026  
                         ___latbits 0002                       __pcstackBANK0 0020  
                   addCharSpecial@i 0077                   __size_of_lcd_busy 0030  
                 __size_of_lcd_init 00A3                   __size_of_lcd_putc 005C  
       showContent@character_second 007D                           __pstrings 0003  
           __size_of_addCharSpecial 0047                       ??_showContent 007E  
                       __stringbase 0008             __size_of_lcd_put_nibble 0044  
                         main@class 009D                       getLengthArr@i 0073  
                         lcd_putc@c 007C                        ??_lcd_gotoxy 0077  
    __end_ofmain@special_HKTT_class 005B               __end_ofmain@your_born 007D  
             __end_ofmain@your_name 008E               __end_ofmain@your_live 006C  
                __end_of_lcd_gotoxy 052A                  __end_of__stringtab 0009  
               __end_of_showContent 0759                            _lcd_busy 052A  
                          _lcd_init 0759                            _lcd_putc 061E  
                     __size_of_main 0066                            main@HKTT 00A9  
                          main@MSSV 008E                      _addCharSpecial 05D7  
               showContent@length_1 0020                 showContent@length_2 0022  
                   lcd_put_nibble@b 0071  __end_ofmain@special_name_born_live 003A  
        main@special_name_born_live 0009                       ?_getLengthArr 0070  
                         stringcode 0003                        showContent@i 0025  
            __end_of_addCharSpecial 061E                         _showContent 06E0  
                    _lcd_put_nibble 0593                            stringdir 0003  
                          stringtab 0003                      ??_getLengthArr 0072  
