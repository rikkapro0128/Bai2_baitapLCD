

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 02 19:00:09 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291                           
   292                           	psect	strings
   293  0003                     __pstrings:
   294  0003                     stringtab:
   295  0003                     __stringtab:
   296  0003                     stringcode:	
   297                           ;	String table - string pointers are 1 byte each
   298                           
   299  0003                     stringdir:
   300  0003  3000               	movlw	high stringdir
   301  0004  008A               	movwf	10
   302  0005  0804               	movf	4,w
   303  0006  0A84               	incf	4,f
   304  0007  0782               	addwf	2,f
   305  0008                     __stringbase:
   306  0008  3400               	retlw	0
   307  0009                     __end_of__stringtab:
   308  0009                     main@special_name_born_live:
   309  0009  3404               	retlw	4
   310  000A  3400               	retlw	0
   311  000B  3404               	retlw	4
   312  000C  3404               	retlw	4
   313  000D  3404               	retlw	4
   314  000E  3400               	retlw	0
   315  000F  3404               	retlw	4
   316  0010  3400               	retlw	0
   317  0011  3402               	retlw	2
   318  0012  3409               	retlw	9
   319  0013  3414               	retlw	20
   320  0014  3408               	retlw	8
   321  0015  3414               	retlw	20
   322  0016  3418               	retlw	24
   323  0017  340C               	retlw	12
   324  0018  3400               	retlw	0
   325  0019  3408               	retlw	8
   326  001A  3404               	retlw	4
   327  001B  3400               	retlw	0
   328  001C  340C               	retlw	12
   329  001D  3412               	retlw	18
   330  001E  3412               	retlw	18
   331  001F  340F               	retlw	15
   332  0020  3400               	retlw	0
   333  0021  3406               	retlw	6
   334  0022  3401               	retlw	1
   335  0023  340E               	retlw	14
   336  0024  3411               	retlw	17
   337  0025  3411               	retlw	17
   338  0026  3411               	retlw	17
   339  0027  340E               	retlw	14
   340  0028  3400               	retlw	0
   341  0029  340E               	retlw	14
   342  002A  3409               	retlw	9
   343  002B  3409               	retlw	9
   344  002C  341D               	retlw	29
   345  002D  3409               	retlw	9
   346  002E  3409               	retlw	9
   347  002F  340E               	retlw	14
   348  0030  3400               	retlw	0
   349  0031  3402               	retlw	2
   350  0032  340D               	retlw	13
   351  0033  3412               	retlw	18
   352  0034  340C               	retlw	12
   353  0035  3412               	retlw	18
   354  0036  3412               	retlw	18
   355  0037  340C               	retlw	12
   356  0038  3400               	retlw	0
   357  0039  3499               	retlw	153
   358  003A                     __end_ofmain@special_name_born_live:
   359  003A                     main@special_HKTT_class:
   360  003A  340E               	retlw	14
   361  003B  3409               	retlw	9
   362  003C  3409               	retlw	9
   363  003D  341D               	retlw	29
   364  003E  3409               	retlw	9
   365  003F  3409               	retlw	9
   366  0040  340E               	retlw	14
   367  0041  3400               	retlw	0
   368  0042  3408               	retlw	8
   369  0043  3404               	retlw	4
   370  0044  3400               	retlw	0
   371  0045  340C               	retlw	12
   372  0046  3412               	retlw	18
   373  0047  3412               	retlw	18
   374  0048  340C               	retlw	12
   375  0049  3400               	retlw	0
   376  004A  3401               	retlw	1
   377  004B  340A               	retlw	10
   378  004C  3414               	retlw	20
   379  004D  3400               	retlw	0
   380  004E  341C               	retlw	28
   381  004F  3414               	retlw	20
   382  0050  341F               	retlw	31
   383  0051  3400               	retlw	0
   384  0052  3401               	retlw	1
   385  0053  340D               	retlw	13
   386  0054  3405               	retlw	5
   387  0055  341C               	retlw	28
   388  0056  3414               	retlw	20
   389  0057  3414               	retlw	20
   390  0058  341C               	retlw	28
   391  0059  3400               	retlw	0
   392  005A  3499               	retlw	153
   393  005B                     __end_ofmain@special_HKTT_class:
   394  005B                     main@your_live:
   395  005B  344E               	retlw	78
   396  005C  3403               	retlw	3
   397  005D  3469               	retlw	105
   398  005E  3453               	retlw	83
   399  005F  3469               	retlw	105
   400  0060  346E               	retlw	110
   401  0061  3468               	retlw	104
   402  0062  343A               	retlw	58
   403  0063  3404               	retlw	4
   404  0064  3405               	retlw	5
   405  0065  346E               	retlw	110
   406  0066  3467               	retlw	103
   407  0067  3420               	retlw	32
   408  0068  344E               	retlw	78
   409  0069  3461               	retlw	97
   410  006A  3469               	retlw	105
   411  006B  340A               	retlw	10
   412  006C                     __end_ofmain@your_live:
   413  006C                     main@your_born:
   414  006C  344E               	retlw	78
   415  006D  3467               	retlw	103
   416  006E  3402               	retlw	2
   417  006F  3479               	retlw	121
   418  0070  3453               	retlw	83
   419  0071  3469               	retlw	105
   420  0072  346E               	retlw	110
   421  0073  3468               	retlw	104
   422  0074  343A               	retlw	58
   423  0075  3431               	retlw	49
   424  0076  3430               	retlw	48
   425  0077  342F               	retlw	47
   426  0078  3432               	retlw	50
   427  0079  3430               	retlw	48
   428  007A  3430               	retlw	48
   429  007B  3431               	retlw	49
   430  007C  340A               	retlw	10
   431  007D                     __end_ofmain@your_born:
   432  007D                     main@your_name:
   433  007D  3454               	retlw	84
   434  007E  3472               	retlw	114
   435  007F  3400               	retlw	0
   436  0080  346E               	retlw	110
   437  0081  3468               	retlw	104
   438  0082  3420               	retlw	32
   439  0083  344B               	retlw	75
   440  0084  3469               	retlw	105
   441  0085  3401               	retlw	1
   442  0086  3475               	retlw	117
   443  0087  3420               	retlw	32
   444  0088  344F               	retlw	79
   445  0089  3461               	retlw	97
   446  008A  346E               	retlw	110
   447  008B  3468               	retlw	104
   448  008C  340A               	retlw	10
   449  008D                     __end_ofmain@your_name:
   450  008D                     main@MSSV:
   451  008D  344D               	retlw	77
   452  008E  3453               	retlw	83
   453  008F  3453               	retlw	83
   454  0090  3456               	retlw	86
   455  0091  343A               	retlw	58
   456  0092  3431               	retlw	49
   457  0093  3439               	retlw	57
   458  0094  3434               	retlw	52
   459  0095  3437               	retlw	55
   460  0096  3431               	retlw	49
   461  0097  3433               	retlw	51
   462  0098  3430               	retlw	48
   463  0099  3431               	retlw	49
   464  009A  3400               	retlw	0
   465  009B                     __end_ofmain@MSSV:
   466  009B                     main@class:
   467  009B  344C               	retlw	76
   468  009C  3403               	retlw	3
   469  009D  3470               	retlw	112
   470  009E  343A               	retlw	58
   471  009F  3400               	retlw	0
   472  00A0  3448               	retlw	72
   473  00A1  3456               	retlw	86
   474  00A2  3454               	retlw	84
   475  00A3  3431               	retlw	49
   476  00A4  3435               	retlw	53
   477  00A5  3441               	retlw	65
   478  00A6  340A               	retlw	10
   479  00A7                     __end_ofmain@class:
   480  00A7                     main@HKTT:
   481  00A7  3448               	retlw	72
   482  00A8  344B               	retlw	75
   483  00A9  3454               	retlw	84
   484  00AA  3454               	retlw	84
   485  00AB  343A               	retlw	58
   486  00AC  3447               	retlw	71
   487  00AD  3401               	retlw	1
   488  00AE  3420               	retlw	32
   489  00AF  3456               	retlw	86
   490  00B0  3402               	retlw	2
   491  00B1  3470               	retlw	112
   492  00B2  340A               	retlw	10
   493  00B3                     __end_ofmain@HKTT:
   494  0044                     _RD4	set	68
   495  0045                     _RD5	set	69
   496  0046                     _RD6	set	70
   497  0047                     _RD7	set	71
   498  0043                     _RD3	set	67
   499  0041                     _RD1	set	65
   500  0042                     _RD2	set	66
   501  0442                     _TRISD2	set	1090
   502  0441                     _TRISD1	set	1089
   503  0443                     _TRISD3	set	1091
   504  0447                     _TRISD7	set	1095
   505  0446                     _TRISD6	set	1094
   506  0445                     _TRISD5	set	1093
   507  0444                     _TRISD4	set	1092
   508                           
   509                           	psect	cinit
   510  07FC                     start_initialization:	
   511                           ; #config settings
   512                           
   513  07FC                     __initialization:
   514  07FC                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  07FC                     __end_of__initialization:
   518  07FC  0183               	clrf	3
   519  07FD  120A  118A  2E18   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	cstackCOMMON
   522  0070                     __pcstackCOMMON:
   523  0070                     ?_lcd_busy:
   524  0070                     ??_lcd_busy:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_lcd_put_nibble:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_lcd_put_nibble:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_lcd_putc:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_lcd_puts:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_lcd_init:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_lcd_ShiftLeft:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_lcd_ShiftRight:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_addCharSpecial:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_main:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_getLengthArr:	
   555                           ; 1 bytes @ 0x0
   556                           
   557                           
   558                           ; 2 bytes @ 0x0
   559  0070                     	ds	1
   560  0071                     lcd_busy@busy:
   561  0071                     lcd_put_nibble@b:	
   562                           ; 1 bytes @ 0x1
   563                           
   564                           
   565                           ; 1 bytes @ 0x1
   566  0071                     	ds	1
   567  0072                     ??_getLengthArr:
   568  0072                     lcd_put_nibble@temp:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  0072                     getLengthArr@i:	
   572                           ; 1 bytes @ 0x2
   573                           
   574                           
   575                           ; 2 bytes @ 0x2
   576  0072                     	ds	1
   577  0073                     ?_lcd_put_byte:
   578  0073                     lcd_put_byte@b:	
   579                           ; 1 bytes @ 0x3
   580                           
   581                           
   582                           ; 1 bytes @ 0x3
   583  0073                     	ds	1
   584  0074                     ??_lcd_put_byte:
   585  0074                     getLengthArr@character:	
   586                           ; 1 bytes @ 0x4
   587                           
   588                           
   589                           ; 1 bytes @ 0x4
   590  0074                     	ds	1
   591  0075                     lcd_put_byte@rs:
   592                           
   593                           ; 1 bytes @ 0x5
   594  0075                     	ds	1
   595  0076                     ?_lcd_gotoxy:
   596  0076                     ??_lcd_init:	
   597                           ; 1 bytes @ 0x6
   598                           
   599  0076                     ??_lcd_ShiftLeft:	
   600                           ; 1 bytes @ 0x6
   601                           
   602  0076                     ??_lcd_ShiftRight:	
   603                           ; 1 bytes @ 0x6
   604                           
   605  0076                     ??_addCharSpecial:	
   606                           ; 1 bytes @ 0x6
   607                           
   608  0076                     lcd_gotoxy@row:	
   609                           ; 1 bytes @ 0x6
   610                           
   611                           
   612                           ; 1 bytes @ 0x6
   613  0076                     	ds	1
   614  0077                     ??_lcd_gotoxy:
   615  0077                     addCharSpecial@i:	
   616                           ; 1 bytes @ 0x7
   617                           
   618                           
   619                           ; 2 bytes @ 0x7
   620  0077                     	ds	1
   621  0078                     lcd_gotoxy@col:
   622                           
   623                           ; 1 bytes @ 0x8
   624  0078                     	ds	1
   625  0079                     lcd_gotoxy@address:
   626  0079                     addCharSpecial@character:	
   627                           ; 1 bytes @ 0x9
   628                           
   629                           
   630                           ; 1 bytes @ 0x9
   631  0079                     	ds	1
   632  007A                     ??_lcd_putc:
   633                           
   634                           ; 1 bytes @ 0xA
   635  007A                     	ds	2
   636  007C                     lcd_putc@c:
   637                           
   638                           ; 1 bytes @ 0xC
   639  007C                     	ds	1
   640  007D                     ??_lcd_puts:
   641                           
   642                           ; 1 bytes @ 0xD
   643  007D                     	ds	1
   644                           
   645                           	psect	cstackBANK0
   646  0020                     __pcstackBANK0:
   647  0020                     lcd_puts@s:
   648                           
   649                           ; 1 bytes @ 0x0
   650  0020                     	ds	1
   651  0021                     ??_main:
   652                           
   653                           ; 1 bytes @ 0x1
   654  0021                     	ds	3
   655  0024                     main@times:
   656                           
   657                           ; 2 bytes @ 0x4
   658  0024                     	ds	2
   659  0026                     main@length:
   660                           
   661                           ; 2 bytes @ 0x6
   662  0026                     	ds	2
   663  0028                     main@i:
   664                           
   665                           ; 2 bytes @ 0x8
   666  0028                     	ds	2
   667                           
   668                           	psect	maintext
   669  0618                     __pmaintext:	
   670 ;;
   671 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   672 ;;
   673 ;; *************** function _main *****************
   674 ;; Defined at:
   675 ;;		line 51 in file "newmain.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;  i               2    8[BANK0 ] unsigned int 
   680 ;;  length          2    6[BANK0 ] unsigned int 
   681 ;;  times           2    4[BANK0 ] unsigned int 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : B00/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         0       0       0       0       0
   692 ;;      Locals:         0       6       0       0       0
   693 ;;      Temps:          0       3       0       0       0
   694 ;;      Totals:         0       9       0       0       0
   695 ;;Total ram usage:        9 bytes
   696 ;; Hardware stack levels required when called: 5
   697 ;; This function calls:
   698 ;;		_addCharSpecial
   699 ;;		_getLengthArr
   700 ;;		_lcd_ShiftLeft
   701 ;;		_lcd_ShiftRight
   702 ;;		_lcd_gotoxy
   703 ;;		_lcd_init
   704 ;;		_lcd_putc
   705 ;;		_lcd_puts
   706 ;; This function is called by:
   707 ;;		Startup code after reset
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           
   712                           ;psect for function _main
   713  0618                     _main:
   714  0618                     l1353:	
   715                           ;incstack = 0
   716                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   717                           
   718  0618  1283               	bcf	3,5	;RP0=0, select bank0
   719  0619  1303               	bcf	3,6	;RP1=0, select bank0
   720  061A  01A6               	clrf	main@length
   721  061B  01A7               	clrf	main@length+1
   722  061C                     l1355:
   723  061C  3003               	movlw	3
   724  061D  00A4               	movwf	main@times
   725  061E  3000               	movlw	0
   726  061F  00A5               	movwf	main@times+1
   727  0620                     l1357:
   728                           
   729                           ;newmain.c: 77:     lcd_init();
   730  0620  120A  118A  2575  120A  118A  	fcall	_lcd_init
   731  0625                     l1359:
   732                           
   733                           ;newmain.c: 78:     addCharSpecial(special_name_born_live);
   734  0625  3001               	movlw	(low ((main@special_name_born_live-__stringbase)| (0+32768)))& (0+255)
   735  0626  120A  118A  24D2  120A  118A  	fcall	_addCharSpecial
   736  062B                     l1361:
   737                           
   738                           ;newmain.c: 79:     length = getLengthArr(your_name);
   739  062B  3075               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   740  062C  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
   741  0631  0871               	movf	?_getLengthArr+1,w
   742  0632  1283               	bcf	3,5	;RP0=0, select bank0
   743  0633  1303               	bcf	3,6	;RP1=0, select bank0
   744  0634  00A7               	movwf	main@length+1
   745  0635  0870               	movf	?_getLengthArr,w
   746  0636  00A6               	movwf	main@length
   747                           
   748                           ;newmain.c: 81:     while(times--) {
   749  0637  2E93               	goto	l1383
   750  0638                     l1363:
   751                           
   752                           ;newmain.c: 82:         lcd_putc('\f');
   753  0638  300C               	movlw	12
   754  0639  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   755  063E                     l1365:
   756                           
   757                           ;newmain.c: 83:         _delay((unsigned long)((1000/2)*(4000000/4000.0)));
   758  063E  3003               	movlw	3
   759  063F  1283               	bcf	3,5	;RP0=0, select bank0
   760  0640  1303               	bcf	3,6	;RP1=0, select bank0
   761  0641  00A3               	movwf	??_main+2
   762  0642  308A               	movlw	138
   763  0643  00A2               	movwf	??_main+1
   764  0644  3055               	movlw	85
   765  0645  00A1               	movwf	??_main
   766  0646                     u827:
   767  0646  0BA1               	decfsz	??_main,f
   768  0647  2E46               	goto	u827
   769  0648  0BA2               	decfsz	??_main+1,f
   770  0649  2E46               	goto	u827
   771  064A  0BA3               	decfsz	??_main+2,f
   772  064B  2E46               	goto	u827
   773  064C                     l1367:
   774                           
   775                           ;newmain.c: 84:         lcd_gotoxy(0, 0);
   776  064C  01F6               	clrf	lcd_gotoxy@row
   777  064D  3000               	movlw	0
   778  064E  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   779  0653                     l1369:
   780                           
   781                           ;newmain.c: 85:         for(i = 0; i < length; i++) {
   782  0653  1283               	bcf	3,5	;RP0=0, select bank0
   783  0654  1303               	bcf	3,6	;RP1=0, select bank0
   784  0655  01A8               	clrf	main@i
   785  0656  01A9               	clrf	main@i+1
   786  0657  2E6D               	goto	l1375
   787  0658                     l1371:
   788                           
   789                           ;newmain.c: 86:             lcd_putc(your_name[i]);
   790  0658  0828               	movf	main@i,w
   791  0659  3E75               	addlw	low ((main@your_name-__stringbase)| (0+32768))
   792  065A  0084               	movwf	4
   793  065B  120A  118A  2003  120A  118A  	fcall	stringdir
   794  0660  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   795  0665                     l1373:
   796                           
   797                           ;newmain.c: 87:         }
   798  0665  3001               	movlw	1
   799  0666  1283               	bcf	3,5	;RP0=0, select bank0
   800  0667  1303               	bcf	3,6	;RP1=0, select bank0
   801  0668  07A8               	addwf	main@i,f
   802  0669  1803               	skipnc
   803  066A  0AA9               	incf	main@i+1,f
   804  066B  3000               	movlw	0
   805  066C  07A9               	addwf	main@i+1,f
   806  066D                     l1375:
   807  066D  0827               	movf	main@length+1,w
   808  066E  0229               	subwf	main@i+1,w
   809  066F  1D03               	skipz
   810  0670  2E73               	goto	u745
   811  0671  0826               	movf	main@length,w
   812  0672  0228               	subwf	main@i,w
   813  0673                     u745:
   814  0673  1C03               	skipc
   815  0674  2E76               	goto	u741
   816  0675  2E77               	goto	u740
   817  0676                     u741:
   818  0676  2E58               	goto	l1371
   819  0677                     u740:
   820  0677                     l1377:
   821                           
   822                           ;newmain.c: 88:         lcd_gotoxy(0, 1);
   823  0677  01F6               	clrf	lcd_gotoxy@row
   824  0678  0AF6               	incf	lcd_gotoxy@row,f
   825  0679  3000               	movlw	0
   826  067A  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   827  067F                     l1379:
   828                           
   829                           ;newmain.c: 89:         lcd_puts(MSSV);
   830  067F  3085               	movlw	(low ((main@MSSV-__stringbase)| (0+32768)))& (0+255)
   831  0680  120A  118A  23DC  120A  118A  	fcall	_lcd_puts
   832  0685                     l1381:
   833                           
   834                           ;newmain.c: 90:         _delay((unsigned long)((1000/2)*(4000000/4000.0)));
   835  0685  3003               	movlw	3
   836  0686  1283               	bcf	3,5	;RP0=0, select bank0
   837  0687  1303               	bcf	3,6	;RP1=0, select bank0
   838  0688  00A3               	movwf	??_main+2
   839  0689  308A               	movlw	138
   840  068A  00A2               	movwf	??_main+1
   841  068B  3055               	movlw	85
   842  068C  00A1               	movwf	??_main
   843  068D                     u837:
   844  068D  0BA1               	decfsz	??_main,f
   845  068E  2E8D               	goto	u837
   846  068F  0BA2               	decfsz	??_main+1,f
   847  0690  2E8D               	goto	u837
   848  0691  0BA3               	decfsz	??_main+2,f
   849  0692  2E8D               	goto	u837
   850  0693                     l1383:
   851                           
   852                           ;newmain.c: 81:     while(times--) {
   853  0693  3001               	movlw	1
   854  0694  1283               	bcf	3,5	;RP0=0, select bank0
   855  0695  1303               	bcf	3,6	;RP1=0, select bank0
   856  0696  02A4               	subwf	main@times,f
   857  0697  3000               	movlw	0
   858  0698  1C03               	skipc
   859  0699  03A5               	decf	main@times+1,f
   860  069A  02A5               	subwf	main@times+1,f
   861  069B  0A24               	incf	main@times,w
   862  069C  1D03               	skipz
   863  069D  2EA2               	goto	u751
   864  069E  0A25               	incf	main@times+1,w
   865  069F  1D03               	btfss	3,2
   866  06A0  2EA2               	goto	u751
   867  06A1  2EA3               	goto	u750
   868  06A2                     u751:
   869  06A2  2E38               	goto	l1363
   870  06A3                     u750:
   871  06A3                     l1385:
   872                           
   873                           ;newmain.c: 93:     lcd_putc('\f');
   874  06A3  300C               	movlw	12
   875  06A4  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   876  06A9                     l1387:
   877                           
   878                           ;newmain.c: 94:     lcd_gotoxy(0, 0);
   879  06A9  01F6               	clrf	lcd_gotoxy@row
   880  06AA  3000               	movlw	0
   881  06AB  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   882  06B0                     l1389:
   883                           
   884                           ;newmain.c: 95:     length = getLengthArr(your_born);
   885  06B0  3064               	movlw	(low ((main@your_born-__stringbase)| (0+32768)))& (0+255)
   886  06B1  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
   887  06B6  0871               	movf	?_getLengthArr+1,w
   888  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   889  06B8  1303               	bcf	3,6	;RP1=0, select bank0
   890  06B9  00A7               	movwf	main@length+1
   891  06BA  0870               	movf	?_getLengthArr,w
   892  06BB  00A6               	movwf	main@length
   893  06BC                     l1391:
   894                           
   895                           ;newmain.c: 96:     for(i = 0; i < length; i++) {
   896  06BC  01A8               	clrf	main@i
   897  06BD  01A9               	clrf	main@i+1
   898  06BE  2ED4               	goto	l1397
   899  06BF                     l1393:
   900                           
   901                           ;newmain.c: 97:         lcd_putc(your_born[i]);
   902  06BF  0828               	movf	main@i,w
   903  06C0  3E64               	addlw	low ((main@your_born-__stringbase)| (0+32768))
   904  06C1  0084               	movwf	4
   905  06C2  120A  118A  2003  120A  118A  	fcall	stringdir
   906  06C7  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   907  06CC                     l1395:
   908                           
   909                           ;newmain.c: 98:     }
   910  06CC  3001               	movlw	1
   911  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   912  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   913  06CF  07A8               	addwf	main@i,f
   914  06D0  1803               	skipnc
   915  06D1  0AA9               	incf	main@i+1,f
   916  06D2  3000               	movlw	0
   917  06D3  07A9               	addwf	main@i+1,f
   918  06D4                     l1397:
   919  06D4  0827               	movf	main@length+1,w
   920  06D5  0229               	subwf	main@i+1,w
   921  06D6  1D03               	skipz
   922  06D7  2EDA               	goto	u765
   923  06D8  0826               	movf	main@length,w
   924  06D9  0228               	subwf	main@i,w
   925  06DA                     u765:
   926  06DA  1C03               	skipc
   927  06DB  2EDD               	goto	u761
   928  06DC  2EDE               	goto	u760
   929  06DD                     u761:
   930  06DD  2EBF               	goto	l1393
   931  06DE                     u760:
   932  06DE                     l1399:
   933                           
   934                           ;newmain.c: 99:     lcd_gotoxy(0, 1);
   935  06DE  01F6               	clrf	lcd_gotoxy@row
   936  06DF  0AF6               	incf	lcd_gotoxy@row,f
   937  06E0  3000               	movlw	0
   938  06E1  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   939  06E6                     l1401:
   940                           
   941                           ;newmain.c: 100:     length = getLengthArr(your_live);
   942  06E6  3053               	movlw	(low ((main@your_live-__stringbase)| (0+32768)))& (0+255)
   943  06E7  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
   944  06EC  0871               	movf	?_getLengthArr+1,w
   945  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   946  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   947  06EF  00A7               	movwf	main@length+1
   948  06F0  0870               	movf	?_getLengthArr,w
   949  06F1  00A6               	movwf	main@length
   950  06F2                     l1403:
   951                           
   952                           ;newmain.c: 101:     for(i = 0; i < length; i++) {
   953  06F2  01A8               	clrf	main@i
   954  06F3  01A9               	clrf	main@i+1
   955  06F4  2F0A               	goto	l1409
   956  06F5                     l1405:
   957                           
   958                           ;newmain.c: 102:         lcd_putc(your_live[i]);
   959  06F5  0828               	movf	main@i,w
   960  06F6  3E53               	addlw	low ((main@your_live-__stringbase)| (0+32768))
   961  06F7  0084               	movwf	4
   962  06F8  120A  118A  2003  120A  118A  	fcall	stringdir
   963  06FD  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   964  0702                     l1407:
   965                           
   966                           ;newmain.c: 103:     }
   967  0702  3001               	movlw	1
   968  0703  1283               	bcf	3,5	;RP0=0, select bank0
   969  0704  1303               	bcf	3,6	;RP1=0, select bank0
   970  0705  07A8               	addwf	main@i,f
   971  0706  1803               	skipnc
   972  0707  0AA9               	incf	main@i+1,f
   973  0708  3000               	movlw	0
   974  0709  07A9               	addwf	main@i+1,f
   975  070A                     l1409:
   976  070A  0827               	movf	main@length+1,w
   977  070B  0229               	subwf	main@i+1,w
   978  070C  1D03               	skipz
   979  070D  2F10               	goto	u775
   980  070E  0826               	movf	main@length,w
   981  070F  0228               	subwf	main@i,w
   982  0710                     u775:
   983  0710  1C03               	skipc
   984  0711  2F13               	goto	u771
   985  0712  2F14               	goto	u770
   986  0713                     u771:
   987  0713  2EF5               	goto	l1405
   988  0714                     u770:
   989  0714                     l1411:
   990                           
   991                           ;newmain.c: 104:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   992  0714  300B               	movlw	11
   993  0715  1283               	bcf	3,5	;RP0=0, select bank0
   994  0716  1303               	bcf	3,6	;RP1=0, select bank0
   995  0717  00A3               	movwf	??_main+2
   996  0718  3026               	movlw	38
   997  0719  00A2               	movwf	??_main+1
   998  071A  305D               	movlw	93
   999  071B  00A1               	movwf	??_main
  1000  071C                     u847:
  1001  071C  0BA1               	decfsz	??_main,f
  1002  071D  2F1C               	goto	u847
  1003  071E  0BA2               	decfsz	??_main+1,f
  1004  071F  2F1C               	goto	u847
  1005  0720  0BA3               	decfsz	??_main+2,f
  1006  0721  2F1C               	goto	u847
  1007  0722                     l1413:
  1008                           
  1009                           ;newmain.c: 105:     for(i = 0; i < 16; i++) {
  1010  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0724  01A8               	clrf	main@i
  1013  0725  01A9               	clrf	main@i+1
  1014  0726                     l1419:
  1015                           
  1016                           ;newmain.c: 106:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1017  0726  3002               	movlw	2
  1018  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0729  00A3               	movwf	??_main+2
  1021  072A  3004               	movlw	4
  1022  072B  00A2               	movwf	??_main+1
  1023  072C  30B9               	movlw	185
  1024  072D  00A1               	movwf	??_main
  1025  072E                     u857:
  1026  072E  0BA1               	decfsz	??_main,f
  1027  072F  2F2E               	goto	u857
  1028  0730  0BA2               	decfsz	??_main+1,f
  1029  0731  2F2E               	goto	u857
  1030  0732  0BA3               	decfsz	??_main+2,f
  1031  0733  2F2E               	goto	u857
  1032  0734  2F35               	nop2
  1033  0735                     l1421:
  1034                           
  1035                           ;newmain.c: 107:         lcd_ShiftRight();
  1036  0735  120A  118A  23B4  120A  118A  	fcall	_lcd_ShiftRight
  1037  073A                     l1423:
  1038                           
  1039                           ;newmain.c: 108:     }
  1040  073A  3001               	movlw	1
  1041  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1042  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1043  073D  07A8               	addwf	main@i,f
  1044  073E  1803               	skipnc
  1045  073F  0AA9               	incf	main@i+1,f
  1046  0740  3000               	movlw	0
  1047  0741  07A9               	addwf	main@i+1,f
  1048  0742                     l1425:
  1049  0742  3000               	movlw	0
  1050  0743  0229               	subwf	main@i+1,w
  1051  0744  3010               	movlw	16
  1052  0745  1903               	skipnz
  1053  0746  0228               	subwf	main@i,w
  1054  0747  1C03               	skipc
  1055  0748  2F4A               	goto	u781
  1056  0749  2F4B               	goto	u780
  1057  074A                     u781:
  1058  074A  2F26               	goto	l1419
  1059  074B                     u780:
  1060  074B                     l1427:
  1061                           
  1062                           ;newmain.c: 110:     addCharSpecial(special_HKTT_class);
  1063  074B  3032               	movlw	(low ((main@special_HKTT_class-__stringbase)| (0+32768)))& (0+255)
  1064  074C  120A  118A  24D2  120A  118A  	fcall	_addCharSpecial
  1065                           
  1066                           ;newmain.c: 111:     lcd_putc('\f');
  1067  0751  300C               	movlw	12
  1068  0752  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1069  0757                     l1429:
  1070                           
  1071                           ;newmain.c: 112:     lcd_gotoxy(0, 0);
  1072  0757  01F6               	clrf	lcd_gotoxy@row
  1073  0758  3000               	movlw	0
  1074  0759  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
  1075  075E                     l1431:
  1076                           
  1077                           ;newmain.c: 113:     length = getLengthArr(HKTT);
  1078  075E  309F               	movlw	(low ((main@HKTT-__stringbase)| (0+32768)))& (0+255)
  1079  075F  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
  1080  0764  0871               	movf	?_getLengthArr+1,w
  1081  0765  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0766  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0767  00A7               	movwf	main@length+1
  1084  0768  0870               	movf	?_getLengthArr,w
  1085  0769  00A6               	movwf	main@length
  1086  076A                     l1433:
  1087                           
  1088                           ;newmain.c: 114:     for(i = 0; i < length; i++) {
  1089  076A  01A8               	clrf	main@i
  1090  076B  01A9               	clrf	main@i+1
  1091  076C  2F82               	goto	l1439
  1092  076D                     l1435:
  1093                           
  1094                           ;newmain.c: 115:         lcd_putc(HKTT[i]);
  1095  076D  0828               	movf	main@i,w
  1096  076E  3E9F               	addlw	low ((main@HKTT-__stringbase)| (0+32768))
  1097  076F  0084               	movwf	4
  1098  0770  120A  118A  2003  120A  118A  	fcall	stringdir
  1099  0775  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1100  077A                     l1437:
  1101                           
  1102                           ;newmain.c: 116:     }
  1103  077A  3001               	movlw	1
  1104  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1105  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1106  077D  07A8               	addwf	main@i,f
  1107  077E  1803               	skipnc
  1108  077F  0AA9               	incf	main@i+1,f
  1109  0780  3000               	movlw	0
  1110  0781  07A9               	addwf	main@i+1,f
  1111  0782                     l1439:
  1112  0782  0827               	movf	main@length+1,w
  1113  0783  0229               	subwf	main@i+1,w
  1114  0784  1D03               	skipz
  1115  0785  2F88               	goto	u795
  1116  0786  0826               	movf	main@length,w
  1117  0787  0228               	subwf	main@i,w
  1118  0788                     u795:
  1119  0788  1C03               	skipc
  1120  0789  2F8B               	goto	u791
  1121  078A  2F8C               	goto	u790
  1122  078B                     u791:
  1123  078B  2F6D               	goto	l1435
  1124  078C                     u790:
  1125  078C                     l1441:
  1126                           
  1127                           ;newmain.c: 117:     lcd_gotoxy(0, 1);
  1128  078C  01F6               	clrf	lcd_gotoxy@row
  1129  078D  0AF6               	incf	lcd_gotoxy@row,f
  1130  078E  3000               	movlw	0
  1131  078F  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
  1132  0794                     l1443:
  1133                           
  1134                           ;newmain.c: 118:     length = getLengthArr(class);
  1135  0794  3093               	movlw	(low ((main@class-__stringbase)| (0+32768)))& (0+255)
  1136  0795  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
  1137  079A  0871               	movf	?_getLengthArr+1,w
  1138  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1139  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1140  079D  00A7               	movwf	main@length+1
  1141  079E  0870               	movf	?_getLengthArr,w
  1142  079F  00A6               	movwf	main@length
  1143  07A0                     l1445:
  1144                           
  1145                           ;newmain.c: 119:     for(i = 0; i < length; i++) {
  1146  07A0  01A8               	clrf	main@i
  1147  07A1  01A9               	clrf	main@i+1
  1148  07A2  2FB8               	goto	l1451
  1149  07A3                     l1447:
  1150                           
  1151                           ;newmain.c: 120:         lcd_putc(class[i]);
  1152  07A3  0828               	movf	main@i,w
  1153  07A4  3E93               	addlw	low ((main@class-__stringbase)| (0+32768))
  1154  07A5  0084               	movwf	4
  1155  07A6  120A  118A  2003  120A  118A  	fcall	stringdir
  1156  07AB  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1157  07B0                     l1449:
  1158                           
  1159                           ;newmain.c: 121:     }
  1160  07B0  3001               	movlw	1
  1161  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1162  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1163  07B3  07A8               	addwf	main@i,f
  1164  07B4  1803               	skipnc
  1165  07B5  0AA9               	incf	main@i+1,f
  1166  07B6  3000               	movlw	0
  1167  07B7  07A9               	addwf	main@i+1,f
  1168  07B8                     l1451:
  1169  07B8  0827               	movf	main@length+1,w
  1170  07B9  0229               	subwf	main@i+1,w
  1171  07BA  1D03               	skipz
  1172  07BB  2FBE               	goto	u805
  1173  07BC  0826               	movf	main@length,w
  1174  07BD  0228               	subwf	main@i,w
  1175  07BE                     u805:
  1176  07BE  1C03               	skipc
  1177  07BF  2FC1               	goto	u801
  1178  07C0  2FC2               	goto	u800
  1179  07C1                     u801:
  1180  07C1  2FA3               	goto	l1447
  1181  07C2                     u800:
  1182  07C2                     l1453:
  1183                           
  1184                           ;newmain.c: 122:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1185  07C2  300B               	movlw	11
  1186  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1187  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1188  07C5  00A3               	movwf	??_main+2
  1189  07C6  3026               	movlw	38
  1190  07C7  00A2               	movwf	??_main+1
  1191  07C8  305D               	movlw	93
  1192  07C9  00A1               	movwf	??_main
  1193  07CA                     u867:
  1194  07CA  0BA1               	decfsz	??_main,f
  1195  07CB  2FCA               	goto	u867
  1196  07CC  0BA2               	decfsz	??_main+1,f
  1197  07CD  2FCA               	goto	u867
  1198  07CE  0BA3               	decfsz	??_main+2,f
  1199  07CF  2FCA               	goto	u867
  1200  07D0                     l1455:
  1201                           
  1202                           ;newmain.c: 123:     for(i = 0; i < 16; i++) {
  1203  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1204  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1205  07D2  01A8               	clrf	main@i
  1206  07D3  01A9               	clrf	main@i+1
  1207  07D4                     l1461:
  1208                           
  1209                           ;newmain.c: 124:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1210  07D4  3002               	movlw	2
  1211  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1212  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1213  07D7  00A3               	movwf	??_main+2
  1214  07D8  3004               	movlw	4
  1215  07D9  00A2               	movwf	??_main+1
  1216  07DA  30B9               	movlw	185
  1217  07DB  00A1               	movwf	??_main
  1218  07DC                     u877:
  1219  07DC  0BA1               	decfsz	??_main,f
  1220  07DD  2FDC               	goto	u877
  1221  07DE  0BA2               	decfsz	??_main+1,f
  1222  07DF  2FDC               	goto	u877
  1223  07E0  0BA3               	decfsz	??_main+2,f
  1224  07E1  2FDC               	goto	u877
  1225  07E2  2FE3               	nop2
  1226  07E3                     l1463:
  1227                           
  1228                           ;newmain.c: 125:         lcd_ShiftLeft();
  1229  07E3  120A  118A  23A9  120A  118A  	fcall	_lcd_ShiftLeft
  1230  07E8                     l1465:
  1231                           
  1232                           ;newmain.c: 126:     }
  1233  07E8  3001               	movlw	1
  1234  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1235  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1236  07EB  07A8               	addwf	main@i,f
  1237  07EC  1803               	skipnc
  1238  07ED  0AA9               	incf	main@i+1,f
  1239  07EE  3000               	movlw	0
  1240  07EF  07A9               	addwf	main@i+1,f
  1241  07F0                     l1467:
  1242  07F0  3000               	movlw	0
  1243  07F1  0229               	subwf	main@i+1,w
  1244  07F2  3010               	movlw	16
  1245  07F3  1903               	skipnz
  1246  07F4  0228               	subwf	main@i,w
  1247  07F5  1C03               	skipc
  1248  07F6  2FF8               	goto	u811
  1249  07F7  2FF9               	goto	u810
  1250  07F8                     u811:
  1251  07F8  2FD4               	goto	l1461
  1252  07F9                     u810:
  1253  07F9                     l203:
  1254  07F9  120A  118A  2800   	ljmp	start
  1255  07FC                     __end_of_main:
  1256                           
  1257                           	psect	text1
  1258  03DC                     __ptext1:	
  1259 ;; *************** function _lcd_puts *****************
  1260 ;; Defined at:
  1261 ;;		line 224 in file "lcd.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  s               1    wreg     PTR const unsigned char 
  1264 ;;		 -> main@MSSV(14), 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  1267 ;;		 -> main@MSSV(14), 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       0       0       0       0
  1278 ;;      Locals:         0       1       0       0       0
  1279 ;;      Temps:          1       0       0       0       0
  1280 ;;      Totals:         1       1       0       0       0
  1281 ;;Total ram usage:        2 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 4
  1284 ;; This function calls:
  1285 ;;		_lcd_putc
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           
  1292                           ;psect for function _lcd_puts
  1293  03DC                     _lcd_puts:
  1294                           
  1295                           ;incstack = 0
  1296                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1297                           ;lcd_puts@s stored from wreg
  1298  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1299  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1300  03DE  00A0               	movwf	lcd_puts@s
  1301  03DF                     l1247:
  1302                           
  1303                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  1304  03DF  2BF2               	goto	l1253
  1305  03E0                     l1249:
  1306                           
  1307                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  1308  03E0  0820               	movf	lcd_puts@s,w
  1309  03E1  0084               	movwf	4
  1310  03E2  120A  118A  2003  120A  118A  	fcall	stringdir
  1311  03E7  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1312  03EC                     l1251:
  1313  03EC  3001               	movlw	1
  1314  03ED  00FD               	movwf	??_lcd_puts
  1315  03EE  087D               	movf	??_lcd_puts,w
  1316  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1317  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1318  03F1  07A0               	addwf	lcd_puts@s,f
  1319  03F2                     l1253:
  1320                           
  1321                           ;lcd.c: 229:  while(*s)
  1322  03F2  0820               	movf	lcd_puts@s,w
  1323  03F3  0084               	movwf	4
  1324  03F4  120A  118A  2003  120A  118A  	fcall	stringdir
  1325  03F9  3A00               	xorlw	0
  1326  03FA  1D03               	skipz
  1327  03FB  2BFD               	goto	u611
  1328  03FC  2BFE               	goto	u610
  1329  03FD                     u611:
  1330  03FD  2BE0               	goto	l1249
  1331  03FE                     u610:
  1332  03FE                     l78:
  1333  03FE  0008               	return
  1334  03FF                     __end_of_lcd_puts:
  1335                           
  1336                           	psect	text2
  1337  0519                     __ptext2:	
  1338 ;; *************** function _lcd_putc *****************
  1339 ;; Defined at:
  1340 ;;		line 190 in file "lcd.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  c               1    wreg     unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  c               1   12[COMMON] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       0       0       0       0
  1355 ;;      Locals:         1       0       0       0       0
  1356 ;;      Temps:          2       0       0       0       0
  1357 ;;      Totals:         3       0       0       0       0
  1358 ;;Total ram usage:        3 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 3
  1361 ;; This function calls:
  1362 ;;		_lcd_busy
  1363 ;;		_lcd_gotoxy
  1364 ;;		_lcd_put_byte
  1365 ;; This function is called by:
  1366 ;;		_lcd_puts
  1367 ;;		_main
  1368 ;;		_lcd_String_Delay
  1369 ;;		_putch
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _lcd_putc
  1375  0519                     _lcd_putc:
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1379                           ;lcd_putc@c stored from wreg
  1380  0519  00FC               	movwf	lcd_putc@c
  1381  051A                     l1225:
  1382                           
  1383                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1384  051A  2D61               	goto	l1241
  1385  051B                     l1227:
  1386                           
  1387                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1388  051B  01F3               	clrf	lcd_put_byte@b
  1389  051C  0AF3               	incf	lcd_put_byte@b,f
  1390  051D  3000               	movlw	0
  1391  051E  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1392  0523                     l1229:	
  1393                           ;lcd.c: 199:    while(lcd_busy());
  1394                           
  1395  0523  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1396  0528  3A00               	xorlw	0
  1397  0529  1D03               	skipz
  1398  052A  2D2C               	goto	u581
  1399  052B  2D2D               	goto	u580
  1400  052C                     u581:
  1401  052C  2D23               	goto	l1229
  1402  052D                     u580:
  1403  052D  2D74               	goto	l72
  1404  052E                     l1231:
  1405                           
  1406                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1407  052E  01F6               	clrf	lcd_gotoxy@row
  1408  052F  0AF6               	incf	lcd_gotoxy@row,f
  1409  0530  3000               	movlw	0
  1410  0531  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
  1411                           
  1412                           ;lcd.c: 203:    break;
  1413  0536  2D74               	goto	l72
  1414  0537                     l1233:
  1415                           
  1416                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1417  0537  3010               	movlw	16
  1418  0538  00FA               	movwf	??_lcd_putc
  1419  0539  087A               	movf	??_lcd_putc,w
  1420  053A  00F3               	movwf	lcd_put_byte@b
  1421  053B  3000               	movlw	0
  1422  053C  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1423  0541                     l1235:	
  1424                           ;lcd.c: 206:    while(lcd_busy());
  1425                           
  1426  0541  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1427  0546  3A00               	xorlw	0
  1428  0547  1D03               	skipz
  1429  0548  2D4A               	goto	u591
  1430  0549  2D4B               	goto	u590
  1431  054A                     u591:
  1432  054A  2D41               	goto	l1235
  1433  054B                     u590:
  1434  054B  2D74               	goto	l72
  1435  054C                     l1237:
  1436                           
  1437                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1438  054C  087C               	movf	lcd_putc@c,w
  1439  054D  00FA               	movwf	??_lcd_putc
  1440  054E  087A               	movf	??_lcd_putc,w
  1441  054F  00F3               	movwf	lcd_put_byte@b
  1442  0550  3001               	movlw	1
  1443  0551  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1444  0556                     l1239:	
  1445                           ;lcd.c: 212:     while(lcd_busy());
  1446                           
  1447  0556  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1448  055B  3A00               	xorlw	0
  1449  055C  1D03               	skipz
  1450  055D  2D5F               	goto	u601
  1451  055E  2D60               	goto	u600
  1452  055F                     u601:
  1453  055F  2D56               	goto	l1239
  1454  0560                     u600:
  1455  0560  2D74               	goto	l72
  1456  0561                     l1241:
  1457  0561  087C               	movf	lcd_putc@c,w
  1458  0562  00FA               	movwf	??_lcd_putc
  1459  0563  01FB               	clrf	??_lcd_putc+1
  1460                           
  1461                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 1, Range of values is 0 to 0
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte            4     3 (average)
  1467                           ; direct_byte           11     8 (fixed)
  1468                           ; jumptable            260     6 (fixed)
  1469                           ;	Chosen strategy is simple_byte
  1470  0564  087B               	movf	??_lcd_putc+1,w
  1471  0565  3A00               	xorlw	0	; case 0
  1472  0566  1903               	skipnz
  1473  0567  2D69               	goto	l1489
  1474  0568  2D4C               	goto	l1237
  1475  0569                     l1489:
  1476                           
  1477                           ; Switch size 1, requested type "simple"
  1478                           ; Number of cases is 3, Range of values is 8 to 12
  1479                           ; switch strategies available:
  1480                           ; Name         Instructions Cycles
  1481                           ; simple_byte           10     6 (average)
  1482                           ; direct_byte           26    11 (fixed)
  1483                           ; jumptable            263     9 (fixed)
  1484                           ;	Chosen strategy is simple_byte
  1485  0569  087A               	movf	??_lcd_putc,w
  1486  056A  3A08               	xorlw	8	; case 8
  1487  056B  1903               	skipnz
  1488  056C  2D37               	goto	l1233
  1489  056D  3A02               	xorlw	2	; case 10
  1490  056E  1903               	skipnz
  1491  056F  2D2E               	goto	l1231
  1492  0570  3A06               	xorlw	6	; case 12
  1493  0571  1903               	skipnz
  1494  0572  2D1B               	goto	l1227
  1495  0573  2D4C               	goto	l1237
  1496  0574                     l72:
  1497  0574  0008               	return
  1498  0575                     __end_of_lcd_putc:
  1499                           
  1500                           	psect	text3
  1501  03FF                     __ptext3:	
  1502 ;; *************** function _lcd_gotoxy *****************
  1503 ;; Defined at:
  1504 ;;		line 167 in file "lcd.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  col             1    wreg     unsigned char 
  1507 ;;  row             1    6[COMMON] unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  col             1    8[COMMON] unsigned char 
  1510 ;;  address         1    9[COMMON] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         1       0       0       0       0
  1521 ;;      Locals:         2       0       0       0       0
  1522 ;;      Temps:          1       0       0       0       0
  1523 ;;      Totals:         4       0       0       0       0
  1524 ;;Total ram usage:        4 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 2
  1527 ;; This function calls:
  1528 ;;		_lcd_busy
  1529 ;;		_lcd_put_byte
  1530 ;; This function is called by:
  1531 ;;		_lcd_putc
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function _lcd_gotoxy
  1538  03FF                     _lcd_gotoxy:
  1539                           
  1540                           ;incstack = 0
  1541                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1542                           ;lcd_gotoxy@col stored from wreg
  1543  03FF  00F8               	movwf	lcd_gotoxy@col
  1544  0400                     l1213:
  1545                           
  1546                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1547  0400  0876               	movf	lcd_gotoxy@row,w
  1548  0401  1903               	btfsc	3,2
  1549  0402  2C04               	goto	u561
  1550  0403  2C05               	goto	u560
  1551  0404                     u561:
  1552  0404  2C0A               	goto	l1217
  1553  0405                     u560:
  1554  0405                     l1215:
  1555                           
  1556                           ;lcd.c: 174:   address=0x40;
  1557  0405  3040               	movlw	64
  1558  0406  00F7               	movwf	??_lcd_gotoxy
  1559  0407  0877               	movf	??_lcd_gotoxy,w
  1560  0408  00F9               	movwf	lcd_gotoxy@address
  1561  0409  2C0B               	goto	l1219
  1562  040A                     l1217:
  1563                           
  1564                           ;lcd.c: 176:   address=0;
  1565  040A  01F9               	clrf	lcd_gotoxy@address
  1566  040B                     l1219:
  1567                           
  1568                           ;lcd.c: 178:  address += col;
  1569  040B  0878               	movf	lcd_gotoxy@col,w
  1570  040C  00F7               	movwf	??_lcd_gotoxy
  1571  040D  0877               	movf	??_lcd_gotoxy,w
  1572  040E  07F9               	addwf	lcd_gotoxy@address,f
  1573  040F                     l1221:
  1574                           
  1575                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1576  040F  0879               	movf	lcd_gotoxy@address,w
  1577  0410  3880               	iorlw	128
  1578  0411  00F7               	movwf	??_lcd_gotoxy
  1579  0412  0877               	movf	??_lcd_gotoxy,w
  1580  0413  00F3               	movwf	lcd_put_byte@b
  1581  0414  3000               	movlw	0
  1582  0415  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1583  041A                     l1223:	
  1584                           ;lcd.c: 181:  while(lcd_busy());
  1585                           
  1586  041A  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1587  041F  3A00               	xorlw	0
  1588  0420  1D03               	skipz
  1589  0421  2C23               	goto	u571
  1590  0422  2C24               	goto	u570
  1591  0423                     u571:
  1592  0423  2C1A               	goto	l1223
  1593  0424                     u570:
  1594  0424                     l54:
  1595  0424  0008               	return
  1596  0425                     __end_of_lcd_gotoxy:
  1597                           
  1598                           	psect	text4
  1599  0575                     __ptext4:	
  1600 ;; *************** function _lcd_init *****************
  1601 ;; Defined at:
  1602 ;;		line 241 in file "lcd.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  i               1    0        unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1616 ;;      Params:         0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0
  1618 ;;      Temps:          2       0       0       0       0
  1619 ;;      Totals:         2       0       0       0       0
  1620 ;;Total ram usage:        2 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 2
  1623 ;; This function calls:
  1624 ;;		_lcd_busy
  1625 ;;		_lcd_put_byte
  1626 ;;		_lcd_put_nibble
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _lcd_init
  1634  0575                     _lcd_init:
  1635  0575                     l1255:	
  1636                           ;incstack = 0
  1637                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1638                           
  1639                           
  1640                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1641  0575  1683               	bsf	3,5	;RP0=1, select bank1
  1642  0576  1303               	bcf	3,6	;RP1=0, select bank1
  1643  0577  1188               	bcf	8,3	;volatile
  1644                           
  1645                           ;lcd.c: 248:  TRISD1 = 0;
  1646  0578  1088               	bcf	8,1	;volatile
  1647                           
  1648                           ;lcd.c: 249:  TRISD2 = 0;
  1649  0579  1108               	bcf	8,2	;volatile
  1650                           
  1651                           ;lcd.c: 250:  TRISD4 = 0;
  1652  057A  1208               	bcf	8,4	;volatile
  1653                           
  1654                           ;lcd.c: 251:  TRISD5 = 0;
  1655  057B  1288               	bcf	8,5	;volatile
  1656                           
  1657                           ;lcd.c: 252:  TRISD6 = 0;
  1658  057C  1308               	bcf	8,6	;volatile
  1659                           
  1660                           ;lcd.c: 253:  TRISD7 = 0;
  1661  057D  1388               	bcf	8,7	;volatile
  1662  057E                     l1257:
  1663                           
  1664                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1665  057E  3014               	movlw	20
  1666  057F  00F7               	movwf	??_lcd_init+1
  1667  0580  3079               	movlw	121
  1668  0581  00F6               	movwf	??_lcd_init
  1669  0582                     u887:
  1670  0582  0BF6               	decfsz	??_lcd_init,f
  1671  0583  2D82               	goto	u887
  1672  0584  0BF7               	decfsz	??_lcd_init+1,f
  1673  0585  2D82               	goto	u887
  1674  0586  2D87               	nop2
  1675  0587                     l1259:
  1676                           
  1677                           ;lcd.c: 257:  RD1 = 0;
  1678  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1679  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1680  0589  1088               	bcf	8,1	;volatile
  1681  058A                     l1261:
  1682                           
  1683                           ;lcd.c: 258:  RD2 = 0;
  1684  058A  1108               	bcf	8,2	;volatile
  1685  058B                     l1263:
  1686                           
  1687                           ;lcd.c: 259:  RD3 = 0;
  1688  058B  1188               	bcf	8,3	;volatile
  1689  058C                     l1265:
  1690                           
  1691                           ;lcd.c: 261:  lcd_put_nibble(3);
  1692  058C  3003               	movlw	3
  1693  058D  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1694  0592                     l1267:
  1695                           
  1696                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1697  0592  300D               	movlw	13
  1698  0593  00F7               	movwf	??_lcd_init+1
  1699  0594  30FB               	movlw	251
  1700  0595  00F6               	movwf	??_lcd_init
  1701  0596                     u897:
  1702  0596  0BF6               	decfsz	??_lcd_init,f
  1703  0597  2D96               	goto	u897
  1704  0598  0BF7               	decfsz	??_lcd_init+1,f
  1705  0599  2D96               	goto	u897
  1706  059A  2D9B               	nop2
  1707                           
  1708                           ;lcd.c: 263:  lcd_put_nibble(3);
  1709  059B  3003               	movlw	3
  1710  059C  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1711  05A1                     l1269:
  1712                           
  1713                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1714  05A1  300D               	movlw	13
  1715  05A2  00F7               	movwf	??_lcd_init+1
  1716  05A3  30FB               	movlw	251
  1717  05A4  00F6               	movwf	??_lcd_init
  1718  05A5                     u907:
  1719  05A5  0BF6               	decfsz	??_lcd_init,f
  1720  05A6  2DA5               	goto	u907
  1721  05A7  0BF7               	decfsz	??_lcd_init+1,f
  1722  05A8  2DA5               	goto	u907
  1723  05A9  2DAA               	nop2
  1724  05AA                     l1271:
  1725                           
  1726                           ;lcd.c: 265:  lcd_put_nibble(3);
  1727  05AA  3003               	movlw	3
  1728  05AB  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1729                           
  1730                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1731  05B0  300D               	movlw	13
  1732  05B1  00F7               	movwf	??_lcd_init+1
  1733  05B2  30FB               	movlw	251
  1734  05B3  00F6               	movwf	??_lcd_init
  1735  05B4                     u917:
  1736  05B4  0BF6               	decfsz	??_lcd_init,f
  1737  05B5  2DB4               	goto	u917
  1738  05B6  0BF7               	decfsz	??_lcd_init+1,f
  1739  05B7  2DB4               	goto	u917
  1740  05B8  2DB9               	nop2
  1741  05B9                     l1273:
  1742                           
  1743                           ;lcd.c: 268:  lcd_put_nibble(2);
  1744  05B9  3002               	movlw	2
  1745  05BA  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1746  05BF                     l1275:	
  1747                           ;lcd.c: 269:  while(lcd_busy());
  1748                           
  1749  05BF  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1750  05C4  3A00               	xorlw	0
  1751  05C5  1D03               	skipz
  1752  05C6  2DC8               	goto	u621
  1753  05C7  2DC9               	goto	u620
  1754  05C8                     u621:
  1755  05C8  2DBF               	goto	l1275
  1756  05C9                     u620:
  1757  05C9                     l1277:
  1758                           
  1759                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1760  05C9  3028               	movlw	40
  1761  05CA  00F6               	movwf	??_lcd_init
  1762  05CB  0876               	movf	??_lcd_init,w
  1763  05CC  00F3               	movwf	lcd_put_byte@b
  1764  05CD  3000               	movlw	0
  1765  05CE  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1766  05D3                     l1279:	
  1767                           ;lcd.c: 272:  while(lcd_busy());
  1768                           
  1769  05D3  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1770  05D8  3A00               	xorlw	0
  1771  05D9  1D03               	skipz
  1772  05DA  2DDC               	goto	u631
  1773  05DB  2DDD               	goto	u630
  1774  05DC                     u631:
  1775  05DC  2DD3               	goto	l1279
  1776  05DD                     u630:
  1777  05DD                     l1281:
  1778                           
  1779                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1780  05DD  300C               	movlw	12
  1781  05DE  00F6               	movwf	??_lcd_init
  1782  05DF  0876               	movf	??_lcd_init,w
  1783  05E0  00F3               	movwf	lcd_put_byte@b
  1784  05E1  3000               	movlw	0
  1785  05E2  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1786  05E7                     l1283:	
  1787                           ;lcd.c: 275:  while(lcd_busy());
  1788                           
  1789  05E7  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1790  05EC  3A00               	xorlw	0
  1791  05ED  1D03               	skipz
  1792  05EE  2DF0               	goto	u641
  1793  05EF  2DF1               	goto	u640
  1794  05F0                     u641:
  1795  05F0  2DE7               	goto	l1283
  1796  05F1                     u640:
  1797  05F1                     l1285:
  1798                           
  1799                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1800  05F1  01F3               	clrf	lcd_put_byte@b
  1801  05F2  0AF3               	incf	lcd_put_byte@b,f
  1802  05F3  3000               	movlw	0
  1803  05F4  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1804  05F9                     l1287:	
  1805                           ;lcd.c: 278:  while(lcd_busy());
  1806                           
  1807  05F9  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1808  05FE  3A00               	xorlw	0
  1809  05FF  1D03               	skipz
  1810  0600  2E02               	goto	u651
  1811  0601  2E03               	goto	u650
  1812  0602                     u651:
  1813  0602  2DF9               	goto	l1287
  1814  0603                     u650:
  1815  0603                     l1289:
  1816                           
  1817                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1818  0603  3006               	movlw	6
  1819  0604  00F6               	movwf	??_lcd_init
  1820  0605  0876               	movf	??_lcd_init,w
  1821  0606  00F3               	movwf	lcd_put_byte@b
  1822  0607  3000               	movlw	0
  1823  0608  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1824  060D                     l1291:	
  1825                           ;lcd.c: 281:  while(lcd_busy());
  1826                           
  1827  060D  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1828  0612  3A00               	xorlw	0
  1829  0613  1D03               	skipz
  1830  0614  2E16               	goto	u661
  1831  0615  2E17               	goto	u660
  1832  0616                     u661:
  1833  0616  2E0D               	goto	l1291
  1834  0617                     u660:
  1835  0617                     l96:
  1836  0617  0008               	return
  1837  0618                     __end_of_lcd_init:
  1838                           
  1839                           	psect	text5
  1840  03B4                     __ptext5:	
  1841 ;; *************** function _lcd_ShiftRight *****************
  1842 ;; Defined at:
  1843 ;;		line 304 in file "lcd.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0
  1859 ;;      Temps:          1       0       0       0       0
  1860 ;;      Totals:         1       0       0       0       0
  1861 ;;Total ram usage:        1 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 2
  1864 ;; This function calls:
  1865 ;;		_lcd_put_byte
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;;		_lcd_MoveRight
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function _lcd_ShiftRight
  1874  03B4                     _lcd_ShiftRight:
  1875  03B4                     l1295:	
  1876                           ;incstack = 0
  1877                           ; Regs used in _lcd_ShiftRight: [wreg+status,2+status,0+pclath+cstack]
  1878                           
  1879                           
  1880                           ;lcd.c: 309:      lcd_put_byte(0,0x1C);
  1881  03B4  301C               	movlw	28
  1882  03B5  00F6               	movwf	??_lcd_ShiftRight
  1883  03B6  0876               	movf	??_lcd_ShiftRight,w
  1884  03B7  00F3               	movwf	lcd_put_byte@b
  1885  03B8  3000               	movlw	0
  1886  03B9  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1887  03BE                     l102:
  1888  03BE  0008               	return
  1889  03BF                     __end_of_lcd_ShiftRight:
  1890                           
  1891                           	psect	text6
  1892  03A9                     __ptext6:	
  1893 ;; *************** function _lcd_ShiftLeft *****************
  1894 ;; Defined at:
  1895 ;;		line 290 in file "lcd.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0, pclath, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0
  1911 ;;      Temps:          1       0       0       0       0
  1912 ;;      Totals:         1       0       0       0       0
  1913 ;;Total ram usage:        1 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 2
  1916 ;; This function calls:
  1917 ;;		_lcd_put_byte
  1918 ;; This function is called by:
  1919 ;;		_main
  1920 ;;		_lcd_MoveLeft
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _lcd_ShiftLeft
  1926  03A9                     _lcd_ShiftLeft:
  1927  03A9                     l1293:	
  1928                           ;incstack = 0
  1929                           ; Regs used in _lcd_ShiftLeft: [wreg+status,2+status,0+pclath+cstack]
  1930                           
  1931                           
  1932                           ;lcd.c: 295:      lcd_put_byte(0,0x18);
  1933  03A9  3018               	movlw	24
  1934  03AA  00F6               	movwf	??_lcd_ShiftLeft
  1935  03AB  0876               	movf	??_lcd_ShiftLeft,w
  1936  03AC  00F3               	movwf	lcd_put_byte@b
  1937  03AD  3000               	movlw	0
  1938  03AE  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1939  03B3                     l99:
  1940  03B3  0008               	return
  1941  03B4                     __end_of_lcd_ShiftLeft:
  1942                           
  1943                           	psect	text7
  1944  03BF                     __ptext7:	
  1945 ;; *************** function _getLengthArr *****************
  1946 ;; Defined at:
  1947 ;;		line 39 in file "newmain.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  character       1    wreg     PTR unsigned char 
  1950 ;;		 -> main@class(12), main@HKTT(12), main@your_live(17), main@your_born(17), 
  1951 ;;		 -> main@your_name(16), 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  character       1    4[COMMON] PTR unsigned char 
  1954 ;;		 -> main@class(12), main@HKTT(12), main@your_live(17), main@your_born(17), 
  1955 ;;		 -> main@your_name(16), 
  1956 ;;  i               2    2[COMMON] unsigned int 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  2    0[COMMON] unsigned int 
  1959 ;; Registers used:
  1960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         2       0       0       0       0
  1967 ;;      Locals:         3       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0
  1969 ;;      Totals:         5       0       0       0       0
  1970 ;;Total ram usage:        5 bytes
  1971 ;; Hardware stack levels used: 2
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           
  1980                           ;psect for function _getLengthArr
  1981  03BF                     _getLengthArr:
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1985                           ;getLengthArr@character stored from wreg
  1986  03BF  00F4               	movwf	getLengthArr@character
  1987  03C0                     l1311:
  1988                           
  1989                           ;newmain.c: 40:     unsigned int i = 0;
  1990  03C0  01F2               	clrf	getLengthArr@i
  1991  03C1  01F3               	clrf	getLengthArr@i+1
  1992  03C2                     l1313:
  1993                           
  1994                           ;newmain.c: 42:         if(character[i] == '\n')
  1995  03C2  0872               	movf	getLengthArr@i,w
  1996  03C3  0774               	addwf	getLengthArr@character,w
  1997  03C4  0084               	movwf	4
  1998  03C5  120A  118A  2003  120A  118A  	fcall	stringdir
  1999  03CA  3A0A               	xorlw	10
  2000  03CB  1D03               	skipz
  2001  03CC  2BCE               	goto	u701
  2002  03CD  2BCF               	goto	u700
  2003  03CE                     u701:
  2004  03CE  2BD0               	goto	l1317
  2005  03CF                     u700:
  2006  03CF  2BD7               	goto	l1319
  2007  03D0                     l1317:
  2008                           
  2009                           ;newmain.c: 46:         i++;
  2010  03D0  3001               	movlw	1
  2011  03D1  07F2               	addwf	getLengthArr@i,f
  2012  03D2  1803               	skipnc
  2013  03D3  0AF3               	incf	getLengthArr@i+1,f
  2014  03D4  3000               	movlw	0
  2015  03D5  07F3               	addwf	getLengthArr@i+1,f
  2016  03D6  2BC2               	goto	l1313
  2017  03D7                     l1319:
  2018                           
  2019                           ;newmain.c: 48:     return i;
  2020  03D7  0873               	movf	getLengthArr@i+1,w
  2021  03D8  00F1               	movwf	?_getLengthArr+1
  2022  03D9  0872               	movf	getLengthArr@i,w
  2023  03DA  00F0               	movwf	?_getLengthArr
  2024  03DB                     l160:
  2025  03DB  0008               	return
  2026  03DC                     __end_of_getLengthArr:
  2027                           
  2028                           	psect	text8
  2029  04D2                     __ptext8:	
  2030 ;; *************** function _addCharSpecial *****************
  2031 ;; Defined at:
  2032 ;;		line 28 in file "newmain.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  character       1    wreg     PTR unsigned char 
  2035 ;;		 -> main@special_HKTT_class(33), main@special_name_born_live(49), 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  character       1    9[COMMON] PTR unsigned char 
  2038 ;;		 -> main@special_HKTT_class(33), main@special_name_born_live(49), 
  2039 ;;  i               2    7[COMMON] unsigned int 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         0       0       0       0       0
  2050 ;;      Locals:         3       0       0       0       0
  2051 ;;      Temps:          1       0       0       0       0
  2052 ;;      Totals:         4       0       0       0       0
  2053 ;;Total ram usage:        4 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 2
  2056 ;; This function calls:
  2057 ;;		_lcd_busy
  2058 ;;		_lcd_put_byte
  2059 ;; This function is called by:
  2060 ;;		_main
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           
  2065                           ;psect for function _addCharSpecial
  2066  04D2                     _addCharSpecial:
  2067                           
  2068                           ;incstack = 0
  2069                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2070                           ;addCharSpecial@character stored from wreg
  2071  04D2  00F9               	movwf	addCharSpecial@character
  2072  04D3                     l1297:
  2073                           
  2074                           ;newmain.c: 29:     unsigned int i = 0;
  2075  04D3  01F7               	clrf	addCharSpecial@i
  2076  04D4  01F8               	clrf	addCharSpecial@i+1
  2077  04D5                     l1299:
  2078                           
  2079                           ;newmain.c: 30:     lcd_put_byte(0, 0x40);
  2080  04D5  3040               	movlw	64
  2081  04D6  00F6               	movwf	??_addCharSpecial
  2082  04D7  0876               	movf	??_addCharSpecial,w
  2083  04D8  00F3               	movwf	lcd_put_byte@b
  2084  04D9  3000               	movlw	0
  2085  04DA  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  2086  04DF                     l1301:	
  2087                           ;newmain.c: 31:     while(lcd_busy());
  2088                           
  2089  04DF  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  2090  04E4  3A00               	xorlw	0
  2091  04E5  1D03               	skipz
  2092  04E6  2CE8               	goto	u671
  2093  04E7  2CE9               	goto	u670
  2094  04E8                     u671:
  2095  04E8  2CDF               	goto	l1301
  2096  04E9                     u670:
  2097  04E9  2D0B               	goto	l1309
  2098  04EA                     l1303:
  2099                           
  2100                           ;newmain.c: 33:         lcd_put_byte(1, character[i]);
  2101  04EA  0877               	movf	addCharSpecial@i,w
  2102  04EB  0779               	addwf	addCharSpecial@character,w
  2103  04EC  0084               	movwf	4
  2104  04ED  120A  118A  2003  120A  118A  	fcall	stringdir
  2105  04F2  00F6               	movwf	??_addCharSpecial
  2106  04F3  0876               	movf	??_addCharSpecial,w
  2107  04F4  00F3               	movwf	lcd_put_byte@b
  2108  04F5  3001               	movlw	1
  2109  04F6  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  2110  04FB                     l1305:	
  2111                           ;newmain.c: 34:         while(lcd_busy());
  2112                           
  2113  04FB  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  2114  0500  3A00               	xorlw	0
  2115  0501  1D03               	skipz
  2116  0502  2D04               	goto	u681
  2117  0503  2D05               	goto	u680
  2118  0504                     u681:
  2119  0504  2CFB               	goto	l1305
  2120  0505                     u680:
  2121  0505                     l1307:
  2122                           
  2123                           ;newmain.c: 35:         i++;
  2124  0505  3001               	movlw	1
  2125  0506  07F7               	addwf	addCharSpecial@i,f
  2126  0507  1803               	skipnc
  2127  0508  0AF8               	incf	addCharSpecial@i+1,f
  2128  0509  3000               	movlw	0
  2129  050A  07F8               	addwf	addCharSpecial@i+1,f
  2130  050B                     l1309:
  2131                           
  2132                           ;newmain.c: 32:     while(character[i] != 0x99) {
  2133  050B  0877               	movf	addCharSpecial@i,w
  2134  050C  0779               	addwf	addCharSpecial@character,w
  2135  050D  0084               	movwf	4
  2136  050E  120A  118A  2003  120A  118A  	fcall	stringdir
  2137  0513  3A99               	xorlw	153
  2138  0514  1D03               	skipz
  2139  0515  2D17               	goto	u691
  2140  0516  2D18               	goto	u690
  2141  0517                     u691:
  2142  0517  2CEA               	goto	l1303
  2143  0518                     u690:
  2144  0518                     l153:
  2145  0518  0008               	return
  2146  0519                     __end_of_addCharSpecial:
  2147                           
  2148                           	psect	text9
  2149  0455                     __ptext9:	
  2150 ;; *************** function _lcd_put_byte *****************
  2151 ;; Defined at:
  2152 ;;		line 134 in file "lcd.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  rs              1    wreg     unsigned char 
  2155 ;;  b               1    3[COMMON] unsigned char 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;  rs              1    5[COMMON] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0, pclath, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         1       0       0       0       0
  2168 ;;      Locals:         1       0       0       0       0
  2169 ;;      Temps:          1       0       0       0       0
  2170 ;;      Totals:         3       0       0       0       0
  2171 ;;Total ram usage:        3 bytes
  2172 ;; Hardware stack levels used: 1
  2173 ;; Hardware stack levels required when called: 1
  2174 ;; This function calls:
  2175 ;;		_lcd_put_nibble
  2176 ;; This function is called by:
  2177 ;;		_lcd_gotoxy
  2178 ;;		_lcd_putc
  2179 ;;		_lcd_init
  2180 ;;		_lcd_ShiftLeft
  2181 ;;		_lcd_ShiftRight
  2182 ;;		_addCharSpecial
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _lcd_put_byte
  2188  0455                     _lcd_put_byte:
  2189                           
  2190                           ;incstack = 0
  2191                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  2192                           ;lcd_put_byte@rs stored from wreg
  2193  0455  00F5               	movwf	lcd_put_byte@rs
  2194  0456                     l1197:
  2195                           
  2196                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  2197  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2198  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2199  0458  1208               	bcf	8,4	;volatile
  2200                           
  2201                           ;lcd.c: 140:  TRISD5 = 0;
  2202  0459  1288               	bcf	8,5	;volatile
  2203                           
  2204                           ;lcd.c: 141:  TRISD6 = 0;
  2205  045A  1308               	bcf	8,6	;volatile
  2206                           
  2207                           ;lcd.c: 142:  TRISD7 = 0;
  2208  045B  1388               	bcf	8,7	;volatile
  2209  045C                     l1199:
  2210                           
  2211                           ;lcd.c: 144:  if(rs)
  2212  045C  0875               	movf	lcd_put_byte@rs,w
  2213  045D  1903               	btfsc	3,2
  2214  045E  2C60               	goto	u541
  2215  045F  2C61               	goto	u540
  2216  0460                     u541:
  2217  0460  2C65               	goto	l44
  2218  0461                     u540:
  2219  0461                     l1201:
  2220                           
  2221                           ;lcd.c: 145:   RD1 = 1;
  2222  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0463  1488               	bsf	8,1	;volatile
  2225  0464  2C68               	goto	l1203
  2226  0465                     l44:	
  2227                           ;lcd.c: 146:  else
  2228                           
  2229                           
  2230                           ;lcd.c: 147:   RD1 = 0;
  2231  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0467  1088               	bcf	8,1	;volatile
  2234  0468                     l1203:
  2235                           
  2236                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2237  0468  3006               	movlw	6
  2238  0469  00F4               	movwf	??_lcd_put_byte
  2239  046A                     u927:
  2240  046A  0BF4               	decfsz	??_lcd_put_byte,f
  2241  046B  2C6A               	goto	u927
  2242  046C  0000               	nop
  2243  046D                     l1205:
  2244                           
  2245                           ;lcd.c: 150:  RD2 = 0;
  2246  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2247  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2248  046F  1108               	bcf	8,2	;volatile
  2249                           
  2250                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2251  0470  3006               	movlw	6
  2252  0471  00F4               	movwf	??_lcd_put_byte
  2253  0472                     u937:
  2254  0472  0BF4               	decfsz	??_lcd_put_byte,f
  2255  0473  2C72               	goto	u937
  2256  0474  0000               	nop
  2257  0475                     l1207:
  2258                           
  2259                           ;lcd.c: 153:  RD3 = 0;
  2260  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0477  1188               	bcf	8,3	;volatile
  2263  0478                     l1209:
  2264                           
  2265                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  2266  0478  0873               	movf	lcd_put_byte@b,w
  2267  0479  00F4               	movwf	??_lcd_put_byte
  2268  047A  3004               	movlw	4
  2269  047B                     u555:
  2270  047B  1003               	clrc
  2271  047C  0CF4               	rrf	??_lcd_put_byte,f
  2272  047D  3EFF               	addlw	-1
  2273  047E  1D03               	skipz
  2274  047F  2C7B               	goto	u555
  2275  0480  0874               	movf	??_lcd_put_byte,w
  2276  0481  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  2277  0486                     l1211:
  2278                           
  2279                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  2280  0486  0873               	movf	lcd_put_byte@b,w
  2281  0487  390F               	andlw	15
  2282  0488  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  2283  048D                     l46:
  2284  048D  0008               	return
  2285  048E                     __end_of_lcd_put_byte:
  2286                           
  2287                           	psect	text10
  2288  048E                     __ptext10:	
  2289 ;; *************** function _lcd_put_nibble *****************
  2290 ;; Defined at:
  2291 ;;		line 103 in file "lcd.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  b               1    wreg     unsigned char 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  b               1    1[COMMON] unsigned char 
  2296 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       0       0       0       0
  2307 ;;      Locals:         2       0       0       0       0
  2308 ;;      Temps:          1       0       0       0       0
  2309 ;;      Totals:         3       0       0       0       0
  2310 ;;Total ram usage:        3 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_lcd_put_byte
  2316 ;;		_lcd_init
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _lcd_put_nibble
  2322  048E                     _lcd_put_nibble:
  2323                           
  2324                           ;incstack = 0
  2325                           ; Regs used in _lcd_put_nibble: [wreg]
  2326                           ;lcd_put_nibble@b stored from wreg
  2327  048E  00F1               	movwf	lcd_put_nibble@b
  2328  048F                     l1159:
  2329                           
  2330                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  2331  048F  1683               	bsf	3,5	;RP0=1, select bank1
  2332  0490  1303               	bcf	3,6	;RP1=0, select bank1
  2333  0491  1208               	bcf	8,4	;volatile
  2334                           
  2335                           ;lcd.c: 110:  TRISD5 = 0;
  2336  0492  1288               	bcf	8,5	;volatile
  2337                           
  2338                           ;lcd.c: 111:  TRISD6 = 0;
  2339  0493  1308               	bcf	8,6	;volatile
  2340                           
  2341                           ;lcd.c: 112:  TRISD7 = 0;
  2342  0494  1388               	bcf	8,7	;volatile
  2343  0495                     l1161:
  2344                           
  2345                           ;lcd.c: 114:  temp.Val = b;
  2346  0495  0871               	movf	lcd_put_nibble@b,w
  2347  0496  00F0               	movwf	??_lcd_put_nibble
  2348  0497  0870               	movf	??_lcd_put_nibble,w
  2349  0498  00F2               	movwf	lcd_put_nibble@temp
  2350  0499                     l1163:
  2351                           
  2352                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2353  0499  1872               	btfsc	lcd_put_nibble@temp,0
  2354  049A  2C9C               	goto	u461
  2355  049B  2CA0               	goto	u460
  2356  049C                     u461:
  2357  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2358  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2359  049E  1608               	bsf	8,4	;volatile
  2360  049F  2CA3               	goto	u474
  2361  04A0                     u460:
  2362  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2363  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2364  04A2  1208               	bcf	8,4	;volatile
  2365  04A3                     u474:
  2366  04A3                     l1165:
  2367                           
  2368                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2369  04A3  18F2               	btfsc	lcd_put_nibble@temp,1
  2370  04A4  2CA6               	goto	u481
  2371  04A5  2CAA               	goto	u480
  2372  04A6                     u481:
  2373  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2374  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2375  04A8  1688               	bsf	8,5	;volatile
  2376  04A9  2CAD               	goto	u494
  2377  04AA                     u480:
  2378  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2379  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2380  04AC  1288               	bcf	8,5	;volatile
  2381  04AD                     u494:
  2382  04AD                     l1167:
  2383                           
  2384                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2385  04AD  1972               	btfsc	lcd_put_nibble@temp,2
  2386  04AE  2CB0               	goto	u501
  2387  04AF  2CB4               	goto	u500
  2388  04B0                     u501:
  2389  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2390  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2391  04B2  1708               	bsf	8,6	;volatile
  2392  04B3  2CB7               	goto	u514
  2393  04B4                     u500:
  2394  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2395  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2396  04B6  1308               	bcf	8,6	;volatile
  2397  04B7                     u514:
  2398  04B7                     l1169:
  2399                           
  2400                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2401  04B7  19F2               	btfsc	lcd_put_nibble@temp,3
  2402  04B8  2CBA               	goto	u521
  2403  04B9  2CBE               	goto	u520
  2404  04BA                     u521:
  2405  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2406  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2407  04BC  1788               	bsf	8,7	;volatile
  2408  04BD  2CC1               	goto	u534
  2409  04BE                     u520:
  2410  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2411  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2412  04C0  1388               	bcf	8,7	;volatile
  2413  04C1                     u534:
  2414                           
  2415                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2416  04C1  3006               	movlw	6
  2417  04C2  00F0               	movwf	??_lcd_put_nibble
  2418  04C3                     u947:
  2419  04C3  0BF0               	decfsz	??_lcd_put_nibble,f
  2420  04C4  2CC3               	goto	u947
  2421  04C5  0000               	nop
  2422  04C6                     l1171:
  2423                           
  2424                           ;lcd.c: 122:  RD3 = 1;
  2425  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2426  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2427  04C8  1588               	bsf	8,3	;volatile
  2428                           
  2429                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2430  04C9  3006               	movlw	6
  2431  04CA  00F0               	movwf	??_lcd_put_nibble
  2432  04CB                     u957:
  2433  04CB  0BF0               	decfsz	??_lcd_put_nibble,f
  2434  04CC  2CCB               	goto	u957
  2435  04CD  0000               	nop
  2436  04CE                     l1173:
  2437                           
  2438                           ;lcd.c: 124:  RD3 = 0;
  2439  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2440  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2441  04D0  1188               	bcf	8,3	;volatile
  2442  04D1                     l41:
  2443  04D1  0008               	return
  2444  04D2                     __end_of_lcd_put_nibble:
  2445                           
  2446                           	psect	text11
  2447  0425                     __ptext11:	
  2448 ;; *************** function _lcd_busy *****************
  2449 ;; Defined at:
  2450 ;;		line 18 in file "lcd.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  busy            1    1[COMMON] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      unsigned char 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         0       0       0       0       0
  2465 ;;      Locals:         1       0       0       0       0
  2466 ;;      Temps:          1       0       0       0       0
  2467 ;;      Totals:         2       0       0       0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used: 1
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_lcd_gotoxy
  2474 ;;		_lcd_putc
  2475 ;;		_lcd_init
  2476 ;;		_addCharSpecial
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _lcd_busy
  2482  0425                     _lcd_busy:
  2483  0425                     l1175:	
  2484                           ;incstack = 0
  2485                           ; Regs used in _lcd_busy: [wreg+status,2]
  2486                           
  2487                           
  2488                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2489  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2490  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2491  0427  1608               	bsf	8,4	;volatile
  2492                           
  2493                           ;lcd.c: 25:  TRISD5 = 1;
  2494  0428  1688               	bsf	8,5	;volatile
  2495                           
  2496                           ;lcd.c: 26:  TRISD6 = 1;
  2497  0429  1708               	bsf	8,6	;volatile
  2498                           
  2499                           ;lcd.c: 27:  TRISD7 = 1;
  2500  042A  1788               	bsf	8,7	;volatile
  2501                           
  2502                           ;lcd.c: 29:  RD2 = 1;
  2503  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2504  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2505  042D  1508               	bsf	8,2	;volatile
  2506                           
  2507                           ;lcd.c: 30:  RD1 = 0;
  2508  042E  1088               	bcf	8,1	;volatile
  2509  042F                     l1177:
  2510                           
  2511                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2512  042F  3006               	movlw	6
  2513  0430  00F0               	movwf	??_lcd_busy
  2514  0431                     u967:
  2515  0431  0BF0               	decfsz	??_lcd_busy,f
  2516  0432  2C31               	goto	u967
  2517  0433  0000               	nop
  2518  0434                     l1179:
  2519                           
  2520                           ;lcd.c: 32:  RD3 = 1;
  2521  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2522  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2523  0436  1588               	bsf	8,3	;volatile
  2524                           
  2525                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2526  0437  3006               	movlw	6
  2527  0438  00F0               	movwf	??_lcd_busy
  2528  0439                     u977:
  2529  0439  0BF0               	decfsz	??_lcd_busy,f
  2530  043A  2C39               	goto	u977
  2531  043B  0000               	nop
  2532  043C                     l1181:
  2533                           
  2534                           ;lcd.c: 35:  busy = RD7;
  2535  043C  3000               	movlw	0
  2536  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2537  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2538  043F  1B88               	btfsc	8,7	;volatile
  2539  0440  3001               	movlw	1
  2540  0441  00F1               	movwf	lcd_busy@busy
  2541  0442                     l1183:
  2542                           
  2543                           ;lcd.c: 37:  RD3 = 0;
  2544  0442  1188               	bcf	8,3	;volatile
  2545  0443                     l1185:
  2546                           
  2547                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2548  0443  3006               	movlw	6
  2549  0444  00F0               	movwf	??_lcd_busy
  2550  0445                     u987:
  2551  0445  0BF0               	decfsz	??_lcd_busy,f
  2552  0446  2C45               	goto	u987
  2553  0447  0000               	nop
  2554  0448                     l1187:
  2555                           
  2556                           ;lcd.c: 39:  RD3 = 1;
  2557  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2559  044A  1588               	bsf	8,3	;volatile
  2560  044B                     l1189:
  2561                           
  2562                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2563  044B  3006               	movlw	6
  2564  044C  00F0               	movwf	??_lcd_busy
  2565  044D                     u997:
  2566  044D  0BF0               	decfsz	??_lcd_busy,f
  2567  044E  2C4D               	goto	u997
  2568  044F  0000               	nop
  2569  0450                     l1191:
  2570                           
  2571                           ;lcd.c: 41:  RD3 = 0;
  2572  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0452  1188               	bcf	8,3	;volatile
  2575  0453                     l1193:
  2576                           
  2577                           ;lcd.c: 43:  return busy;
  2578  0453  0871               	movf	lcd_busy@busy,w
  2579  0454                     l33:
  2580  0454  0008               	return
  2581  0455                     __end_of_lcd_busy:
  2582  007E                     btemp	set	126	;btemp
  2583  007E                     wtemp0	set	126
  2584                           
  2585                           	psect	config
  2586                           
  2587                           ;Config register CONFIG1 @ 0x2007
  2588                           ;	Oscillator Selection bits
  2589                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2590                           ;	Watchdog Timer Enable bit
  2591                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2592                           ;	Power-up Timer Enable bit
  2593                           ;	PWRTE = OFF, PWRT disabled
  2594                           ;	RE3/MCLR pin function select bit
  2595                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2596                           ;	Code Protection bit
  2597                           ;	CP = OFF, Program memory code protection is disabled
  2598                           ;	Data Code Protection bit
  2599                           ;	CPD = OFF, Data memory code protection is disabled
  2600                           ;	Brown Out Reset Selection bits
  2601                           ;	BOREN = OFF, BOR disabled
  2602                           ;	Internal External Switchover bit
  2603                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2604                           ;	Fail-Safe Clock Monitor Enabled bit
  2605                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2606                           ;	Low Voltage Programming Enable bit
  2607                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2608                           ;	In-Circuit Debugger Mode bit
  2609                           ;	DEBUG = 0x1, unprogrammed default
  2610  2007                     	org	8199
  2611  2007  20F2               	dw	8434
  2612                           
  2613                           ;Config register CONFIG2 @ 0x2008
  2614                           ;	Brown-out Reset Selection bit
  2615                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2616                           ;	Flash Program Memory Self Write Enable bits
  2617                           ;	WRT = OFF, Write protection off
  2618  2008                     	org	8200
  2619  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    170
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 17
		 -> main@class(CODE[12]), main@HKTT(CODE[12]), main@your_live(CODE[17]), main@your_born(CODE[17]), 
		 -> main@your_name(CODE[16]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 49
		 -> main@special_HKTT_class(CODE[33]), main@special_name_born_live(CODE[49]), 

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 14
		 -> main@MSSV(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_ShiftRight->_lcd_put_byte
    _lcd_ShiftLeft->_lcd_put_byte
    _addCharSpecial->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   12893
                                              1 BANK0      9     9      0
                     _addCharSpecial
                       _getLengthArr
                      _lcd_ShiftLeft
                     _lcd_ShiftRight
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2947
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2869
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1713
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _lcd_ShiftRight                                       1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_ShiftLeft                                        1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _getLengthArr                                         5     3      2     233
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _addCharSpecial                                       4     4      0    1268
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _addCharSpecial
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _getLengthArr
   _lcd_ShiftLeft
     _lcd_put_byte
   _lcd_ShiftRight
     _lcd_put_byte
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 02 19:00:09 2021

                   ??_lcd_ShiftLeft 0076                                   pc 0002  
                                l33 0454                                  l41 04D1  
                                l44 0465                                  l46 048D  
                                l54 0424                                  l72 0574  
                                l78 03FE                                  l96 0617  
                                l99 03B3              __end_of_lcd_put_nibble 04D2  
                  ??_lcd_ShiftRight 0076                                  fsr 0004  
                   ?_addCharSpecial 0070                       ?_lcd_put_byte 0073  
                               l102 03BE                                 l203 07F9  
                               l160 03DB                                 l153 0518  
                               _RD1 0041                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u500 04B4  
                               u501 04B0                                 u520 04BE  
                               u600 0560                                 u521 04BA  
                               u601 055F                                 u514 04B7  
                               u610 03FE                                 u611 03FD  
                               u460 04A0                                 u540 0461  
                               u700 03CF                                 u620 05C9  
                               u461 049C                                 u541 0460  
                               u701 03CE                                 u621 05C8  
                               u534 04C1                                 u630 05DD  
                               u631 05DC                                 u480 04AA  
                               u640 05F1                                 u560 0405  
                               u800 07C2                                 u481 04A6  
                               u641 05F0                                 u561 0404  
                               u801 07C1                                 u474 04A3  
                               u650 0603                                 u570 0424  
                               u810 07F9                                 u555 047B  
                               u651 0602                                 u571 0423  
                               u811 07F8                                 u660 0617  
                               u580 052D                                 u740 0677  
                               u661 0616                                 u581 052C  
                               u805 07BE                                 u741 0676  
                               u494 04AD                                 u670 04E9  
                               u590 054B                                 u750 06A3  
                               u671 04E8                                 u591 054A  
                               u751 06A2                                 u680 0505  
                               u760 06DE                                 u681 0504  
                               u761 06DD                                 u745 0673  
                               u690 0518                                 u770 0714  
                               u691 0517                                 u907 05A5  
                               u771 0713                                 u827 0646  
                               u780 074B                                 u917 05B4  
                               u781 074A                                 u765 06DA  
                               u837 068D                                 u790 078C  
                               u927 046A                                 u791 078B  
                               u847 071C                                 u775 0710  
                               u937 0472                                 u857 072E  
                               u947 04C3                                 u867 07CA  
                               u795 0788                                 u957 04CB  
                               u877 07DC                                 u967 0431  
                               u887 0582                                 u977 0439  
                               u897 0596                                 u987 0445  
                               u997 044D                                 fsr0 0004  
                              l1201 0461                                l1211 0486  
                              l1203 0468                                l1205 046D  
                              l1301 04DF                                l1221 040F  
                              l1213 0400                                l1207 0475  
                              l1303 04EA                                l1311 03C0  
                              l1223 041A                                l1215 0405  
                              l1231 052E                                l1161 0495  
                              l1209 0478                                l1305 04FB  
                              l1313 03C2                                l1217 040A  
                              l1233 0537                                l1241 0561  
                              l1225 051A                                l1401 06E6  
                              l1171 04C6                                l1163 0499  
                              l1307 0505                                l1219 040B  
                              l1235 0541                                l1227 051B  
                              l1251 03EC                                l1411 0714  
                              l1403 06F2                                l1181 043C  
                              l1173 04CE                                l1165 04A3  
                              l1309 050B                                l1317 03D0  
                              l1261 058A                                l1237 054C  
                              l1229 0523                                l1253 03F2  
                              l1421 0735                                l1413 0722  
                              l1405 06F5                                l1191 0450  
                              l1183 0442                                l1175 0425  
                              l1167 04AD                                l1159 048F  
                              l1319 03D7                                l1271 05AA  
                              l1263 058B                                l1255 0575  
                              l1239 0556                                l1247 03DF  
                              l1431 075E                                l1423 073A  
                              l1407 0702                                l1193 0453  
                              l1185 0443                                l1177 042F  
                              l1169 04B7                                l1281 05DD  
                              l1273 05B9                                l1265 058C  
                              l1257 057E                                l1249 03E0  
                              l1441 078C                                l1433 076A  
                              l1425 0742                                l1409 070A  
                              l1361 062B                                l1353 0618  
                              l1187 0448                                l1179 0434  
                              l1291 060D                                l1283 05E7  
                              l1275 05BF                                l1267 0592  
                              l1259 0587                                l1451 07B8  
                              l1443 0794                                l1435 076D  
                              l1427 074B                                l1419 0726  
                              l1371 0658                                l1363 0638  
                              l1355 061C                                l1189 044B  
                              l1197 0456                                l1293 03A9  
                              l1285 05F1                                l1277 05C9  
                              l1269 05A1                                l1461 07D4  
                              l1453 07C2                                l1445 07A0  
                              l1437 077A                                l1429 0757  
                              l1381 0685                                l1373 0665  
                              l1365 063E                                l1357 0620  
                              l1199 045C                                l1295 03B4  
                              l1287 05F9                                l1279 05D3  
                              l1463 07E3                                l1455 07D0  
                              l1447 07A3                                l1439 0782  
                              l1391 06BC                                l1375 066D  
                              l1367 064C                                l1383 0693  
                              l1359 0625                                l1297 04D3  
                              l1289 0603                                l1465 07E8  
                              l1449 07B0                                l1393 06BF  
                              l1385 06A3                                l1377 0677  
                              l1369 0653                                l1299 04D5  
                              l1467 07F0                                l1395 06CC  
                              l1387 06A9                                l1379 067F  
                              l1397 06D4                                l1389 06B0  
                              l1399 06DE                                l1489 0569  
                              _main 0618                        lcd_busy@busy 0071  
                              btemp 007E                                start 0000  
                   ?_lcd_put_nibble 0070                      ??_lcd_put_byte 0074  
                             ?_main 0070               getLengthArr@character 0074  
                             main@i 0028                               pclath 000A  
                             status 0003                               wtemp0 007E  
                   __initialization 07FC                __end_of_getLengthArr 03DC  
                      __end_of_main 07FC                       lcd_gotoxy@col 0078  
                     lcd_gotoxy@row 0076                  lcd_put_nibble@temp 0072  
                            ??_main 0021                              _TRISD1 0441  
                            _TRISD2 0442                              _TRISD3 0443  
                            _TRISD4 0444                              _TRISD5 0445  
                            _TRISD6 0446                              _TRISD7 0447  
                  __end_of_lcd_busy 0455                    __end_of_lcd_init 0618  
                  __end_of_lcd_putc 0575                    __end_of_lcd_puts 03FF  
                     lcd_put_byte@b 0073                    __end_ofmain@HKTT 00B3  
                  __end_ofmain@MSSV 009B             __end_of__initialization 07FC  
              __end_of_lcd_put_byte 048E                    ??_addCharSpecial 0076  
                    __pcstackCOMMON 0070                       main@your_born 006C  
                     main@your_name 007D                       main@your_live 005B  
                 lcd_gotoxy@address 0079               __size_of_getLengthArr 001D  
                  ??_lcd_put_nibble 0070                          __pmaintext 0618  
             __end_of_lcd_ShiftLeft 03B4                          _lcd_gotoxy 03FF  
                      _getLengthArr 03BF                           ?_lcd_busy 0070  
                         ?_lcd_init 0070                           ?_lcd_putc 0070  
                         ?_lcd_puts 0070                          __stringtab 0003  
           addCharSpecial@character 0079                             __ptext1 03DC  
                           __ptext2 0519                             __ptext3 03FF  
                           __ptext4 0575                             __ptext5 03B4  
                           __ptext6 03A9                             __ptext7 03BF  
                           __ptext8 04D2                             __ptext9 0455  
           __size_of_lcd_ShiftRight 000B               __size_of_lcd_put_byte 0039  
                        ??_lcd_busy 0070                          ??_lcd_init 0076  
                        ??_lcd_putc 007A                          ??_lcd_puts 007D  
              end_of_initialization 07FC                      lcd_put_byte@rs 0075  
            main@special_HKTT_class 003A                   __end_ofmain@class 00A7  
                      _lcd_put_byte 0455                         ?_lcd_gotoxy 0076  
                        main@length 0026                 start_initialization 07FC  
               __size_of_lcd_gotoxy 0026                           ___latbits 0002  
                     __pcstackBANK0 0020                     addCharSpecial@i 0077  
                    _lcd_ShiftRight 03B4                   __size_of_lcd_busy 0030  
                 __size_of_lcd_init 00A3                   __size_of_lcd_putc 005C  
                 __size_of_lcd_puts 0023                           __pstrings 0003  
           __size_of_addCharSpecial 0047              __end_of_lcd_ShiftRight 03BF  
            __size_of_lcd_ShiftLeft 000B                         __stringbase 0008  
           __size_of_lcd_put_nibble 0044                           main@class 009B  
                   ?_lcd_ShiftRight 0070                       getLengthArr@i 0072  
                         lcd_putc@c 007C                           lcd_puts@s 0020  
                         main@times 0024                        ??_lcd_gotoxy 0077  
    __end_ofmain@special_HKTT_class 005B               __end_ofmain@your_born 007D  
             __end_ofmain@your_name 008D               __end_ofmain@your_live 006C  
                __end_of_lcd_gotoxy 0425                       _lcd_ShiftLeft 03A9  
                __end_of__stringtab 0009                            __ptext10 048E  
                          __ptext11 0425                            _lcd_busy 0425  
                          _lcd_init 0575                            _lcd_putc 0519  
                          _lcd_puts 03DC                       __size_of_main 01E4  
                          main@HKTT 00A7                            main@MSSV 008D  
                    ?_lcd_ShiftLeft 0070                      _addCharSpecial 04D2  
                   lcd_put_nibble@b 0071  __end_ofmain@special_name_born_live 003A  
        main@special_name_born_live 0009                       ?_getLengthArr 0070  
                         stringcode 0003              __end_of_addCharSpecial 0519  
                    _lcd_put_nibble 048E                            stringdir 0003  
                          stringtab 0003                      ??_getLengthArr 0072  
