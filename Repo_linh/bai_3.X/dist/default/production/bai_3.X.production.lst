

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 06 18:21:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291                           
   292                           	psect	strings
   293  0003                     __pstrings:
   294  0003                     stringtab:
   295  0003                     __stringtab:
   296  0003                     stringcode:	
   297                           ;	String table - string pointers are 1 byte each
   298                           
   299  0003                     stringdir:
   300  0003  3000               	movlw	high stringdir
   301  0004  008A               	movwf	10
   302  0005  0804               	movf	4,w
   303  0006  0A84               	incf	4,f
   304  0007  0782               	addwf	2,f
   305  0008                     __stringbase:
   306  0008  3400               	retlw	0
   307  0009                     __end_of__stringtab:
   308  0009                     main@special_name_born_live:
   309  0009  3400               	retlw	0
   310  000A  340C               	retlw	12
   311  000B  3412               	retlw	18
   312  000C  3412               	retlw	18
   313  000D  340F               	retlw	15
   314  000E  3400               	retlw	0
   315  000F  3404               	retlw	4
   316  0010  3400               	retlw	0
   317  0011  3408               	retlw	8
   318  0012  3404               	retlw	4
   319  0013  3400               	retlw	0
   320  0014  3412               	retlw	18
   321  0015  3412               	retlw	18
   322  0016  3412               	retlw	18
   323  0017  340C               	retlw	12
   324  0018  3400               	retlw	0
   325  0019  3408               	retlw	8
   326  001A  3404               	retlw	4
   327  001B  3400               	retlw	0
   328  001C  340C               	retlw	12
   329  001D  3412               	retlw	18
   330  001E  3412               	retlw	18
   331  001F  340F               	retlw	15
   332  0020  3400               	retlw	0
   333  0021  3406               	retlw	6
   334  0022  3401               	retlw	1
   335  0023  340E               	retlw	14
   336  0024  3411               	retlw	17
   337  0025  3411               	retlw	17
   338  0026  3411               	retlw	17
   339  0027  340E               	retlw	14
   340  0028  3400               	retlw	0
   341  0029  340E               	retlw	14
   342  002A  3409               	retlw	9
   343  002B  3409               	retlw	9
   344  002C  341D               	retlw	29
   345  002D  3409               	retlw	9
   346  002E  3409               	retlw	9
   347  002F  340E               	retlw	14
   348  0030  3400               	retlw	0
   349  0031  3402               	retlw	2
   350  0032  340D               	retlw	13
   351  0033  3412               	retlw	18
   352  0034  340C               	retlw	12
   353  0035  3412               	retlw	18
   354  0036  3412               	retlw	18
   355  0037  340C               	retlw	12
   356  0038  3400               	retlw	0
   357  0039  3499               	retlw	153
   358  003A                     __end_ofmain@special_name_born_live:
   359  003A                     main@special_HKTT_class:
   360  003A  340E               	retlw	14
   361  003B  3409               	retlw	9
   362  003C  3409               	retlw	9
   363  003D  341D               	retlw	29
   364  003E  3409               	retlw	9
   365  003F  3409               	retlw	9
   366  0040  340E               	retlw	14
   367  0041  3400               	retlw	0
   368  0042  3408               	retlw	8
   369  0043  3404               	retlw	4
   370  0044  3400               	retlw	0
   371  0045  340C               	retlw	12
   372  0046  3412               	retlw	18
   373  0047  3412               	retlw	18
   374  0048  340C               	retlw	12
   375  0049  3400               	retlw	0
   376  004A  3401               	retlw	1
   377  004B  340A               	retlw	10
   378  004C  3414               	retlw	20
   379  004D  3400               	retlw	0
   380  004E  341C               	retlw	28
   381  004F  3414               	retlw	20
   382  0050  341F               	retlw	31
   383  0051  3400               	retlw	0
   384  0052  3401               	retlw	1
   385  0053  340D               	retlw	13
   386  0054  3405               	retlw	5
   387  0055  341C               	retlw	28
   388  0056  3414               	retlw	20
   389  0057  3414               	retlw	20
   390  0058  341C               	retlw	28
   391  0059  3400               	retlw	0
   392  005A  3499               	retlw	153
   393  005B                     __end_ofmain@special_HKTT_class:
   394  005B                     main@your_live:
   395  005B  344E               	retlw	78
   396  005C  3403               	retlw	3
   397  005D  3469               	retlw	105
   398  005E  3453               	retlw	83
   399  005F  3469               	retlw	105
   400  0060  346E               	retlw	110
   401  0061  3468               	retlw	104
   402  0062  343A               	retlw	58
   403  0063  3441               	retlw	65
   404  0064  346E               	retlw	110
   405  0065  3420               	retlw	32
   406  0066  3447               	retlw	71
   407  0067  3469               	retlw	105
   408  0068  3461               	retlw	97
   409  0069  346E               	retlw	110
   410  006A  3467               	retlw	103
   411  006B  340A               	retlw	10
   412  006C                     __end_ofmain@your_live:
   413  006C                     main@your_born:
   414  006C  344E               	retlw	78
   415  006D  3467               	retlw	103
   416  006E  3402               	retlw	2
   417  006F  3479               	retlw	121
   418  0070  3453               	retlw	83
   419  0071  3469               	retlw	105
   420  0072  346E               	retlw	110
   421  0073  3468               	retlw	104
   422  0074  343A               	retlw	58
   423  0075  3430               	retlw	48
   424  0076  3435               	retlw	53
   425  0077  342F               	retlw	47
   426  0078  3432               	retlw	50
   427  0079  3430               	retlw	48
   428  007A  3430               	retlw	48
   429  007B  3431               	retlw	49
   430  007C  340A               	retlw	10
   431  007D                     __end_ofmain@your_born:
   432  007D                     main@your_name:
   433  007D  3450               	retlw	80
   434  007E  3468               	retlw	104
   435  007F  3400               	retlw	0
   436  0080  346D               	retlw	109
   437  0081  3420               	retlw	32
   438  0082  3454               	retlw	84
   439  0083  342E               	retlw	46
   440  0084  3454               	retlw	84
   441  0085  3468               	retlw	104
   442  0086  3401               	retlw	1
   443  0087  3479               	retlw	121
   444  0088  3420               	retlw	32
   445  0089  344C               	retlw	76
   446  008A  3469               	retlw	105
   447  008B  346E               	retlw	110
   448  008C  3468               	retlw	104
   449  008D  340A               	retlw	10
   450  008E                     __end_ofmain@your_name:
   451  008E                     main@MSSV:
   452  008E  344D               	retlw	77
   453  008F  3453               	retlw	83
   454  0090  3453               	retlw	83
   455  0091  3456               	retlw	86
   456  0092  343A               	retlw	58
   457  0093  3431               	retlw	49
   458  0094  3439               	retlw	57
   459  0095  3434               	retlw	52
   460  0096  3438               	retlw	56
   461  0097  3434               	retlw	52
   462  0098  3430               	retlw	48
   463  0099  3438               	retlw	56
   464  009A  3431               	retlw	49
   465  009B  340A               	retlw	10
   466  009C  3400               	retlw	0
   467  009D                     __end_ofmain@MSSV:
   468  009D                     main@class:
   469  009D  344C               	retlw	76
   470  009E  3403               	retlw	3
   471  009F  3470               	retlw	112
   472  00A0  343A               	retlw	58
   473  00A1  3420               	retlw	32
   474  00A2  3400               	retlw	0
   475  00A3  3448               	retlw	72
   476  00A4  3456               	retlw	86
   477  00A5  3454               	retlw	84
   478  00A6  3431               	retlw	49
   479  00A7  3435               	retlw	53
   480  00A8  3441               	retlw	65
   481  00A9  340A               	retlw	10
   482  00AA                     __end_ofmain@class:
   483  00AA                     main@HKTT:
   484  00AA  3448               	retlw	72
   485  00AB  344B               	retlw	75
   486  00AC  3454               	retlw	84
   487  00AD  3454               	retlw	84
   488  00AE  343A               	retlw	58
   489  00AF  3420               	retlw	32
   490  00B0  3447               	retlw	71
   491  00B1  3401               	retlw	1
   492  00B2  3420               	retlw	32
   493  00B3  3456               	retlw	86
   494  00B4  3402               	retlw	2
   495  00B5  3470               	retlw	112
   496  00B6  340A               	retlw	10
   497  00B7                     __end_ofmain@HKTT:
   498  0044                     _RD4	set	68
   499  0045                     _RD5	set	69
   500  0046                     _RD6	set	70
   501  0047                     _RD7	set	71
   502  0043                     _RD3	set	67
   503  0041                     _RD1	set	65
   504  0042                     _RD2	set	66
   505  0442                     _TRISD2	set	1090
   506  0441                     _TRISD1	set	1089
   507  0443                     _TRISD3	set	1091
   508  0447                     _TRISD7	set	1095
   509  0446                     _TRISD6	set	1094
   510  0445                     _TRISD5	set	1093
   511  0444                     _TRISD4	set	1092
   512                           
   513                           	psect	cinit
   514  07FC                     start_initialization:	
   515                           ; #config settings
   516                           
   517  07FC                     __initialization:
   518  07FC                     end_of_initialization:	
   519                           ;End of C runtime variable initialization code
   520                           
   521  07FC                     __end_of__initialization:
   522  07FC  0183               	clrf	3
   523  07FD  120A  118A  2E18   	ljmp	_main	;jump to C main() function
   524                           
   525                           	psect	cstackCOMMON
   526  0070                     __pcstackCOMMON:
   527  0070                     ?_lcd_busy:
   528  0070                     ??_lcd_busy:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_lcd_put_nibble:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ??_lcd_put_nibble:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_lcd_putc:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_lcd_puts:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_lcd_init:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_lcd_ShiftLeft:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_lcd_ShiftRight:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_addCharSpecial:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_main:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_getLengthArr:	
   559                           ; 1 bytes @ 0x0
   560                           
   561                           
   562                           ; 2 bytes @ 0x0
   563  0070                     	ds	1
   564  0071                     lcd_busy@busy:
   565  0071                     lcd_put_nibble@b:	
   566                           ; 1 bytes @ 0x1
   567                           
   568                           
   569                           ; 1 bytes @ 0x1
   570  0071                     	ds	1
   571  0072                     ??_getLengthArr:
   572  0072                     lcd_put_nibble@temp:	
   573                           ; 1 bytes @ 0x2
   574                           
   575  0072                     getLengthArr@i:	
   576                           ; 1 bytes @ 0x2
   577                           
   578                           
   579                           ; 2 bytes @ 0x2
   580  0072                     	ds	1
   581  0073                     ?_lcd_put_byte:
   582  0073                     lcd_put_byte@b:	
   583                           ; 1 bytes @ 0x3
   584                           
   585                           
   586                           ; 1 bytes @ 0x3
   587  0073                     	ds	1
   588  0074                     ??_lcd_put_byte:
   589  0074                     getLengthArr@character:	
   590                           ; 1 bytes @ 0x4
   591                           
   592                           
   593                           ; 1 bytes @ 0x4
   594  0074                     	ds	1
   595  0075                     lcd_put_byte@rs:
   596                           
   597                           ; 1 bytes @ 0x5
   598  0075                     	ds	1
   599  0076                     ?_lcd_gotoxy:
   600  0076                     ??_lcd_init:	
   601                           ; 1 bytes @ 0x6
   602                           
   603  0076                     ??_lcd_ShiftLeft:	
   604                           ; 1 bytes @ 0x6
   605                           
   606  0076                     ??_lcd_ShiftRight:	
   607                           ; 1 bytes @ 0x6
   608                           
   609  0076                     ??_addCharSpecial:	
   610                           ; 1 bytes @ 0x6
   611                           
   612  0076                     lcd_gotoxy@row:	
   613                           ; 1 bytes @ 0x6
   614                           
   615                           
   616                           ; 1 bytes @ 0x6
   617  0076                     	ds	1
   618  0077                     ??_lcd_gotoxy:
   619  0077                     addCharSpecial@i:	
   620                           ; 1 bytes @ 0x7
   621                           
   622                           
   623                           ; 2 bytes @ 0x7
   624  0077                     	ds	1
   625  0078                     lcd_gotoxy@col:
   626                           
   627                           ; 1 bytes @ 0x8
   628  0078                     	ds	1
   629  0079                     lcd_gotoxy@address:
   630  0079                     addCharSpecial@character:	
   631                           ; 1 bytes @ 0x9
   632                           
   633                           
   634                           ; 1 bytes @ 0x9
   635  0079                     	ds	1
   636  007A                     ??_lcd_putc:
   637                           
   638                           ; 1 bytes @ 0xA
   639  007A                     	ds	2
   640  007C                     lcd_putc@c:
   641                           
   642                           ; 1 bytes @ 0xC
   643  007C                     	ds	1
   644  007D                     ??_lcd_puts:
   645                           
   646                           ; 1 bytes @ 0xD
   647  007D                     	ds	1
   648                           
   649                           	psect	cstackBANK0
   650  0020                     __pcstackBANK0:
   651  0020                     lcd_puts@s:
   652                           
   653                           ; 1 bytes @ 0x0
   654  0020                     	ds	1
   655  0021                     ??_main:
   656                           
   657                           ; 1 bytes @ 0x1
   658  0021                     	ds	3
   659  0024                     main@times:
   660                           
   661                           ; 2 bytes @ 0x4
   662  0024                     	ds	2
   663  0026                     main@length:
   664                           
   665                           ; 2 bytes @ 0x6
   666  0026                     	ds	2
   667  0028                     main@i:
   668                           
   669                           ; 2 bytes @ 0x8
   670  0028                     	ds	2
   671                           
   672                           	psect	maintext
   673  0618                     __pmaintext:	
   674 ;;
   675 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   676 ;;
   677 ;; *************** function _main *****************
   678 ;; Defined at:
   679 ;;		line 51 in file "newmain.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;		None
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  i               2    8[BANK0 ] unsigned int 
   684 ;;  length          2    6[BANK0 ] unsigned int 
   685 ;;  times           2    4[BANK0 ] unsigned int 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : B00/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         0       6       0       0       0
   697 ;;      Temps:          0       3       0       0       0
   698 ;;      Totals:         0       9       0       0       0
   699 ;;Total ram usage:        9 bytes
   700 ;; Hardware stack levels required when called: 5
   701 ;; This function calls:
   702 ;;		_addCharSpecial
   703 ;;		_getLengthArr
   704 ;;		_lcd_ShiftLeft
   705 ;;		_lcd_ShiftRight
   706 ;;		_lcd_gotoxy
   707 ;;		_lcd_init
   708 ;;		_lcd_putc
   709 ;;		_lcd_puts
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _main
   717  0618                     _main:
   718  0618                     l1353:	
   719                           ;incstack = 0
   720                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   721                           
   722  0618  1283               	bcf	3,5	;RP0=0, select bank0
   723  0619  1303               	bcf	3,6	;RP1=0, select bank0
   724  061A  01A6               	clrf	main@length
   725  061B  01A7               	clrf	main@length+1
   726  061C                     l1355:
   727  061C  3003               	movlw	3
   728  061D  00A4               	movwf	main@times
   729  061E  3000               	movlw	0
   730  061F  00A5               	movwf	main@times+1
   731  0620                     l1357:
   732                           
   733                           ;newmain.c: 77:     lcd_init();
   734  0620  120A  118A  2575  120A  118A  	fcall	_lcd_init
   735  0625                     l1359:
   736                           
   737                           ;newmain.c: 78:     addCharSpecial(special_name_born_live);
   738  0625  3001               	movlw	(low ((main@special_name_born_live-__stringbase)| (0+32768)))& (0+255)
   739  0626  120A  118A  24D2  120A  118A  	fcall	_addCharSpecial
   740  062B                     l1361:
   741                           
   742                           ;newmain.c: 79:     length = getLengthArr(your_name);
   743  062B  3075               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   744  062C  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
   745  0631  0871               	movf	?_getLengthArr+1,w
   746  0632  1283               	bcf	3,5	;RP0=0, select bank0
   747  0633  1303               	bcf	3,6	;RP1=0, select bank0
   748  0634  00A7               	movwf	main@length+1
   749  0635  0870               	movf	?_getLengthArr,w
   750  0636  00A6               	movwf	main@length
   751                           
   752                           ;newmain.c: 81:     while(times--) {
   753  0637  2E93               	goto	l1383
   754  0638                     l1363:
   755                           
   756                           ;newmain.c: 82:         lcd_putc('\f');
   757  0638  300C               	movlw	12
   758  0639  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   759  063E                     l1365:
   760                           
   761                           ;newmain.c: 83:         _delay((unsigned long)((1000/2)*(4000000/4000.0)));
   762  063E  3003               	movlw	3
   763  063F  1283               	bcf	3,5	;RP0=0, select bank0
   764  0640  1303               	bcf	3,6	;RP1=0, select bank0
   765  0641  00A3               	movwf	??_main+2
   766  0642  308A               	movlw	138
   767  0643  00A2               	movwf	??_main+1
   768  0644  3055               	movlw	85
   769  0645  00A1               	movwf	??_main
   770  0646                     u827:
   771  0646  0BA1               	decfsz	??_main,f
   772  0647  2E46               	goto	u827
   773  0648  0BA2               	decfsz	??_main+1,f
   774  0649  2E46               	goto	u827
   775  064A  0BA3               	decfsz	??_main+2,f
   776  064B  2E46               	goto	u827
   777  064C                     l1367:
   778                           
   779                           ;newmain.c: 84:         lcd_gotoxy(0, 0);
   780  064C  01F6               	clrf	lcd_gotoxy@row
   781  064D  3000               	movlw	0
   782  064E  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   783  0653                     l1369:
   784                           
   785                           ;newmain.c: 85:         for(i = 0; i < length; i++) {
   786  0653  1283               	bcf	3,5	;RP0=0, select bank0
   787  0654  1303               	bcf	3,6	;RP1=0, select bank0
   788  0655  01A8               	clrf	main@i
   789  0656  01A9               	clrf	main@i+1
   790  0657  2E6D               	goto	l1375
   791  0658                     l1371:
   792                           
   793                           ;newmain.c: 86:             lcd_putc(your_name[i]);
   794  0658  0828               	movf	main@i,w
   795  0659  3E75               	addlw	low ((main@your_name-__stringbase)| (0+32768))
   796  065A  0084               	movwf	4
   797  065B  120A  118A  2003  120A  118A  	fcall	stringdir
   798  0660  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   799  0665                     l1373:
   800                           
   801                           ;newmain.c: 87:         }
   802  0665  3001               	movlw	1
   803  0666  1283               	bcf	3,5	;RP0=0, select bank0
   804  0667  1303               	bcf	3,6	;RP1=0, select bank0
   805  0668  07A8               	addwf	main@i,f
   806  0669  1803               	skipnc
   807  066A  0AA9               	incf	main@i+1,f
   808  066B  3000               	movlw	0
   809  066C  07A9               	addwf	main@i+1,f
   810  066D                     l1375:
   811  066D  0827               	movf	main@length+1,w
   812  066E  0229               	subwf	main@i+1,w
   813  066F  1D03               	skipz
   814  0670  2E73               	goto	u745
   815  0671  0826               	movf	main@length,w
   816  0672  0228               	subwf	main@i,w
   817  0673                     u745:
   818  0673  1C03               	skipc
   819  0674  2E76               	goto	u741
   820  0675  2E77               	goto	u740
   821  0676                     u741:
   822  0676  2E58               	goto	l1371
   823  0677                     u740:
   824  0677                     l1377:
   825                           
   826                           ;newmain.c: 88:         lcd_gotoxy(0, 1);
   827  0677  01F6               	clrf	lcd_gotoxy@row
   828  0678  0AF6               	incf	lcd_gotoxy@row,f
   829  0679  3000               	movlw	0
   830  067A  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   831  067F                     l1379:
   832                           
   833                           ;newmain.c: 89:         lcd_puts(MSSV);
   834  067F  3086               	movlw	(low ((main@MSSV-__stringbase)| (0+32768)))& (0+255)
   835  0680  120A  118A  23DC  120A  118A  	fcall	_lcd_puts
   836  0685                     l1381:
   837                           
   838                           ;newmain.c: 90:         _delay((unsigned long)((1000/2)*(4000000/4000.0)));
   839  0685  3003               	movlw	3
   840  0686  1283               	bcf	3,5	;RP0=0, select bank0
   841  0687  1303               	bcf	3,6	;RP1=0, select bank0
   842  0688  00A3               	movwf	??_main+2
   843  0689  308A               	movlw	138
   844  068A  00A2               	movwf	??_main+1
   845  068B  3055               	movlw	85
   846  068C  00A1               	movwf	??_main
   847  068D                     u837:
   848  068D  0BA1               	decfsz	??_main,f
   849  068E  2E8D               	goto	u837
   850  068F  0BA2               	decfsz	??_main+1,f
   851  0690  2E8D               	goto	u837
   852  0691  0BA3               	decfsz	??_main+2,f
   853  0692  2E8D               	goto	u837
   854  0693                     l1383:
   855                           
   856                           ;newmain.c: 81:     while(times--) {
   857  0693  3001               	movlw	1
   858  0694  1283               	bcf	3,5	;RP0=0, select bank0
   859  0695  1303               	bcf	3,6	;RP1=0, select bank0
   860  0696  02A4               	subwf	main@times,f
   861  0697  3000               	movlw	0
   862  0698  1C03               	skipc
   863  0699  03A5               	decf	main@times+1,f
   864  069A  02A5               	subwf	main@times+1,f
   865  069B  0A24               	incf	main@times,w
   866  069C  1D03               	skipz
   867  069D  2EA2               	goto	u751
   868  069E  0A25               	incf	main@times+1,w
   869  069F  1D03               	btfss	3,2
   870  06A0  2EA2               	goto	u751
   871  06A1  2EA3               	goto	u750
   872  06A2                     u751:
   873  06A2  2E38               	goto	l1363
   874  06A3                     u750:
   875  06A3                     l1385:
   876                           
   877                           ;newmain.c: 93:     lcd_putc('\f');
   878  06A3  300C               	movlw	12
   879  06A4  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   880  06A9                     l1387:
   881                           
   882                           ;newmain.c: 94:     lcd_gotoxy(0, 0);
   883  06A9  01F6               	clrf	lcd_gotoxy@row
   884  06AA  3000               	movlw	0
   885  06AB  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   886  06B0                     l1389:
   887                           
   888                           ;newmain.c: 95:     length = getLengthArr(your_born);
   889  06B0  3064               	movlw	(low ((main@your_born-__stringbase)| (0+32768)))& (0+255)
   890  06B1  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
   891  06B6  0871               	movf	?_getLengthArr+1,w
   892  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   893  06B8  1303               	bcf	3,6	;RP1=0, select bank0
   894  06B9  00A7               	movwf	main@length+1
   895  06BA  0870               	movf	?_getLengthArr,w
   896  06BB  00A6               	movwf	main@length
   897  06BC                     l1391:
   898                           
   899                           ;newmain.c: 96:     for(i = 0; i < length; i++) {
   900  06BC  01A8               	clrf	main@i
   901  06BD  01A9               	clrf	main@i+1
   902  06BE  2ED4               	goto	l1397
   903  06BF                     l1393:
   904                           
   905                           ;newmain.c: 97:         lcd_putc(your_born[i]);
   906  06BF  0828               	movf	main@i,w
   907  06C0  3E64               	addlw	low ((main@your_born-__stringbase)| (0+32768))
   908  06C1  0084               	movwf	4
   909  06C2  120A  118A  2003  120A  118A  	fcall	stringdir
   910  06C7  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   911  06CC                     l1395:
   912                           
   913                           ;newmain.c: 98:     }
   914  06CC  3001               	movlw	1
   915  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   916  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   917  06CF  07A8               	addwf	main@i,f
   918  06D0  1803               	skipnc
   919  06D1  0AA9               	incf	main@i+1,f
   920  06D2  3000               	movlw	0
   921  06D3  07A9               	addwf	main@i+1,f
   922  06D4                     l1397:
   923  06D4  0827               	movf	main@length+1,w
   924  06D5  0229               	subwf	main@i+1,w
   925  06D6  1D03               	skipz
   926  06D7  2EDA               	goto	u765
   927  06D8  0826               	movf	main@length,w
   928  06D9  0228               	subwf	main@i,w
   929  06DA                     u765:
   930  06DA  1C03               	skipc
   931  06DB  2EDD               	goto	u761
   932  06DC  2EDE               	goto	u760
   933  06DD                     u761:
   934  06DD  2EBF               	goto	l1393
   935  06DE                     u760:
   936  06DE                     l1399:
   937                           
   938                           ;newmain.c: 99:     lcd_gotoxy(0, 1);
   939  06DE  01F6               	clrf	lcd_gotoxy@row
   940  06DF  0AF6               	incf	lcd_gotoxy@row,f
   941  06E0  3000               	movlw	0
   942  06E1  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
   943  06E6                     l1401:
   944                           
   945                           ;newmain.c: 100:     length = getLengthArr(your_live);
   946  06E6  3053               	movlw	(low ((main@your_live-__stringbase)| (0+32768)))& (0+255)
   947  06E7  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
   948  06EC  0871               	movf	?_getLengthArr+1,w
   949  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   950  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   951  06EF  00A7               	movwf	main@length+1
   952  06F0  0870               	movf	?_getLengthArr,w
   953  06F1  00A6               	movwf	main@length
   954  06F2                     l1403:
   955                           
   956                           ;newmain.c: 101:     for(i = 0; i < length; i++) {
   957  06F2  01A8               	clrf	main@i
   958  06F3  01A9               	clrf	main@i+1
   959  06F4  2F0A               	goto	l1409
   960  06F5                     l1405:
   961                           
   962                           ;newmain.c: 102:         lcd_putc(your_live[i]);
   963  06F5  0828               	movf	main@i,w
   964  06F6  3E53               	addlw	low ((main@your_live-__stringbase)| (0+32768))
   965  06F7  0084               	movwf	4
   966  06F8  120A  118A  2003  120A  118A  	fcall	stringdir
   967  06FD  120A  118A  2519  120A  118A  	fcall	_lcd_putc
   968  0702                     l1407:
   969                           
   970                           ;newmain.c: 103:     }
   971  0702  3001               	movlw	1
   972  0703  1283               	bcf	3,5	;RP0=0, select bank0
   973  0704  1303               	bcf	3,6	;RP1=0, select bank0
   974  0705  07A8               	addwf	main@i,f
   975  0706  1803               	skipnc
   976  0707  0AA9               	incf	main@i+1,f
   977  0708  3000               	movlw	0
   978  0709  07A9               	addwf	main@i+1,f
   979  070A                     l1409:
   980  070A  0827               	movf	main@length+1,w
   981  070B  0229               	subwf	main@i+1,w
   982  070C  1D03               	skipz
   983  070D  2F10               	goto	u775
   984  070E  0826               	movf	main@length,w
   985  070F  0228               	subwf	main@i,w
   986  0710                     u775:
   987  0710  1C03               	skipc
   988  0711  2F13               	goto	u771
   989  0712  2F14               	goto	u770
   990  0713                     u771:
   991  0713  2EF5               	goto	l1405
   992  0714                     u770:
   993  0714                     l1411:
   994                           
   995                           ;newmain.c: 104:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   996  0714  300B               	movlw	11
   997  0715  1283               	bcf	3,5	;RP0=0, select bank0
   998  0716  1303               	bcf	3,6	;RP1=0, select bank0
   999  0717  00A3               	movwf	??_main+2
  1000  0718  3026               	movlw	38
  1001  0719  00A2               	movwf	??_main+1
  1002  071A  305D               	movlw	93
  1003  071B  00A1               	movwf	??_main
  1004  071C                     u847:
  1005  071C  0BA1               	decfsz	??_main,f
  1006  071D  2F1C               	goto	u847
  1007  071E  0BA2               	decfsz	??_main+1,f
  1008  071F  2F1C               	goto	u847
  1009  0720  0BA3               	decfsz	??_main+2,f
  1010  0721  2F1C               	goto	u847
  1011  0722                     l1413:
  1012                           
  1013                           ;newmain.c: 105:     for(i = 0; i < 16; i++) {
  1014  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0724  01A8               	clrf	main@i
  1017  0725  01A9               	clrf	main@i+1
  1018  0726                     l1419:
  1019                           
  1020                           ;newmain.c: 106:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1021  0726  3002               	movlw	2
  1022  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0729  00A3               	movwf	??_main+2
  1025  072A  3004               	movlw	4
  1026  072B  00A2               	movwf	??_main+1
  1027  072C  30B9               	movlw	185
  1028  072D  00A1               	movwf	??_main
  1029  072E                     u857:
  1030  072E  0BA1               	decfsz	??_main,f
  1031  072F  2F2E               	goto	u857
  1032  0730  0BA2               	decfsz	??_main+1,f
  1033  0731  2F2E               	goto	u857
  1034  0732  0BA3               	decfsz	??_main+2,f
  1035  0733  2F2E               	goto	u857
  1036  0734  2F35               	nop2
  1037  0735                     l1421:
  1038                           
  1039                           ;newmain.c: 107:         lcd_ShiftRight();
  1040  0735  120A  118A  23B4  120A  118A  	fcall	_lcd_ShiftRight
  1041  073A                     l1423:
  1042                           
  1043                           ;newmain.c: 108:     }
  1044  073A  3001               	movlw	1
  1045  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1046  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1047  073D  07A8               	addwf	main@i,f
  1048  073E  1803               	skipnc
  1049  073F  0AA9               	incf	main@i+1,f
  1050  0740  3000               	movlw	0
  1051  0741  07A9               	addwf	main@i+1,f
  1052  0742                     l1425:
  1053  0742  3000               	movlw	0
  1054  0743  0229               	subwf	main@i+1,w
  1055  0744  3010               	movlw	16
  1056  0745  1903               	skipnz
  1057  0746  0228               	subwf	main@i,w
  1058  0747  1C03               	skipc
  1059  0748  2F4A               	goto	u781
  1060  0749  2F4B               	goto	u780
  1061  074A                     u781:
  1062  074A  2F26               	goto	l1419
  1063  074B                     u780:
  1064  074B                     l1427:
  1065                           
  1066                           ;newmain.c: 110:     addCharSpecial(special_HKTT_class);
  1067  074B  3032               	movlw	(low ((main@special_HKTT_class-__stringbase)| (0+32768)))& (0+255)
  1068  074C  120A  118A  24D2  120A  118A  	fcall	_addCharSpecial
  1069                           
  1070                           ;newmain.c: 111:     lcd_putc('\f');
  1071  0751  300C               	movlw	12
  1072  0752  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1073  0757                     l1429:
  1074                           
  1075                           ;newmain.c: 112:     lcd_gotoxy(0, 0);
  1076  0757  01F6               	clrf	lcd_gotoxy@row
  1077  0758  3000               	movlw	0
  1078  0759  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
  1079  075E                     l1431:
  1080                           
  1081                           ;newmain.c: 113:     length = getLengthArr(HKTT);
  1082  075E  30A2               	movlw	(low ((main@HKTT-__stringbase)| (0+32768)))& (0+255)
  1083  075F  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
  1084  0764  0871               	movf	?_getLengthArr+1,w
  1085  0765  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0766  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0767  00A7               	movwf	main@length+1
  1088  0768  0870               	movf	?_getLengthArr,w
  1089  0769  00A6               	movwf	main@length
  1090  076A                     l1433:
  1091                           
  1092                           ;newmain.c: 114:     for(i = 0; i < length; i++) {
  1093  076A  01A8               	clrf	main@i
  1094  076B  01A9               	clrf	main@i+1
  1095  076C  2F82               	goto	l1439
  1096  076D                     l1435:
  1097                           
  1098                           ;newmain.c: 115:         lcd_putc(HKTT[i]);
  1099  076D  0828               	movf	main@i,w
  1100  076E  3EA2               	addlw	low ((main@HKTT-__stringbase)| (0+32768))
  1101  076F  0084               	movwf	4
  1102  0770  120A  118A  2003  120A  118A  	fcall	stringdir
  1103  0775  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1104  077A                     l1437:
  1105                           
  1106                           ;newmain.c: 116:     }
  1107  077A  3001               	movlw	1
  1108  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1109  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1110  077D  07A8               	addwf	main@i,f
  1111  077E  1803               	skipnc
  1112  077F  0AA9               	incf	main@i+1,f
  1113  0780  3000               	movlw	0
  1114  0781  07A9               	addwf	main@i+1,f
  1115  0782                     l1439:
  1116  0782  0827               	movf	main@length+1,w
  1117  0783  0229               	subwf	main@i+1,w
  1118  0784  1D03               	skipz
  1119  0785  2F88               	goto	u795
  1120  0786  0826               	movf	main@length,w
  1121  0787  0228               	subwf	main@i,w
  1122  0788                     u795:
  1123  0788  1C03               	skipc
  1124  0789  2F8B               	goto	u791
  1125  078A  2F8C               	goto	u790
  1126  078B                     u791:
  1127  078B  2F6D               	goto	l1435
  1128  078C                     u790:
  1129  078C                     l1441:
  1130                           
  1131                           ;newmain.c: 117:     lcd_gotoxy(0, 1);
  1132  078C  01F6               	clrf	lcd_gotoxy@row
  1133  078D  0AF6               	incf	lcd_gotoxy@row,f
  1134  078E  3000               	movlw	0
  1135  078F  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
  1136  0794                     l1443:
  1137                           
  1138                           ;newmain.c: 118:     length = getLengthArr(class);
  1139  0794  3095               	movlw	(low ((main@class-__stringbase)| (0+32768)))& (0+255)
  1140  0795  120A  118A  23BF  120A  118A  	fcall	_getLengthArr
  1141  079A  0871               	movf	?_getLengthArr+1,w
  1142  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1143  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1144  079D  00A7               	movwf	main@length+1
  1145  079E  0870               	movf	?_getLengthArr,w
  1146  079F  00A6               	movwf	main@length
  1147  07A0                     l1445:
  1148                           
  1149                           ;newmain.c: 119:     for(i = 0; i < length; i++) {
  1150  07A0  01A8               	clrf	main@i
  1151  07A1  01A9               	clrf	main@i+1
  1152  07A2  2FB8               	goto	l1451
  1153  07A3                     l1447:
  1154                           
  1155                           ;newmain.c: 120:         lcd_putc(class[i]);
  1156  07A3  0828               	movf	main@i,w
  1157  07A4  3E95               	addlw	low ((main@class-__stringbase)| (0+32768))
  1158  07A5  0084               	movwf	4
  1159  07A6  120A  118A  2003  120A  118A  	fcall	stringdir
  1160  07AB  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1161  07B0                     l1449:
  1162                           
  1163                           ;newmain.c: 121:     }
  1164  07B0  3001               	movlw	1
  1165  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1166  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1167  07B3  07A8               	addwf	main@i,f
  1168  07B4  1803               	skipnc
  1169  07B5  0AA9               	incf	main@i+1,f
  1170  07B6  3000               	movlw	0
  1171  07B7  07A9               	addwf	main@i+1,f
  1172  07B8                     l1451:
  1173  07B8  0827               	movf	main@length+1,w
  1174  07B9  0229               	subwf	main@i+1,w
  1175  07BA  1D03               	skipz
  1176  07BB  2FBE               	goto	u805
  1177  07BC  0826               	movf	main@length,w
  1178  07BD  0228               	subwf	main@i,w
  1179  07BE                     u805:
  1180  07BE  1C03               	skipc
  1181  07BF  2FC1               	goto	u801
  1182  07C0  2FC2               	goto	u800
  1183  07C1                     u801:
  1184  07C1  2FA3               	goto	l1447
  1185  07C2                     u800:
  1186  07C2                     l1453:
  1187                           
  1188                           ;newmain.c: 122:     _delay((unsigned long)((2000)*(4000000/4000.0)));
  1189  07C2  300B               	movlw	11
  1190  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  1191  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  1192  07C5  00A3               	movwf	??_main+2
  1193  07C6  3026               	movlw	38
  1194  07C7  00A2               	movwf	??_main+1
  1195  07C8  305D               	movlw	93
  1196  07C9  00A1               	movwf	??_main
  1197  07CA                     u867:
  1198  07CA  0BA1               	decfsz	??_main,f
  1199  07CB  2FCA               	goto	u867
  1200  07CC  0BA2               	decfsz	??_main+1,f
  1201  07CD  2FCA               	goto	u867
  1202  07CE  0BA3               	decfsz	??_main+2,f
  1203  07CF  2FCA               	goto	u867
  1204  07D0                     l1455:
  1205                           
  1206                           ;newmain.c: 123:     for(i = 0; i < 16; i++) {
  1207  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1208  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1209  07D2  01A8               	clrf	main@i
  1210  07D3  01A9               	clrf	main@i+1
  1211  07D4                     l1461:
  1212                           
  1213                           ;newmain.c: 124:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1214  07D4  3002               	movlw	2
  1215  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1216  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1217  07D7  00A3               	movwf	??_main+2
  1218  07D8  3004               	movlw	4
  1219  07D9  00A2               	movwf	??_main+1
  1220  07DA  30B9               	movlw	185
  1221  07DB  00A1               	movwf	??_main
  1222  07DC                     u877:
  1223  07DC  0BA1               	decfsz	??_main,f
  1224  07DD  2FDC               	goto	u877
  1225  07DE  0BA2               	decfsz	??_main+1,f
  1226  07DF  2FDC               	goto	u877
  1227  07E0  0BA3               	decfsz	??_main+2,f
  1228  07E1  2FDC               	goto	u877
  1229  07E2  2FE3               	nop2
  1230  07E3                     l1463:
  1231                           
  1232                           ;newmain.c: 125:         lcd_ShiftLeft();
  1233  07E3  120A  118A  23A9  120A  118A  	fcall	_lcd_ShiftLeft
  1234  07E8                     l1465:
  1235                           
  1236                           ;newmain.c: 126:     }
  1237  07E8  3001               	movlw	1
  1238  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1239  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1240  07EB  07A8               	addwf	main@i,f
  1241  07EC  1803               	skipnc
  1242  07ED  0AA9               	incf	main@i+1,f
  1243  07EE  3000               	movlw	0
  1244  07EF  07A9               	addwf	main@i+1,f
  1245  07F0                     l1467:
  1246  07F0  3000               	movlw	0
  1247  07F1  0229               	subwf	main@i+1,w
  1248  07F2  3010               	movlw	16
  1249  07F3  1903               	skipnz
  1250  07F4  0228               	subwf	main@i,w
  1251  07F5  1C03               	skipc
  1252  07F6  2FF8               	goto	u811
  1253  07F7  2FF9               	goto	u810
  1254  07F8                     u811:
  1255  07F8  2FD4               	goto	l1461
  1256  07F9                     u810:
  1257  07F9                     l203:
  1258  07F9  120A  118A  2800   	ljmp	start
  1259  07FC                     __end_of_main:
  1260                           
  1261                           	psect	text1
  1262  03DC                     __ptext1:	
  1263 ;; *************** function _lcd_puts *****************
  1264 ;; Defined at:
  1265 ;;		line 224 in file "lcd.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  s               1    wreg     PTR const unsigned char 
  1268 ;;		 -> main@MSSV(15), 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  1271 ;;		 -> main@MSSV(15), 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         0       1       0       0       0
  1283 ;;      Temps:          1       0       0       0       0
  1284 ;;      Totals:         1       1       0       0       0
  1285 ;;Total ram usage:        2 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 4
  1288 ;; This function calls:
  1289 ;;		_lcd_putc
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           
  1296                           ;psect for function _lcd_puts
  1297  03DC                     _lcd_puts:
  1298                           
  1299                           ;incstack = 0
  1300                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1301                           ;lcd_puts@s stored from wreg
  1302  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1303  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1304  03DE  00A0               	movwf	lcd_puts@s
  1305  03DF                     l1247:
  1306                           
  1307                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  1308  03DF  2BF2               	goto	l1253
  1309  03E0                     l1249:
  1310                           
  1311                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  1312  03E0  0820               	movf	lcd_puts@s,w
  1313  03E1  0084               	movwf	4
  1314  03E2  120A  118A  2003  120A  118A  	fcall	stringdir
  1315  03E7  120A  118A  2519  120A  118A  	fcall	_lcd_putc
  1316  03EC                     l1251:
  1317  03EC  3001               	movlw	1
  1318  03ED  00FD               	movwf	??_lcd_puts
  1319  03EE  087D               	movf	??_lcd_puts,w
  1320  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1321  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1322  03F1  07A0               	addwf	lcd_puts@s,f
  1323  03F2                     l1253:
  1324                           
  1325                           ;lcd.c: 229:  while(*s)
  1326  03F2  0820               	movf	lcd_puts@s,w
  1327  03F3  0084               	movwf	4
  1328  03F4  120A  118A  2003  120A  118A  	fcall	stringdir
  1329  03F9  3A00               	xorlw	0
  1330  03FA  1D03               	skipz
  1331  03FB  2BFD               	goto	u611
  1332  03FC  2BFE               	goto	u610
  1333  03FD                     u611:
  1334  03FD  2BE0               	goto	l1249
  1335  03FE                     u610:
  1336  03FE                     l78:
  1337  03FE  0008               	return
  1338  03FF                     __end_of_lcd_puts:
  1339                           
  1340                           	psect	text2
  1341  0519                     __ptext2:	
  1342 ;; *************** function _lcd_putc *****************
  1343 ;; Defined at:
  1344 ;;		line 190 in file "lcd.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  c               1    wreg     unsigned char 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  c               1   12[COMMON] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         1       0       0       0       0
  1360 ;;      Temps:          2       0       0       0       0
  1361 ;;      Totals:         3       0       0       0       0
  1362 ;;Total ram usage:        3 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 3
  1365 ;; This function calls:
  1366 ;;		_lcd_busy
  1367 ;;		_lcd_gotoxy
  1368 ;;		_lcd_put_byte
  1369 ;; This function is called by:
  1370 ;;		_lcd_puts
  1371 ;;		_main
  1372 ;;		_lcd_String_Delay
  1373 ;;		_putch
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           
  1378                           ;psect for function _lcd_putc
  1379  0519                     _lcd_putc:
  1380                           
  1381                           ;incstack = 0
  1382                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1383                           ;lcd_putc@c stored from wreg
  1384  0519  00FC               	movwf	lcd_putc@c
  1385  051A                     l1225:
  1386                           
  1387                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1388  051A  2D61               	goto	l1241
  1389  051B                     l1227:
  1390                           
  1391                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1392  051B  01F3               	clrf	lcd_put_byte@b
  1393  051C  0AF3               	incf	lcd_put_byte@b,f
  1394  051D  3000               	movlw	0
  1395  051E  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1396  0523                     l1229:	
  1397                           ;lcd.c: 199:    while(lcd_busy());
  1398                           
  1399  0523  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1400  0528  3A00               	xorlw	0
  1401  0529  1D03               	skipz
  1402  052A  2D2C               	goto	u581
  1403  052B  2D2D               	goto	u580
  1404  052C                     u581:
  1405  052C  2D23               	goto	l1229
  1406  052D                     u580:
  1407  052D  2D74               	goto	l72
  1408  052E                     l1231:
  1409                           
  1410                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1411  052E  01F6               	clrf	lcd_gotoxy@row
  1412  052F  0AF6               	incf	lcd_gotoxy@row,f
  1413  0530  3000               	movlw	0
  1414  0531  120A  118A  23FF  120A  118A  	fcall	_lcd_gotoxy
  1415                           
  1416                           ;lcd.c: 203:    break;
  1417  0536  2D74               	goto	l72
  1418  0537                     l1233:
  1419                           
  1420                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1421  0537  3010               	movlw	16
  1422  0538  00FA               	movwf	??_lcd_putc
  1423  0539  087A               	movf	??_lcd_putc,w
  1424  053A  00F3               	movwf	lcd_put_byte@b
  1425  053B  3000               	movlw	0
  1426  053C  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1427  0541                     l1235:	
  1428                           ;lcd.c: 206:    while(lcd_busy());
  1429                           
  1430  0541  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1431  0546  3A00               	xorlw	0
  1432  0547  1D03               	skipz
  1433  0548  2D4A               	goto	u591
  1434  0549  2D4B               	goto	u590
  1435  054A                     u591:
  1436  054A  2D41               	goto	l1235
  1437  054B                     u590:
  1438  054B  2D74               	goto	l72
  1439  054C                     l1237:
  1440                           
  1441                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1442  054C  087C               	movf	lcd_putc@c,w
  1443  054D  00FA               	movwf	??_lcd_putc
  1444  054E  087A               	movf	??_lcd_putc,w
  1445  054F  00F3               	movwf	lcd_put_byte@b
  1446  0550  3001               	movlw	1
  1447  0551  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1448  0556                     l1239:	
  1449                           ;lcd.c: 212:     while(lcd_busy());
  1450                           
  1451  0556  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1452  055B  3A00               	xorlw	0
  1453  055C  1D03               	skipz
  1454  055D  2D5F               	goto	u601
  1455  055E  2D60               	goto	u600
  1456  055F                     u601:
  1457  055F  2D56               	goto	l1239
  1458  0560                     u600:
  1459  0560  2D74               	goto	l72
  1460  0561                     l1241:
  1461  0561  087C               	movf	lcd_putc@c,w
  1462  0562  00FA               	movwf	??_lcd_putc
  1463  0563  01FB               	clrf	??_lcd_putc+1
  1464                           
  1465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 1, Range of values is 0 to 0
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte            4     3 (average)
  1471                           ; direct_byte           11     8 (fixed)
  1472                           ; jumptable            260     6 (fixed)
  1473                           ;	Chosen strategy is simple_byte
  1474  0564  087B               	movf	??_lcd_putc+1,w
  1475  0565  3A00               	xorlw	0	; case 0
  1476  0566  1903               	skipnz
  1477  0567  2D69               	goto	l1489
  1478  0568  2D4C               	goto	l1237
  1479  0569                     l1489:
  1480                           
  1481                           ; Switch size 1, requested type "simple"
  1482                           ; Number of cases is 3, Range of values is 8 to 12
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte           10     6 (average)
  1486                           ; direct_byte           26    11 (fixed)
  1487                           ; jumptable            263     9 (fixed)
  1488                           ;	Chosen strategy is simple_byte
  1489  0569  087A               	movf	??_lcd_putc,w
  1490  056A  3A08               	xorlw	8	; case 8
  1491  056B  1903               	skipnz
  1492  056C  2D37               	goto	l1233
  1493  056D  3A02               	xorlw	2	; case 10
  1494  056E  1903               	skipnz
  1495  056F  2D2E               	goto	l1231
  1496  0570  3A06               	xorlw	6	; case 12
  1497  0571  1903               	skipnz
  1498  0572  2D1B               	goto	l1227
  1499  0573  2D4C               	goto	l1237
  1500  0574                     l72:
  1501  0574  0008               	return
  1502  0575                     __end_of_lcd_putc:
  1503                           
  1504                           	psect	text3
  1505  03FF                     __ptext3:	
  1506 ;; *************** function _lcd_gotoxy *****************
  1507 ;; Defined at:
  1508 ;;		line 167 in file "lcd.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  col             1    wreg     unsigned char 
  1511 ;;  row             1    6[COMMON] unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  col             1    8[COMMON] unsigned char 
  1514 ;;  address         1    9[COMMON] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, pclath, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         1       0       0       0       0
  1525 ;;      Locals:         2       0       0       0       0
  1526 ;;      Temps:          1       0       0       0       0
  1527 ;;      Totals:         4       0       0       0       0
  1528 ;;Total ram usage:        4 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 2
  1531 ;; This function calls:
  1532 ;;		_lcd_busy
  1533 ;;		_lcd_put_byte
  1534 ;; This function is called by:
  1535 ;;		_lcd_putc
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _lcd_gotoxy
  1542  03FF                     _lcd_gotoxy:
  1543                           
  1544                           ;incstack = 0
  1545                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1546                           ;lcd_gotoxy@col stored from wreg
  1547  03FF  00F8               	movwf	lcd_gotoxy@col
  1548  0400                     l1213:
  1549                           
  1550                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1551  0400  0876               	movf	lcd_gotoxy@row,w
  1552  0401  1903               	btfsc	3,2
  1553  0402  2C04               	goto	u561
  1554  0403  2C05               	goto	u560
  1555  0404                     u561:
  1556  0404  2C0A               	goto	l1217
  1557  0405                     u560:
  1558  0405                     l1215:
  1559                           
  1560                           ;lcd.c: 174:   address=0x40;
  1561  0405  3040               	movlw	64
  1562  0406  00F7               	movwf	??_lcd_gotoxy
  1563  0407  0877               	movf	??_lcd_gotoxy,w
  1564  0408  00F9               	movwf	lcd_gotoxy@address
  1565  0409  2C0B               	goto	l1219
  1566  040A                     l1217:
  1567                           
  1568                           ;lcd.c: 176:   address=0;
  1569  040A  01F9               	clrf	lcd_gotoxy@address
  1570  040B                     l1219:
  1571                           
  1572                           ;lcd.c: 178:  address += col;
  1573  040B  0878               	movf	lcd_gotoxy@col,w
  1574  040C  00F7               	movwf	??_lcd_gotoxy
  1575  040D  0877               	movf	??_lcd_gotoxy,w
  1576  040E  07F9               	addwf	lcd_gotoxy@address,f
  1577  040F                     l1221:
  1578                           
  1579                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1580  040F  0879               	movf	lcd_gotoxy@address,w
  1581  0410  3880               	iorlw	128
  1582  0411  00F7               	movwf	??_lcd_gotoxy
  1583  0412  0877               	movf	??_lcd_gotoxy,w
  1584  0413  00F3               	movwf	lcd_put_byte@b
  1585  0414  3000               	movlw	0
  1586  0415  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1587  041A                     l1223:	
  1588                           ;lcd.c: 181:  while(lcd_busy());
  1589                           
  1590  041A  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1591  041F  3A00               	xorlw	0
  1592  0420  1D03               	skipz
  1593  0421  2C23               	goto	u571
  1594  0422  2C24               	goto	u570
  1595  0423                     u571:
  1596  0423  2C1A               	goto	l1223
  1597  0424                     u570:
  1598  0424                     l54:
  1599  0424  0008               	return
  1600  0425                     __end_of_lcd_gotoxy:
  1601                           
  1602                           	psect	text4
  1603  0575                     __ptext4:	
  1604 ;; *************** function _lcd_init *****************
  1605 ;; Defined at:
  1606 ;;		line 241 in file "lcd.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  i               1    0        unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0
  1622 ;;      Temps:          2       0       0       0       0
  1623 ;;      Totals:         2       0       0       0       0
  1624 ;;Total ram usage:        2 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 2
  1627 ;; This function calls:
  1628 ;;		_lcd_busy
  1629 ;;		_lcd_put_byte
  1630 ;;		_lcd_put_nibble
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _lcd_init
  1638  0575                     _lcd_init:
  1639  0575                     l1255:	
  1640                           ;incstack = 0
  1641                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1642                           
  1643                           
  1644                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1645  0575  1683               	bsf	3,5	;RP0=1, select bank1
  1646  0576  1303               	bcf	3,6	;RP1=0, select bank1
  1647  0577  1188               	bcf	8,3	;volatile
  1648                           
  1649                           ;lcd.c: 248:  TRISD1 = 0;
  1650  0578  1088               	bcf	8,1	;volatile
  1651                           
  1652                           ;lcd.c: 249:  TRISD2 = 0;
  1653  0579  1108               	bcf	8,2	;volatile
  1654                           
  1655                           ;lcd.c: 250:  TRISD4 = 0;
  1656  057A  1208               	bcf	8,4	;volatile
  1657                           
  1658                           ;lcd.c: 251:  TRISD5 = 0;
  1659  057B  1288               	bcf	8,5	;volatile
  1660                           
  1661                           ;lcd.c: 252:  TRISD6 = 0;
  1662  057C  1308               	bcf	8,6	;volatile
  1663                           
  1664                           ;lcd.c: 253:  TRISD7 = 0;
  1665  057D  1388               	bcf	8,7	;volatile
  1666  057E                     l1257:
  1667                           
  1668                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1669  057E  3014               	movlw	20
  1670  057F  00F7               	movwf	??_lcd_init+1
  1671  0580  3079               	movlw	121
  1672  0581  00F6               	movwf	??_lcd_init
  1673  0582                     u887:
  1674  0582  0BF6               	decfsz	??_lcd_init,f
  1675  0583  2D82               	goto	u887
  1676  0584  0BF7               	decfsz	??_lcd_init+1,f
  1677  0585  2D82               	goto	u887
  1678  0586  2D87               	nop2
  1679  0587                     l1259:
  1680                           
  1681                           ;lcd.c: 257:  RD1 = 0;
  1682  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0589  1088               	bcf	8,1	;volatile
  1685  058A                     l1261:
  1686                           
  1687                           ;lcd.c: 258:  RD2 = 0;
  1688  058A  1108               	bcf	8,2	;volatile
  1689  058B                     l1263:
  1690                           
  1691                           ;lcd.c: 259:  RD3 = 0;
  1692  058B  1188               	bcf	8,3	;volatile
  1693  058C                     l1265:
  1694                           
  1695                           ;lcd.c: 261:  lcd_put_nibble(3);
  1696  058C  3003               	movlw	3
  1697  058D  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1698  0592                     l1267:
  1699                           
  1700                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1701  0592  300D               	movlw	13
  1702  0593  00F7               	movwf	??_lcd_init+1
  1703  0594  30FB               	movlw	251
  1704  0595  00F6               	movwf	??_lcd_init
  1705  0596                     u897:
  1706  0596  0BF6               	decfsz	??_lcd_init,f
  1707  0597  2D96               	goto	u897
  1708  0598  0BF7               	decfsz	??_lcd_init+1,f
  1709  0599  2D96               	goto	u897
  1710  059A  2D9B               	nop2
  1711                           
  1712                           ;lcd.c: 263:  lcd_put_nibble(3);
  1713  059B  3003               	movlw	3
  1714  059C  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1715  05A1                     l1269:
  1716                           
  1717                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1718  05A1  300D               	movlw	13
  1719  05A2  00F7               	movwf	??_lcd_init+1
  1720  05A3  30FB               	movlw	251
  1721  05A4  00F6               	movwf	??_lcd_init
  1722  05A5                     u907:
  1723  05A5  0BF6               	decfsz	??_lcd_init,f
  1724  05A6  2DA5               	goto	u907
  1725  05A7  0BF7               	decfsz	??_lcd_init+1,f
  1726  05A8  2DA5               	goto	u907
  1727  05A9  2DAA               	nop2
  1728  05AA                     l1271:
  1729                           
  1730                           ;lcd.c: 265:  lcd_put_nibble(3);
  1731  05AA  3003               	movlw	3
  1732  05AB  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1733                           
  1734                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1735  05B0  300D               	movlw	13
  1736  05B1  00F7               	movwf	??_lcd_init+1
  1737  05B2  30FB               	movlw	251
  1738  05B3  00F6               	movwf	??_lcd_init
  1739  05B4                     u917:
  1740  05B4  0BF6               	decfsz	??_lcd_init,f
  1741  05B5  2DB4               	goto	u917
  1742  05B6  0BF7               	decfsz	??_lcd_init+1,f
  1743  05B7  2DB4               	goto	u917
  1744  05B8  2DB9               	nop2
  1745  05B9                     l1273:
  1746                           
  1747                           ;lcd.c: 268:  lcd_put_nibble(2);
  1748  05B9  3002               	movlw	2
  1749  05BA  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  1750  05BF                     l1275:	
  1751                           ;lcd.c: 269:  while(lcd_busy());
  1752                           
  1753  05BF  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1754  05C4  3A00               	xorlw	0
  1755  05C5  1D03               	skipz
  1756  05C6  2DC8               	goto	u621
  1757  05C7  2DC9               	goto	u620
  1758  05C8                     u621:
  1759  05C8  2DBF               	goto	l1275
  1760  05C9                     u620:
  1761  05C9                     l1277:
  1762                           
  1763                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1764  05C9  3028               	movlw	40
  1765  05CA  00F6               	movwf	??_lcd_init
  1766  05CB  0876               	movf	??_lcd_init,w
  1767  05CC  00F3               	movwf	lcd_put_byte@b
  1768  05CD  3000               	movlw	0
  1769  05CE  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1770  05D3                     l1279:	
  1771                           ;lcd.c: 272:  while(lcd_busy());
  1772                           
  1773  05D3  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1774  05D8  3A00               	xorlw	0
  1775  05D9  1D03               	skipz
  1776  05DA  2DDC               	goto	u631
  1777  05DB  2DDD               	goto	u630
  1778  05DC                     u631:
  1779  05DC  2DD3               	goto	l1279
  1780  05DD                     u630:
  1781  05DD                     l1281:
  1782                           
  1783                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1784  05DD  300C               	movlw	12
  1785  05DE  00F6               	movwf	??_lcd_init
  1786  05DF  0876               	movf	??_lcd_init,w
  1787  05E0  00F3               	movwf	lcd_put_byte@b
  1788  05E1  3000               	movlw	0
  1789  05E2  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1790  05E7                     l1283:	
  1791                           ;lcd.c: 275:  while(lcd_busy());
  1792                           
  1793  05E7  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1794  05EC  3A00               	xorlw	0
  1795  05ED  1D03               	skipz
  1796  05EE  2DF0               	goto	u641
  1797  05EF  2DF1               	goto	u640
  1798  05F0                     u641:
  1799  05F0  2DE7               	goto	l1283
  1800  05F1                     u640:
  1801  05F1                     l1285:
  1802                           
  1803                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1804  05F1  01F3               	clrf	lcd_put_byte@b
  1805  05F2  0AF3               	incf	lcd_put_byte@b,f
  1806  05F3  3000               	movlw	0
  1807  05F4  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1808  05F9                     l1287:	
  1809                           ;lcd.c: 278:  while(lcd_busy());
  1810                           
  1811  05F9  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1812  05FE  3A00               	xorlw	0
  1813  05FF  1D03               	skipz
  1814  0600  2E02               	goto	u651
  1815  0601  2E03               	goto	u650
  1816  0602                     u651:
  1817  0602  2DF9               	goto	l1287
  1818  0603                     u650:
  1819  0603                     l1289:
  1820                           
  1821                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1822  0603  3006               	movlw	6
  1823  0604  00F6               	movwf	??_lcd_init
  1824  0605  0876               	movf	??_lcd_init,w
  1825  0606  00F3               	movwf	lcd_put_byte@b
  1826  0607  3000               	movlw	0
  1827  0608  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1828  060D                     l1291:	
  1829                           ;lcd.c: 281:  while(lcd_busy());
  1830                           
  1831  060D  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  1832  0612  3A00               	xorlw	0
  1833  0613  1D03               	skipz
  1834  0614  2E16               	goto	u661
  1835  0615  2E17               	goto	u660
  1836  0616                     u661:
  1837  0616  2E0D               	goto	l1291
  1838  0617                     u660:
  1839  0617                     l96:
  1840  0617  0008               	return
  1841  0618                     __end_of_lcd_init:
  1842                           
  1843                           	psect	text5
  1844  03B4                     __ptext5:	
  1845 ;; *************** function _lcd_ShiftRight *****************
  1846 ;; Defined at:
  1847 ;;		line 304 in file "lcd.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0, pclath, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         0       0       0       0       0
  1862 ;;      Locals:         0       0       0       0       0
  1863 ;;      Temps:          1       0       0       0       0
  1864 ;;      Totals:         1       0       0       0       0
  1865 ;;Total ram usage:        1 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 2
  1868 ;; This function calls:
  1869 ;;		_lcd_put_byte
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;;		_lcd_MoveRight
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function _lcd_ShiftRight
  1878  03B4                     _lcd_ShiftRight:
  1879  03B4                     l1295:	
  1880                           ;incstack = 0
  1881                           ; Regs used in _lcd_ShiftRight: [wreg+status,2+status,0+pclath+cstack]
  1882                           
  1883                           
  1884                           ;lcd.c: 309:      lcd_put_byte(0,0x1C);
  1885  03B4  301C               	movlw	28
  1886  03B5  00F6               	movwf	??_lcd_ShiftRight
  1887  03B6  0876               	movf	??_lcd_ShiftRight,w
  1888  03B7  00F3               	movwf	lcd_put_byte@b
  1889  03B8  3000               	movlw	0
  1890  03B9  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1891  03BE                     l102:
  1892  03BE  0008               	return
  1893  03BF                     __end_of_lcd_ShiftRight:
  1894                           
  1895                           	psect	text6
  1896  03A9                     __ptext6:	
  1897 ;; *************** function _lcd_ShiftLeft *****************
  1898 ;; Defined at:
  1899 ;;		line 290 in file "lcd.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0
  1915 ;;      Temps:          1       0       0       0       0
  1916 ;;      Totals:         1       0       0       0       0
  1917 ;;Total ram usage:        1 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 2
  1920 ;; This function calls:
  1921 ;;		_lcd_put_byte
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;;		_lcd_MoveLeft
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _lcd_ShiftLeft
  1930  03A9                     _lcd_ShiftLeft:
  1931  03A9                     l1293:	
  1932                           ;incstack = 0
  1933                           ; Regs used in _lcd_ShiftLeft: [wreg+status,2+status,0+pclath+cstack]
  1934                           
  1935                           
  1936                           ;lcd.c: 295:      lcd_put_byte(0,0x18);
  1937  03A9  3018               	movlw	24
  1938  03AA  00F6               	movwf	??_lcd_ShiftLeft
  1939  03AB  0876               	movf	??_lcd_ShiftLeft,w
  1940  03AC  00F3               	movwf	lcd_put_byte@b
  1941  03AD  3000               	movlw	0
  1942  03AE  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  1943  03B3                     l99:
  1944  03B3  0008               	return
  1945  03B4                     __end_of_lcd_ShiftLeft:
  1946                           
  1947                           	psect	text7
  1948  03BF                     __ptext7:	
  1949 ;; *************** function _getLengthArr *****************
  1950 ;; Defined at:
  1951 ;;		line 39 in file "newmain.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  character       1    wreg     PTR unsigned char 
  1954 ;;		 -> main@class(13), main@HKTT(13), main@your_live(17), main@your_born(17), 
  1955 ;;		 -> main@your_name(17), 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  character       1    4[COMMON] PTR unsigned char 
  1958 ;;		 -> main@class(13), main@HKTT(13), main@your_live(17), main@your_born(17), 
  1959 ;;		 -> main@your_name(17), 
  1960 ;;  i               2    2[COMMON] unsigned int 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  2    0[COMMON] unsigned int 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1970 ;;      Params:         2       0       0       0       0
  1971 ;;      Locals:         3       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0
  1973 ;;      Totals:         5       0       0       0       0
  1974 ;;Total ram usage:        5 bytes
  1975 ;; Hardware stack levels used: 2
  1976 ;; This function calls:
  1977 ;;		Nothing
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _getLengthArr
  1985  03BF                     _getLengthArr:
  1986                           
  1987                           ;incstack = 0
  1988                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1989                           ;getLengthArr@character stored from wreg
  1990  03BF  00F4               	movwf	getLengthArr@character
  1991  03C0                     l1311:
  1992                           
  1993                           ;newmain.c: 40:     unsigned int i = 0;
  1994  03C0  01F2               	clrf	getLengthArr@i
  1995  03C1  01F3               	clrf	getLengthArr@i+1
  1996  03C2                     l1313:
  1997                           
  1998                           ;newmain.c: 42:         if(character[i] == '\n')
  1999  03C2  0872               	movf	getLengthArr@i,w
  2000  03C3  0774               	addwf	getLengthArr@character,w
  2001  03C4  0084               	movwf	4
  2002  03C5  120A  118A  2003  120A  118A  	fcall	stringdir
  2003  03CA  3A0A               	xorlw	10
  2004  03CB  1D03               	skipz
  2005  03CC  2BCE               	goto	u701
  2006  03CD  2BCF               	goto	u700
  2007  03CE                     u701:
  2008  03CE  2BD0               	goto	l1317
  2009  03CF                     u700:
  2010  03CF  2BD7               	goto	l1319
  2011  03D0                     l1317:
  2012                           
  2013                           ;newmain.c: 46:         i++;
  2014  03D0  3001               	movlw	1
  2015  03D1  07F2               	addwf	getLengthArr@i,f
  2016  03D2  1803               	skipnc
  2017  03D3  0AF3               	incf	getLengthArr@i+1,f
  2018  03D4  3000               	movlw	0
  2019  03D5  07F3               	addwf	getLengthArr@i+1,f
  2020  03D6  2BC2               	goto	l1313
  2021  03D7                     l1319:
  2022                           
  2023                           ;newmain.c: 48:     return i;
  2024  03D7  0873               	movf	getLengthArr@i+1,w
  2025  03D8  00F1               	movwf	?_getLengthArr+1
  2026  03D9  0872               	movf	getLengthArr@i,w
  2027  03DA  00F0               	movwf	?_getLengthArr
  2028  03DB                     l160:
  2029  03DB  0008               	return
  2030  03DC                     __end_of_getLengthArr:
  2031                           
  2032                           	psect	text8
  2033  04D2                     __ptext8:	
  2034 ;; *************** function _addCharSpecial *****************
  2035 ;; Defined at:
  2036 ;;		line 28 in file "newmain.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  character       1    wreg     PTR unsigned char 
  2039 ;;		 -> main@special_HKTT_class(33), main@special_name_born_live(49), 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  character       1    9[COMMON] PTR unsigned char 
  2042 ;;		 -> main@special_HKTT_class(33), main@special_name_born_live(49), 
  2043 ;;  i               2    7[COMMON] unsigned int 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2053 ;;      Params:         0       0       0       0       0
  2054 ;;      Locals:         3       0       0       0       0
  2055 ;;      Temps:          1       0       0       0       0
  2056 ;;      Totals:         4       0       0       0       0
  2057 ;;Total ram usage:        4 bytes
  2058 ;; Hardware stack levels used: 1
  2059 ;; Hardware stack levels required when called: 2
  2060 ;; This function calls:
  2061 ;;		_lcd_busy
  2062 ;;		_lcd_put_byte
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _addCharSpecial
  2070  04D2                     _addCharSpecial:
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2074                           ;addCharSpecial@character stored from wreg
  2075  04D2  00F9               	movwf	addCharSpecial@character
  2076  04D3                     l1297:
  2077                           
  2078                           ;newmain.c: 29:     unsigned int i = 0;
  2079  04D3  01F7               	clrf	addCharSpecial@i
  2080  04D4  01F8               	clrf	addCharSpecial@i+1
  2081  04D5                     l1299:
  2082                           
  2083                           ;newmain.c: 30:     lcd_put_byte(0, 0x40);
  2084  04D5  3040               	movlw	64
  2085  04D6  00F6               	movwf	??_addCharSpecial
  2086  04D7  0876               	movf	??_addCharSpecial,w
  2087  04D8  00F3               	movwf	lcd_put_byte@b
  2088  04D9  3000               	movlw	0
  2089  04DA  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  2090  04DF                     l1301:	
  2091                           ;newmain.c: 31:     while(lcd_busy());
  2092                           
  2093  04DF  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  2094  04E4  3A00               	xorlw	0
  2095  04E5  1D03               	skipz
  2096  04E6  2CE8               	goto	u671
  2097  04E7  2CE9               	goto	u670
  2098  04E8                     u671:
  2099  04E8  2CDF               	goto	l1301
  2100  04E9                     u670:
  2101  04E9  2D0B               	goto	l1309
  2102  04EA                     l1303:
  2103                           
  2104                           ;newmain.c: 33:         lcd_put_byte(1, character[i]);
  2105  04EA  0877               	movf	addCharSpecial@i,w
  2106  04EB  0779               	addwf	addCharSpecial@character,w
  2107  04EC  0084               	movwf	4
  2108  04ED  120A  118A  2003  120A  118A  	fcall	stringdir
  2109  04F2  00F6               	movwf	??_addCharSpecial
  2110  04F3  0876               	movf	??_addCharSpecial,w
  2111  04F4  00F3               	movwf	lcd_put_byte@b
  2112  04F5  3001               	movlw	1
  2113  04F6  120A  118A  2455  120A  118A  	fcall	_lcd_put_byte
  2114  04FB                     l1305:	
  2115                           ;newmain.c: 34:         while(lcd_busy());
  2116                           
  2117  04FB  120A  118A  2425  120A  118A  	fcall	_lcd_busy
  2118  0500  3A00               	xorlw	0
  2119  0501  1D03               	skipz
  2120  0502  2D04               	goto	u681
  2121  0503  2D05               	goto	u680
  2122  0504                     u681:
  2123  0504  2CFB               	goto	l1305
  2124  0505                     u680:
  2125  0505                     l1307:
  2126                           
  2127                           ;newmain.c: 35:         i++;
  2128  0505  3001               	movlw	1
  2129  0506  07F7               	addwf	addCharSpecial@i,f
  2130  0507  1803               	skipnc
  2131  0508  0AF8               	incf	addCharSpecial@i+1,f
  2132  0509  3000               	movlw	0
  2133  050A  07F8               	addwf	addCharSpecial@i+1,f
  2134  050B                     l1309:
  2135                           
  2136                           ;newmain.c: 32:     while(character[i] != 0x99) {
  2137  050B  0877               	movf	addCharSpecial@i,w
  2138  050C  0779               	addwf	addCharSpecial@character,w
  2139  050D  0084               	movwf	4
  2140  050E  120A  118A  2003  120A  118A  	fcall	stringdir
  2141  0513  3A99               	xorlw	153
  2142  0514  1D03               	skipz
  2143  0515  2D17               	goto	u691
  2144  0516  2D18               	goto	u690
  2145  0517                     u691:
  2146  0517  2CEA               	goto	l1303
  2147  0518                     u690:
  2148  0518                     l153:
  2149  0518  0008               	return
  2150  0519                     __end_of_addCharSpecial:
  2151                           
  2152                           	psect	text9
  2153  0455                     __ptext9:	
  2154 ;; *************** function _lcd_put_byte *****************
  2155 ;; Defined at:
  2156 ;;		line 134 in file "lcd.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  rs              1    wreg     unsigned char 
  2159 ;;  b               1    3[COMMON] unsigned char 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  rs              1    5[COMMON] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         1       0       0       0       0
  2172 ;;      Locals:         1       0       0       0       0
  2173 ;;      Temps:          1       0       0       0       0
  2174 ;;      Totals:         3       0       0       0       0
  2175 ;;Total ram usage:        3 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 1
  2178 ;; This function calls:
  2179 ;;		_lcd_put_nibble
  2180 ;; This function is called by:
  2181 ;;		_lcd_gotoxy
  2182 ;;		_lcd_putc
  2183 ;;		_lcd_init
  2184 ;;		_lcd_ShiftLeft
  2185 ;;		_lcd_ShiftRight
  2186 ;;		_addCharSpecial
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           
  2191                           ;psect for function _lcd_put_byte
  2192  0455                     _lcd_put_byte:
  2193                           
  2194                           ;incstack = 0
  2195                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  2196                           ;lcd_put_byte@rs stored from wreg
  2197  0455  00F5               	movwf	lcd_put_byte@rs
  2198  0456                     l1197:
  2199                           
  2200                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  2201  0456  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0457  1303               	bcf	3,6	;RP1=0, select bank1
  2203  0458  1208               	bcf	8,4	;volatile
  2204                           
  2205                           ;lcd.c: 140:  TRISD5 = 0;
  2206  0459  1288               	bcf	8,5	;volatile
  2207                           
  2208                           ;lcd.c: 141:  TRISD6 = 0;
  2209  045A  1308               	bcf	8,6	;volatile
  2210                           
  2211                           ;lcd.c: 142:  TRISD7 = 0;
  2212  045B  1388               	bcf	8,7	;volatile
  2213  045C                     l1199:
  2214                           
  2215                           ;lcd.c: 144:  if(rs)
  2216  045C  0875               	movf	lcd_put_byte@rs,w
  2217  045D  1903               	btfsc	3,2
  2218  045E  2C60               	goto	u541
  2219  045F  2C61               	goto	u540
  2220  0460                     u541:
  2221  0460  2C65               	goto	l44
  2222  0461                     u540:
  2223  0461                     l1201:
  2224                           
  2225                           ;lcd.c: 145:   RD1 = 1;
  2226  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0463  1488               	bsf	8,1	;volatile
  2229  0464  2C68               	goto	l1203
  2230  0465                     l44:	
  2231                           ;lcd.c: 146:  else
  2232                           
  2233                           
  2234                           ;lcd.c: 147:   RD1 = 0;
  2235  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0467  1088               	bcf	8,1	;volatile
  2238  0468                     l1203:
  2239                           
  2240                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2241  0468  3006               	movlw	6
  2242  0469  00F4               	movwf	??_lcd_put_byte
  2243  046A                     u927:
  2244  046A  0BF4               	decfsz	??_lcd_put_byte,f
  2245  046B  2C6A               	goto	u927
  2246  046C  0000               	nop
  2247  046D                     l1205:
  2248                           
  2249                           ;lcd.c: 150:  RD2 = 0;
  2250  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2251  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2252  046F  1108               	bcf	8,2	;volatile
  2253                           
  2254                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2255  0470  3006               	movlw	6
  2256  0471  00F4               	movwf	??_lcd_put_byte
  2257  0472                     u937:
  2258  0472  0BF4               	decfsz	??_lcd_put_byte,f
  2259  0473  2C72               	goto	u937
  2260  0474  0000               	nop
  2261  0475                     l1207:
  2262                           
  2263                           ;lcd.c: 153:  RD3 = 0;
  2264  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0477  1188               	bcf	8,3	;volatile
  2267  0478                     l1209:
  2268                           
  2269                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  2270  0478  0873               	movf	lcd_put_byte@b,w
  2271  0479  00F4               	movwf	??_lcd_put_byte
  2272  047A  3004               	movlw	4
  2273  047B                     u555:
  2274  047B  1003               	clrc
  2275  047C  0CF4               	rrf	??_lcd_put_byte,f
  2276  047D  3EFF               	addlw	-1
  2277  047E  1D03               	skipz
  2278  047F  2C7B               	goto	u555
  2279  0480  0874               	movf	??_lcd_put_byte,w
  2280  0481  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  2281  0486                     l1211:
  2282                           
  2283                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  2284  0486  0873               	movf	lcd_put_byte@b,w
  2285  0487  390F               	andlw	15
  2286  0488  120A  118A  248E  120A  118A  	fcall	_lcd_put_nibble
  2287  048D                     l46:
  2288  048D  0008               	return
  2289  048E                     __end_of_lcd_put_byte:
  2290                           
  2291                           	psect	text10
  2292  048E                     __ptext10:	
  2293 ;; *************** function _lcd_put_nibble *****************
  2294 ;; Defined at:
  2295 ;;		line 103 in file "lcd.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  b               1    wreg     unsigned char 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  b               1    1[COMMON] unsigned char 
  2300 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2310 ;;      Params:         0       0       0       0       0
  2311 ;;      Locals:         2       0       0       0       0
  2312 ;;      Temps:          1       0       0       0       0
  2313 ;;      Totals:         3       0       0       0       0
  2314 ;;Total ram usage:        3 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_lcd_put_byte
  2320 ;;		_lcd_init
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _lcd_put_nibble
  2326  048E                     _lcd_put_nibble:
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _lcd_put_nibble: [wreg]
  2330                           ;lcd_put_nibble@b stored from wreg
  2331  048E  00F1               	movwf	lcd_put_nibble@b
  2332  048F                     l1159:
  2333                           
  2334                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  2335  048F  1683               	bsf	3,5	;RP0=1, select bank1
  2336  0490  1303               	bcf	3,6	;RP1=0, select bank1
  2337  0491  1208               	bcf	8,4	;volatile
  2338                           
  2339                           ;lcd.c: 110:  TRISD5 = 0;
  2340  0492  1288               	bcf	8,5	;volatile
  2341                           
  2342                           ;lcd.c: 111:  TRISD6 = 0;
  2343  0493  1308               	bcf	8,6	;volatile
  2344                           
  2345                           ;lcd.c: 112:  TRISD7 = 0;
  2346  0494  1388               	bcf	8,7	;volatile
  2347  0495                     l1161:
  2348                           
  2349                           ;lcd.c: 114:  temp.Val = b;
  2350  0495  0871               	movf	lcd_put_nibble@b,w
  2351  0496  00F0               	movwf	??_lcd_put_nibble
  2352  0497  0870               	movf	??_lcd_put_nibble,w
  2353  0498  00F2               	movwf	lcd_put_nibble@temp
  2354  0499                     l1163:
  2355                           
  2356                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2357  0499  1872               	btfsc	lcd_put_nibble@temp,0
  2358  049A  2C9C               	goto	u461
  2359  049B  2CA0               	goto	u460
  2360  049C                     u461:
  2361  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2362  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2363  049E  1608               	bsf	8,4	;volatile
  2364  049F  2CA3               	goto	u474
  2365  04A0                     u460:
  2366  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2367  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2368  04A2  1208               	bcf	8,4	;volatile
  2369  04A3                     u474:
  2370  04A3                     l1165:
  2371                           
  2372                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2373  04A3  18F2               	btfsc	lcd_put_nibble@temp,1
  2374  04A4  2CA6               	goto	u481
  2375  04A5  2CAA               	goto	u480
  2376  04A6                     u481:
  2377  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2378  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2379  04A8  1688               	bsf	8,5	;volatile
  2380  04A9  2CAD               	goto	u494
  2381  04AA                     u480:
  2382  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2383  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2384  04AC  1288               	bcf	8,5	;volatile
  2385  04AD                     u494:
  2386  04AD                     l1167:
  2387                           
  2388                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2389  04AD  1972               	btfsc	lcd_put_nibble@temp,2
  2390  04AE  2CB0               	goto	u501
  2391  04AF  2CB4               	goto	u500
  2392  04B0                     u501:
  2393  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2394  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2395  04B2  1708               	bsf	8,6	;volatile
  2396  04B3  2CB7               	goto	u514
  2397  04B4                     u500:
  2398  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2399  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2400  04B6  1308               	bcf	8,6	;volatile
  2401  04B7                     u514:
  2402  04B7                     l1169:
  2403                           
  2404                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2405  04B7  19F2               	btfsc	lcd_put_nibble@temp,3
  2406  04B8  2CBA               	goto	u521
  2407  04B9  2CBE               	goto	u520
  2408  04BA                     u521:
  2409  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2410  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2411  04BC  1788               	bsf	8,7	;volatile
  2412  04BD  2CC1               	goto	u534
  2413  04BE                     u520:
  2414  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2415  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2416  04C0  1388               	bcf	8,7	;volatile
  2417  04C1                     u534:
  2418                           
  2419                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2420  04C1  3006               	movlw	6
  2421  04C2  00F0               	movwf	??_lcd_put_nibble
  2422  04C3                     u947:
  2423  04C3  0BF0               	decfsz	??_lcd_put_nibble,f
  2424  04C4  2CC3               	goto	u947
  2425  04C5  0000               	nop
  2426  04C6                     l1171:
  2427                           
  2428                           ;lcd.c: 122:  RD3 = 1;
  2429  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2430  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2431  04C8  1588               	bsf	8,3	;volatile
  2432                           
  2433                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2434  04C9  3006               	movlw	6
  2435  04CA  00F0               	movwf	??_lcd_put_nibble
  2436  04CB                     u957:
  2437  04CB  0BF0               	decfsz	??_lcd_put_nibble,f
  2438  04CC  2CCB               	goto	u957
  2439  04CD  0000               	nop
  2440  04CE                     l1173:
  2441                           
  2442                           ;lcd.c: 124:  RD3 = 0;
  2443  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2444  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  2445  04D0  1188               	bcf	8,3	;volatile
  2446  04D1                     l41:
  2447  04D1  0008               	return
  2448  04D2                     __end_of_lcd_put_nibble:
  2449                           
  2450                           	psect	text11
  2451  0425                     __ptext11:	
  2452 ;; *************** function _lcd_busy *****************
  2453 ;; Defined at:
  2454 ;;		line 18 in file "lcd.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  busy            1    1[COMMON] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      unsigned char 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       0       0       0       0
  2469 ;;      Locals:         1       0       0       0       0
  2470 ;;      Temps:          1       0       0       0       0
  2471 ;;      Totals:         2       0       0       0       0
  2472 ;;Total ram usage:        2 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		_lcd_gotoxy
  2478 ;;		_lcd_putc
  2479 ;;		_lcd_init
  2480 ;;		_addCharSpecial
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _lcd_busy
  2486  0425                     _lcd_busy:
  2487  0425                     l1175:	
  2488                           ;incstack = 0
  2489                           ; Regs used in _lcd_busy: [wreg+status,2]
  2490                           
  2491                           
  2492                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2493  0425  1683               	bsf	3,5	;RP0=1, select bank1
  2494  0426  1303               	bcf	3,6	;RP1=0, select bank1
  2495  0427  1608               	bsf	8,4	;volatile
  2496                           
  2497                           ;lcd.c: 25:  TRISD5 = 1;
  2498  0428  1688               	bsf	8,5	;volatile
  2499                           
  2500                           ;lcd.c: 26:  TRISD6 = 1;
  2501  0429  1708               	bsf	8,6	;volatile
  2502                           
  2503                           ;lcd.c: 27:  TRISD7 = 1;
  2504  042A  1788               	bsf	8,7	;volatile
  2505                           
  2506                           ;lcd.c: 29:  RD2 = 1;
  2507  042B  1283               	bcf	3,5	;RP0=0, select bank0
  2508  042C  1303               	bcf	3,6	;RP1=0, select bank0
  2509  042D  1508               	bsf	8,2	;volatile
  2510                           
  2511                           ;lcd.c: 30:  RD1 = 0;
  2512  042E  1088               	bcf	8,1	;volatile
  2513  042F                     l1177:
  2514                           
  2515                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2516  042F  3006               	movlw	6
  2517  0430  00F0               	movwf	??_lcd_busy
  2518  0431                     u967:
  2519  0431  0BF0               	decfsz	??_lcd_busy,f
  2520  0432  2C31               	goto	u967
  2521  0433  0000               	nop
  2522  0434                     l1179:
  2523                           
  2524                           ;lcd.c: 32:  RD3 = 1;
  2525  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2526  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2527  0436  1588               	bsf	8,3	;volatile
  2528                           
  2529                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2530  0437  3006               	movlw	6
  2531  0438  00F0               	movwf	??_lcd_busy
  2532  0439                     u977:
  2533  0439  0BF0               	decfsz	??_lcd_busy,f
  2534  043A  2C39               	goto	u977
  2535  043B  0000               	nop
  2536  043C                     l1181:
  2537                           
  2538                           ;lcd.c: 35:  busy = RD7;
  2539  043C  3000               	movlw	0
  2540  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2541  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2542  043F  1B88               	btfsc	8,7	;volatile
  2543  0440  3001               	movlw	1
  2544  0441  00F1               	movwf	lcd_busy@busy
  2545  0442                     l1183:
  2546                           
  2547                           ;lcd.c: 37:  RD3 = 0;
  2548  0442  1188               	bcf	8,3	;volatile
  2549  0443                     l1185:
  2550                           
  2551                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2552  0443  3006               	movlw	6
  2553  0444  00F0               	movwf	??_lcd_busy
  2554  0445                     u987:
  2555  0445  0BF0               	decfsz	??_lcd_busy,f
  2556  0446  2C45               	goto	u987
  2557  0447  0000               	nop
  2558  0448                     l1187:
  2559                           
  2560                           ;lcd.c: 39:  RD3 = 1;
  2561  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2563  044A  1588               	bsf	8,3	;volatile
  2564  044B                     l1189:
  2565                           
  2566                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2567  044B  3006               	movlw	6
  2568  044C  00F0               	movwf	??_lcd_busy
  2569  044D                     u997:
  2570  044D  0BF0               	decfsz	??_lcd_busy,f
  2571  044E  2C4D               	goto	u997
  2572  044F  0000               	nop
  2573  0450                     l1191:
  2574                           
  2575                           ;lcd.c: 41:  RD3 = 0;
  2576  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0452  1188               	bcf	8,3	;volatile
  2579  0453                     l1193:
  2580                           
  2581                           ;lcd.c: 43:  return busy;
  2582  0453  0871               	movf	lcd_busy@busy,w
  2583  0454                     l33:
  2584  0454  0008               	return
  2585  0455                     __end_of_lcd_busy:
  2586  007E                     btemp	set	126	;btemp
  2587  007E                     wtemp0	set	126
  2588                           
  2589                           	psect	config
  2590                           
  2591                           ;Config register CONFIG1 @ 0x2007
  2592                           ;	Oscillator Selection bits
  2593                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2594                           ;	Watchdog Timer Enable bit
  2595                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2596                           ;	Power-up Timer Enable bit
  2597                           ;	PWRTE = OFF, PWRT disabled
  2598                           ;	RE3/MCLR pin function select bit
  2599                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2600                           ;	Code Protection bit
  2601                           ;	CP = OFF, Program memory code protection is disabled
  2602                           ;	Data Code Protection bit
  2603                           ;	CPD = OFF, Data memory code protection is disabled
  2604                           ;	Brown Out Reset Selection bits
  2605                           ;	BOREN = OFF, BOR disabled
  2606                           ;	Internal External Switchover bit
  2607                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2608                           ;	Fail-Safe Clock Monitor Enabled bit
  2609                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2610                           ;	Low Voltage Programming Enable bit
  2611                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2612                           ;	In-Circuit Debugger Mode bit
  2613                           ;	DEBUG = 0x1, unprogrammed default
  2614  2007                     	org	8199
  2615  2007  20F2               	dw	8434
  2616                           
  2617                           ;Config register CONFIG2 @ 0x2008
  2618                           ;	Brown-out Reset Selection bit
  2619                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2620                           ;	Flash Program Memory Self Write Enable bits
  2621                           ;	WRT = OFF, Write protection off
  2622  2008                     	org	8200
  2623  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    174
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 17
		 -> main@class(CODE[13]), main@HKTT(CODE[13]), main@your_live(CODE[17]), main@your_born(CODE[17]), 
		 -> main@your_name(CODE[17]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 49
		 -> main@special_HKTT_class(CODE[33]), main@special_name_born_live(CODE[49]), 

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 15
		 -> main@MSSV(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_ShiftRight->_lcd_put_byte
    _lcd_ShiftLeft->_lcd_put_byte
    _addCharSpecial->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   12893
                                              1 BANK0      9     9      0
                     _addCharSpecial
                       _getLengthArr
                      _lcd_ShiftLeft
                     _lcd_ShiftRight
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2947
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2869
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1713
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (1) _lcd_ShiftRight                                       1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_ShiftLeft                                        1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _getLengthArr                                         5     3      2     233
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _addCharSpecial                                       4     4      0    1268
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _addCharSpecial
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _getLengthArr
   _lcd_ShiftLeft
     _lcd_put_byte
   _lcd_ShiftRight
     _lcd_put_byte
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 06 18:21:20 2021

                   ??_lcd_ShiftLeft 0076                                   pc 0002  
                                l33 0454                                  l41 04D1  
                                l44 0465                                  l46 048D  
                                l54 0424                                  l72 0574  
                                l78 03FE                                  l96 0617  
                                l99 03B3              __end_of_lcd_put_nibble 04D2  
                  ??_lcd_ShiftRight 0076                                  fsr 0004  
                   ?_addCharSpecial 0070                       ?_lcd_put_byte 0073  
                               l102 03BE                                 l203 07F9  
                               l160 03DB                                 l153 0518  
                               _RD1 0041                                 _RD2 0042  
                               _RD3 0043                                 _RD4 0044  
                               _RD5 0045                                 _RD6 0046  
                               _RD7 0047                                 u500 04B4  
                               u501 04B0                                 u520 04BE  
                               u600 0560                                 u521 04BA  
                               u601 055F                                 u514 04B7  
                               u610 03FE                                 u611 03FD  
                               u460 04A0                                 u540 0461  
                               u700 03CF                                 u620 05C9  
                               u461 049C                                 u541 0460  
                               u701 03CE                                 u621 05C8  
                               u534 04C1                                 u630 05DD  
                               u631 05DC                                 u480 04AA  
                               u640 05F1                                 u560 0405  
                               u800 07C2                                 u481 04A6  
                               u641 05F0                                 u561 0404  
                               u801 07C1                                 u474 04A3  
                               u650 0603                                 u570 0424  
                               u810 07F9                                 u555 047B  
                               u651 0602                                 u571 0423  
                               u811 07F8                                 u660 0617  
                               u580 052D                                 u740 0677  
                               u661 0616                                 u581 052C  
                               u805 07BE                                 u741 0676  
                               u494 04AD                                 u670 04E9  
                               u590 054B                                 u750 06A3  
                               u671 04E8                                 u591 054A  
                               u751 06A2                                 u680 0505  
                               u760 06DE                                 u681 0504  
                               u761 06DD                                 u745 0673  
                               u690 0518                                 u770 0714  
                               u691 0517                                 u907 05A5  
                               u771 0713                                 u827 0646  
                               u780 074B                                 u917 05B4  
                               u781 074A                                 u765 06DA  
                               u837 068D                                 u790 078C  
                               u927 046A                                 u791 078B  
                               u847 071C                                 u775 0710  
                               u937 0472                                 u857 072E  
                               u947 04C3                                 u867 07CA  
                               u795 0788                                 u957 04CB  
                               u877 07DC                                 u967 0431  
                               u887 0582                                 u977 0439  
                               u897 0596                                 u987 0445  
                               u997 044D                                 fsr0 0004  
                              l1201 0461                                l1211 0486  
                              l1203 0468                                l1205 046D  
                              l1301 04DF                                l1221 040F  
                              l1213 0400                                l1207 0475  
                              l1303 04EA                                l1311 03C0  
                              l1223 041A                                l1215 0405  
                              l1231 052E                                l1161 0495  
                              l1209 0478                                l1305 04FB  
                              l1313 03C2                                l1217 040A  
                              l1233 0537                                l1241 0561  
                              l1225 051A                                l1401 06E6  
                              l1171 04C6                                l1163 0499  
                              l1307 0505                                l1219 040B  
                              l1235 0541                                l1227 051B  
                              l1251 03EC                                l1411 0714  
                              l1403 06F2                                l1181 043C  
                              l1173 04CE                                l1165 04A3  
                              l1309 050B                                l1317 03D0  
                              l1261 058A                                l1237 054C  
                              l1229 0523                                l1253 03F2  
                              l1421 0735                                l1413 0722  
                              l1405 06F5                                l1191 0450  
                              l1183 0442                                l1175 0425  
                              l1167 04AD                                l1159 048F  
                              l1319 03D7                                l1271 05AA  
                              l1263 058B                                l1255 0575  
                              l1239 0556                                l1247 03DF  
                              l1431 075E                                l1423 073A  
                              l1407 0702                                l1193 0453  
                              l1185 0443                                l1177 042F  
                              l1169 04B7                                l1281 05DD  
                              l1273 05B9                                l1265 058C  
                              l1257 057E                                l1249 03E0  
                              l1441 078C                                l1433 076A  
                              l1425 0742                                l1409 070A  
                              l1361 062B                                l1353 0618  
                              l1187 0448                                l1179 0434  
                              l1291 060D                                l1283 05E7  
                              l1275 05BF                                l1267 0592  
                              l1259 0587                                l1451 07B8  
                              l1443 0794                                l1435 076D  
                              l1427 074B                                l1419 0726  
                              l1371 0658                                l1363 0638  
                              l1355 061C                                l1189 044B  
                              l1197 0456                                l1293 03A9  
                              l1285 05F1                                l1277 05C9  
                              l1269 05A1                                l1461 07D4  
                              l1453 07C2                                l1445 07A0  
                              l1437 077A                                l1429 0757  
                              l1381 0685                                l1373 0665  
                              l1365 063E                                l1357 0620  
                              l1199 045C                                l1295 03B4  
                              l1287 05F9                                l1279 05D3  
                              l1463 07E3                                l1455 07D0  
                              l1447 07A3                                l1439 0782  
                              l1391 06BC                                l1375 066D  
                              l1367 064C                                l1383 0693  
                              l1359 0625                                l1297 04D3  
                              l1289 0603                                l1465 07E8  
                              l1449 07B0                                l1393 06BF  
                              l1385 06A3                                l1377 0677  
                              l1369 0653                                l1299 04D5  
                              l1467 07F0                                l1395 06CC  
                              l1387 06A9                                l1379 067F  
                              l1397 06D4                                l1389 06B0  
                              l1399 06DE                                l1489 0569  
                              _main 0618                        lcd_busy@busy 0071  
                              btemp 007E                                start 0000  
                   ?_lcd_put_nibble 0070                      ??_lcd_put_byte 0074  
                             ?_main 0070               getLengthArr@character 0074  
                             main@i 0028                               pclath 000A  
                             status 0003                               wtemp0 007E  
                   __initialization 07FC                __end_of_getLengthArr 03DC  
                      __end_of_main 07FC                       lcd_gotoxy@col 0078  
                     lcd_gotoxy@row 0076                  lcd_put_nibble@temp 0072  
                            ??_main 0021                              _TRISD1 0441  
                            _TRISD2 0442                              _TRISD3 0443  
                            _TRISD4 0444                              _TRISD5 0445  
                            _TRISD6 0446                              _TRISD7 0447  
                  __end_of_lcd_busy 0455                    __end_of_lcd_init 0618  
                  __end_of_lcd_putc 0575                    __end_of_lcd_puts 03FF  
                     lcd_put_byte@b 0073                    __end_ofmain@HKTT 00B7  
                  __end_ofmain@MSSV 009D             __end_of__initialization 07FC  
              __end_of_lcd_put_byte 048E                    ??_addCharSpecial 0076  
                    __pcstackCOMMON 0070                       main@your_born 006C  
                     main@your_name 007D                       main@your_live 005B  
                 lcd_gotoxy@address 0079               __size_of_getLengthArr 001D  
                  ??_lcd_put_nibble 0070                          __pmaintext 0618  
             __end_of_lcd_ShiftLeft 03B4                          _lcd_gotoxy 03FF  
                      _getLengthArr 03BF                           ?_lcd_busy 0070  
                         ?_lcd_init 0070                           ?_lcd_putc 0070  
                         ?_lcd_puts 0070                          __stringtab 0003  
           addCharSpecial@character 0079                             __ptext1 03DC  
                           __ptext2 0519                             __ptext3 03FF  
                           __ptext4 0575                             __ptext5 03B4  
                           __ptext6 03A9                             __ptext7 03BF  
                           __ptext8 04D2                             __ptext9 0455  
           __size_of_lcd_ShiftRight 000B               __size_of_lcd_put_byte 0039  
                        ??_lcd_busy 0070                          ??_lcd_init 0076  
                        ??_lcd_putc 007A                          ??_lcd_puts 007D  
              end_of_initialization 07FC                      lcd_put_byte@rs 0075  
            main@special_HKTT_class 003A                   __end_ofmain@class 00AA  
                      _lcd_put_byte 0455                         ?_lcd_gotoxy 0076  
                        main@length 0026                 start_initialization 07FC  
               __size_of_lcd_gotoxy 0026                           ___latbits 0002  
                     __pcstackBANK0 0020                     addCharSpecial@i 0077  
                    _lcd_ShiftRight 03B4                   __size_of_lcd_busy 0030  
                 __size_of_lcd_init 00A3                   __size_of_lcd_putc 005C  
                 __size_of_lcd_puts 0023                           __pstrings 0003  
           __size_of_addCharSpecial 0047              __end_of_lcd_ShiftRight 03BF  
            __size_of_lcd_ShiftLeft 000B                         __stringbase 0008  
           __size_of_lcd_put_nibble 0044                           main@class 009D  
                   ?_lcd_ShiftRight 0070                       getLengthArr@i 0072  
                         lcd_putc@c 007C                           lcd_puts@s 0020  
                         main@times 0024                        ??_lcd_gotoxy 0077  
    __end_ofmain@special_HKTT_class 005B               __end_ofmain@your_born 007D  
             __end_ofmain@your_name 008E               __end_ofmain@your_live 006C  
                __end_of_lcd_gotoxy 0425                       _lcd_ShiftLeft 03A9  
                __end_of__stringtab 0009                            __ptext10 048E  
                          __ptext11 0425                            _lcd_busy 0425  
                          _lcd_init 0575                            _lcd_putc 0519  
                          _lcd_puts 03DC                       __size_of_main 01E4  
                          main@HKTT 00AA                            main@MSSV 008E  
                    ?_lcd_ShiftLeft 0070                      _addCharSpecial 04D2  
                   lcd_put_nibble@b 0071  __end_ofmain@special_name_born_live 003A  
        main@special_name_born_live 0009                       ?_getLengthArr 0070  
                         stringcode 0003              __end_of_addCharSpecial 0519  
                    _lcd_put_nibble 048E                            stringdir 0003  
                          stringtab 0003                      ??_getLengthArr 0072  
