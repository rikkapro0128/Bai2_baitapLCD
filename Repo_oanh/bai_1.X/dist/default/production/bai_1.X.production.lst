

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 02 18:23:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287                           
   288                           	psect	strings
   289  0003                     __pstrings:
   290  0003                     stringtab:
   291  0003                     __stringtab:
   292  0003                     stringcode:	
   293                           ;	String table - string pointers are 1 byte each
   294                           
   295  0003                     stringdir:
   296  0003  3000               	movlw	high stringdir
   297  0004  008A               	movwf	10
   298  0005  0804               	movf	4,w
   299  0006  0A84               	incf	4,f
   300  0007  0782               	addwf	2,f
   301  0008                     __stringbase:
   302  0008  3400               	retlw	0
   303  0009                     __end_of__stringtab:
   304  0009                     main@your_live:
   305  0009  344E               	retlw	78
   306  000A  346F               	retlw	111
   307  000B  3469               	retlw	105
   308  000C  3453               	retlw	83
   309  000D  3469               	retlw	105
   310  000E  346E               	retlw	110
   311  000F  3468               	retlw	104
   312  0010  343A               	retlw	58
   313  0011  3444               	retlw	68
   314  0012  346F               	retlw	111
   315  0013  346E               	retlw	110
   316  0014  3467               	retlw	103
   317  0015  3420               	retlw	32
   318  0016  344E               	retlw	78
   319  0017  3461               	retlw	97
   320  0018  3469               	retlw	105
   321  0019  3400               	retlw	0
   322  001A                     __end_ofmain@your_live:
   323  001A                     main@your_born:
   324  001A  344E               	retlw	78
   325  001B  3467               	retlw	103
   326  001C  3461               	retlw	97
   327  001D  3479               	retlw	121
   328  001E  3453               	retlw	83
   329  001F  3469               	retlw	105
   330  0020  346E               	retlw	110
   331  0021  3468               	retlw	104
   332  0022  343A               	retlw	58
   333  0023  3431               	retlw	49
   334  0024  3430               	retlw	48
   335  0025  342F               	retlw	47
   336  0026  3432               	retlw	50
   337  0027  3430               	retlw	48
   338  0028  3430               	retlw	48
   339  0029  3431               	retlw	49
   340  002A  3400               	retlw	0
   341  002B                     __end_ofmain@your_born:
   342  002B                     main@your_name:
   343  002B  3454               	retlw	84
   344  002C  3472               	retlw	114
   345  002D  3469               	retlw	105
   346  002E  346E               	retlw	110
   347  002F  3468               	retlw	104
   348  0030  3420               	retlw	32
   349  0031  344B               	retlw	75
   350  0032  3469               	retlw	105
   351  0033  3465               	retlw	101
   352  0034  3475               	retlw	117
   353  0035  3420               	retlw	32
   354  0036  344F               	retlw	79
   355  0037  3461               	retlw	97
   356  0038  346E               	retlw	110
   357  0039  3468               	retlw	104
   358  003A  3400               	retlw	0
   359  003B                     __end_ofmain@your_name:
   360  003B                     main@MSSV:
   361  003B  344D               	retlw	77
   362  003C  3453               	retlw	83
   363  003D  3453               	retlw	83
   364  003E  3456               	retlw	86
   365  003F  343A               	retlw	58
   366  0040  3431               	retlw	49
   367  0041  3439               	retlw	57
   368  0042  3434               	retlw	52
   369  0043  3437               	retlw	55
   370  0044  3431               	retlw	49
   371  0045  3433               	retlw	51
   372  0046  3430               	retlw	48
   373  0047  3431               	retlw	49
   374  0048  3400               	retlw	0
   375  0049                     __end_ofmain@MSSV:
   376  0049                     main@class:
   377  0049  344C               	retlw	76
   378  004A  346F               	retlw	111
   379  004B  3470               	retlw	112
   380  004C  343A               	retlw	58
   381  004D  3420               	retlw	32
   382  004E  3444               	retlw	68
   383  004F  3454               	retlw	84
   384  0050  3456               	retlw	86
   385  0051  3454               	retlw	84
   386  0052  3431               	retlw	49
   387  0053  3435               	retlw	53
   388  0054  3441               	retlw	65
   389  0055  3400               	retlw	0
   390  0056                     __end_ofmain@class:
   391  0056                     main@HKTT:
   392  0056  3448               	retlw	72
   393  0057  344B               	retlw	75
   394  0058  3454               	retlw	84
   395  0059  3454               	retlw	84
   396  005A  343A               	retlw	58
   397  005B  3420               	retlw	32
   398  005C  3447               	retlw	71
   399  005D  346F               	retlw	111
   400  005E  3420               	retlw	32
   401  005F  3456               	retlw	86
   402  0060  3461               	retlw	97
   403  0061  3470               	retlw	112
   404  0062  3400               	retlw	0
   405  0063                     __end_ofmain@HKTT:
   406  0044                     _RD4	set	68
   407  0045                     _RD5	set	69
   408  0046                     _RD6	set	70
   409  0047                     _RD7	set	71
   410  0043                     _RD3	set	67
   411  0041                     _RD1	set	65
   412  0042                     _RD2	set	66
   413  0442                     _TRISD2	set	1090
   414  0441                     _TRISD1	set	1089
   415  0443                     _TRISD3	set	1091
   416  0447                     _TRISD7	set	1095
   417  0446                     _TRISD6	set	1094
   418  0445                     _TRISD5	set	1093
   419  0444                     _TRISD4	set	1092
   420                           
   421                           	psect	cinit
   422  07FC                     start_initialization:	
   423                           ; #config settings
   424                           
   425  07FC                     __initialization:
   426  07FC                     end_of_initialization:	
   427                           ;End of C runtime variable initialization code
   428                           
   429  07FC                     __end_of__initialization:
   430  07FC  0183               	clrf	3
   431  07FD  120A  118A  2EC4   	ljmp	_main	;jump to C main() function
   432                           
   433                           	psect	cstackCOMMON
   434  0070                     __pcstackCOMMON:
   435  0070                     ?_lcd_init:
   436  0070                     ?_lcd_putc:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_lcd_puts:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_main:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_lcd_busy:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ??_lcd_busy:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_lcd_put_nibble:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ??_lcd_put_nibble:	
   455                           ; 1 bytes @ 0x0
   456                           
   457                           
   458                           ; 1 bytes @ 0x0
   459  0070                     	ds	1
   460  0071                     lcd_busy@busy:
   461  0071                     lcd_put_nibble@b:	
   462                           ; 1 bytes @ 0x1
   463                           
   464                           
   465                           ; 1 bytes @ 0x1
   466  0071                     	ds	1
   467  0072                     lcd_put_nibble@temp:
   468                           
   469                           ; 1 bytes @ 0x2
   470  0072                     	ds	1
   471  0073                     ?_lcd_put_byte:
   472  0073                     lcd_put_byte@b:	
   473                           ; 1 bytes @ 0x3
   474                           
   475                           
   476                           ; 1 bytes @ 0x3
   477  0073                     	ds	1
   478  0074                     ??_lcd_put_byte:
   479                           
   480                           ; 1 bytes @ 0x4
   481  0074                     	ds	1
   482  0075                     lcd_put_byte@rs:
   483                           
   484                           ; 1 bytes @ 0x5
   485  0075                     	ds	1
   486  0076                     ??_lcd_init:
   487  0076                     ?_lcd_gotoxy:	
   488                           ; 1 bytes @ 0x6
   489                           
   490  0076                     lcd_gotoxy@row:	
   491                           ; 1 bytes @ 0x6
   492                           
   493                           
   494                           ; 1 bytes @ 0x6
   495  0076                     	ds	1
   496  0077                     ??_lcd_gotoxy:
   497                           
   498                           ; 1 bytes @ 0x7
   499  0077                     	ds	1
   500  0078                     lcd_gotoxy@col:
   501                           
   502                           ; 1 bytes @ 0x8
   503  0078                     	ds	1
   504  0079                     lcd_gotoxy@address:
   505                           
   506                           ; 1 bytes @ 0x9
   507  0079                     	ds	1
   508  007A                     ??_lcd_putc:
   509                           
   510                           ; 1 bytes @ 0xA
   511  007A                     	ds	2
   512  007C                     lcd_putc@c:
   513                           
   514                           ; 1 bytes @ 0xC
   515  007C                     	ds	1
   516  007D                     ??_lcd_puts:
   517                           
   518                           ; 1 bytes @ 0xD
   519  007D                     	ds	1
   520                           
   521                           	psect	cstackBANK0
   522  0020                     __pcstackBANK0:
   523  0020                     lcd_puts@s:
   524                           
   525                           ; 1 bytes @ 0x0
   526  0020                     	ds	1
   527  0021                     ??_main:
   528                           
   529                           ; 1 bytes @ 0x1
   530  0021                     	ds	3
   531                           
   532                           	psect	maintext
   533  06C4                     __pmaintext:	
   534 ;;
   535 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   536 ;;
   537 ;; *************** function _main *****************
   538 ;; Defined at:
   539 ;;		line 25 in file "newmain.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : B00/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       3       0       0       0
   556 ;;      Totals:         0       3       0       0       0
   557 ;;Total ram usage:        3 bytes
   558 ;; Hardware stack levels required when called: 5
   559 ;; This function calls:
   560 ;;		_lcd_gotoxy
   561 ;;		_lcd_init
   562 ;;		_lcd_putc
   563 ;;		_lcd_puts
   564 ;; This function is called by:
   565 ;;		Startup code after reset
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           
   570                           ;psect for function _main
   571  06C4                     _main:
   572  06C4                     l1134:	
   573                           ;incstack = 0
   574                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   575                           
   576                           
   577                           ;newmain.c: 26:     const char your_name[] = "Trinh Kieu Oanh";;newmain.c: 27:     const
      +                           char your_born[] = "NgaySinh:10/2001";;newmain.c: 28:     const char your_live[] = "Noi
      +                          Sinh:Dong Nai";;newmain.c: 29:     const char HKTT[] = "HKTT: Go Vap";;newmain.c: 30:   
      +                            const char class[] = "Lop: DTVT15A";;newmain.c: 31:     const char MSSV[] = "MSSV:1947
      +                          1301";;newmain.c: 32:     lcd_init();
   578  06C4  120A  118A  2759  120A  118A  	fcall	_lcd_init
   579  06C9                     l1136:
   580                           
   581                           ;newmain.c: 33:     lcd_putc('\f');
   582  06C9  300C               	movlw	12
   583  06CA  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   584  06CF                     l1138:
   585                           
   586                           ;newmain.c: 34:     lcd_gotoxy(0, 0);
   587  06CF  01F6               	clrf	lcd_gotoxy@row
   588  06D0  3000               	movlw	0
   589  06D1  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   590                           
   591                           ;newmain.c: 35:     lcd_puts(your_name);
   592  06D6  3023               	movlw	(low ((main@your_name-__stringbase)| (0+32768)))& (0+255)
   593  06D7  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   594  06DC                     l1140:
   595                           
   596                           ;newmain.c: 36:     lcd_gotoxy(0, 1);
   597  06DC  01F6               	clrf	lcd_gotoxy@row
   598  06DD  0AF6               	incf	lcd_gotoxy@row,f
   599  06DE  3000               	movlw	0
   600  06DF  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   601  06E4                     l1142:
   602                           
   603                           ;newmain.c: 37:     lcd_puts(MSSV);
   604  06E4  3033               	movlw	(low ((main@MSSV-__stringbase)| (0+32768)))& (0+255)
   605  06E5  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   606  06EA                     l1144:
   607                           
   608                           ;newmain.c: 38:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   609  06EA  300B               	movlw	11
   610  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   611  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   612  06ED  00A3               	movwf	??_main+2
   613  06EE  3026               	movlw	38
   614  06EF  00A2               	movwf	??_main+1
   615  06F0  305D               	movlw	93
   616  06F1  00A1               	movwf	??_main
   617  06F2                     u587:
   618  06F2  0BA1               	decfsz	??_main,f
   619  06F3  2EF2               	goto	u587
   620  06F4  0BA2               	decfsz	??_main+1,f
   621  06F5  2EF2               	goto	u587
   622  06F6  0BA3               	decfsz	??_main+2,f
   623  06F7  2EF2               	goto	u587
   624  06F8                     l1146:
   625                           
   626                           ;newmain.c: 39:     lcd_putc('\f');
   627  06F8  300C               	movlw	12
   628  06F9  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   629  06FE                     l1148:
   630                           
   631                           ;newmain.c: 40:     lcd_gotoxy(0, 0);
   632  06FE  01F6               	clrf	lcd_gotoxy@row
   633  06FF  3000               	movlw	0
   634  0700  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   635  0705                     l1150:
   636                           
   637                           ;newmain.c: 41:     lcd_puts(your_born);
   638  0705  3012               	movlw	(low ((main@your_born-__stringbase)| (0+32768)))& (0+255)
   639  0706  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   640  070B                     l1152:
   641                           
   642                           ;newmain.c: 42:     lcd_gotoxy(0, 1);
   643  070B  01F6               	clrf	lcd_gotoxy@row
   644  070C  0AF6               	incf	lcd_gotoxy@row,f
   645  070D  3000               	movlw	0
   646  070E  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   647  0713                     l1154:
   648                           
   649                           ;newmain.c: 43:     lcd_puts(your_live);
   650  0713  3001               	movlw	(low ((main@your_live-__stringbase)| (0+32768)))& (0+255)
   651  0714  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   652  0719                     l1156:
   653                           
   654                           ;newmain.c: 44:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   655  0719  300B               	movlw	11
   656  071A  1283               	bcf	3,5	;RP0=0, select bank0
   657  071B  1303               	bcf	3,6	;RP1=0, select bank0
   658  071C  00A3               	movwf	??_main+2
   659  071D  3026               	movlw	38
   660  071E  00A2               	movwf	??_main+1
   661  071F  305D               	movlw	93
   662  0720  00A1               	movwf	??_main
   663  0721                     u597:
   664  0721  0BA1               	decfsz	??_main,f
   665  0722  2F21               	goto	u597
   666  0723  0BA2               	decfsz	??_main+1,f
   667  0724  2F21               	goto	u597
   668  0725  0BA3               	decfsz	??_main+2,f
   669  0726  2F21               	goto	u597
   670  0727                     l1158:
   671                           
   672                           ;newmain.c: 45:     lcd_putc('\f');
   673  0727  300C               	movlw	12
   674  0728  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   675                           
   676                           ;newmain.c: 46:     lcd_gotoxy(0, 0);
   677  072D  01F6               	clrf	lcd_gotoxy@row
   678  072E  3000               	movlw	0
   679  072F  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   680  0734                     l1160:
   681                           
   682                           ;newmain.c: 47:     lcd_puts(HKTT);
   683  0734  304E               	movlw	(low ((main@HKTT-__stringbase)| (0+32768)))& (0+255)
   684  0735  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   685  073A                     l1162:
   686                           
   687                           ;newmain.c: 48:     lcd_gotoxy(0, 1);
   688  073A  01F6               	clrf	lcd_gotoxy@row
   689  073B  0AF6               	incf	lcd_gotoxy@row,f
   690  073C  3000               	movlw	0
   691  073D  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   692                           
   693                           ;newmain.c: 49:     lcd_puts(class);
   694  0742  3041               	movlw	(low ((main@class-__stringbase)| (0+32768)))& (0+255)
   695  0743  120A  118A  2572  120A  118A  	fcall	_lcd_puts
   696  0748                     l1164:
   697                           
   698                           ;newmain.c: 50:     _delay((unsigned long)((2000)*(4000000/4000.0)));
   699  0748  300B               	movlw	11
   700  0749  1283               	bcf	3,5	;RP0=0, select bank0
   701  074A  1303               	bcf	3,6	;RP1=0, select bank0
   702  074B  00A3               	movwf	??_main+2
   703  074C  3026               	movlw	38
   704  074D  00A2               	movwf	??_main+1
   705  074E  305D               	movlw	93
   706  074F  00A1               	movwf	??_main
   707  0750                     u607:
   708  0750  0BA1               	decfsz	??_main,f
   709  0751  2F50               	goto	u607
   710  0752  0BA2               	decfsz	??_main+1,f
   711  0753  2F50               	goto	u607
   712  0754  0BA3               	decfsz	??_main+2,f
   713  0755  2F50               	goto	u607
   714  0756                     l27:
   715  0756  120A  118A  2800   	ljmp	start
   716  0759                     __end_of_main:
   717                           
   718                           	psect	text1
   719  0572                     __ptext1:	
   720 ;; *************** function _lcd_puts *****************
   721 ;; Defined at:
   722 ;;		line 224 in file "lcd.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  s               1    wreg     PTR const unsigned char 
   725 ;;		 -> main@class(13), main@HKTT(13), main@your_live(17), main@your_born(17), 
   726 ;;		 -> main@MSSV(14), main@your_name(16), 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  s               1    0[BANK0 ] PTR const unsigned char 
   729 ;;		 -> main@class(13), main@HKTT(13), main@your_live(17), main@your_born(17), 
   730 ;;		 -> main@MSSV(14), main@your_name(16), 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         0       0       0       0       0
   741 ;;      Locals:         0       1       0       0       0
   742 ;;      Temps:          1       0       0       0       0
   743 ;;      Totals:         1       1       0       0       0
   744 ;;Total ram usage:        2 bytes
   745 ;; Hardware stack levels used: 1
   746 ;; Hardware stack levels required when called: 4
   747 ;; This function calls:
   748 ;;		_lcd_putc
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           
   755                           ;psect for function _lcd_puts
   756  0572                     _lcd_puts:
   757                           
   758                           ;incstack = 0
   759                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   760                           ;lcd_puts@s stored from wreg
   761  0572  1283               	bcf	3,5	;RP0=0, select bank0
   762  0573  1303               	bcf	3,6	;RP1=0, select bank0
   763  0574  00A0               	movwf	lcd_puts@s
   764  0575                     l1122:
   765                           
   766                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
   767  0575  2D88               	goto	l1128
   768  0576                     l1124:
   769                           
   770                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
   771  0576  0820               	movf	lcd_puts@s,w
   772  0577  0084               	movwf	4
   773  0578  120A  118A  2003  120A  118A  	fcall	stringdir
   774  057D  120A  118A  2668  120A  118A  	fcall	_lcd_putc
   775  0582                     l1126:
   776  0582  3001               	movlw	1
   777  0583  00FD               	movwf	??_lcd_puts
   778  0584  087D               	movf	??_lcd_puts,w
   779  0585  1283               	bcf	3,5	;RP0=0, select bank0
   780  0586  1303               	bcf	3,6	;RP1=0, select bank0
   781  0587  07A0               	addwf	lcd_puts@s,f
   782  0588                     l1128:
   783                           
   784                           ;lcd.c: 229:  while(*s)
   785  0588  0820               	movf	lcd_puts@s,w
   786  0589  0084               	movwf	4
   787  058A  120A  118A  2003  120A  118A  	fcall	stringdir
   788  058F  3A00               	xorlw	0
   789  0590  1D03               	skipz
   790  0591  2D93               	goto	u541
   791  0592  2D94               	goto	u540
   792  0593                     u541:
   793  0593  2D76               	goto	l1124
   794  0594                     u540:
   795  0594                     l105:
   796  0594  0008               	return
   797  0595                     __end_of_lcd_puts:
   798                           
   799                           	psect	text2
   800  0668                     __ptext2:	
   801 ;; *************** function _lcd_putc *****************
   802 ;; Defined at:
   803 ;;		line 190 in file "lcd.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  c               1    wreg     unsigned char 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  c               1   12[COMMON] unsigned char 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   817 ;;      Params:         0       0       0       0       0
   818 ;;      Locals:         1       0       0       0       0
   819 ;;      Temps:          2       0       0       0       0
   820 ;;      Totals:         3       0       0       0       0
   821 ;;Total ram usage:        3 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 3
   824 ;; This function calls:
   825 ;;		_lcd_busy
   826 ;;		_lcd_gotoxy
   827 ;;		_lcd_put_byte
   828 ;; This function is called by:
   829 ;;		_main
   830 ;;		_lcd_puts
   831 ;;		_lcd_String_Delay
   832 ;;		_putch
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           
   837                           ;psect for function _lcd_putc
   838  0668                     _lcd_putc:
   839                           
   840                           ;incstack = 0
   841                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   842                           ;lcd_putc@c stored from wreg
   843  0668  00FC               	movwf	lcd_putc@c
   844  0669                     l1062:
   845                           
   846                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
   847  0669  2EB0               	goto	l1078
   848  066A                     l1064:
   849                           
   850                           ;lcd.c: 198:    lcd_put_byte(0,1);
   851  066A  01F3               	clrf	lcd_put_byte@b
   852  066B  0AF3               	incf	lcd_put_byte@b,f
   853  066C  3000               	movlw	0
   854  066D  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
   855  0672                     l1066:	
   856                           ;lcd.c: 199:    while(lcd_busy());
   857                           
   858  0672  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
   859  0677  3A00               	xorlw	0
   860  0678  1D03               	skipz
   861  0679  2E7B               	goto	u461
   862  067A  2E7C               	goto	u460
   863  067B                     u461:
   864  067B  2E72               	goto	l1066
   865  067C                     u460:
   866  067C  2EC3               	goto	l99
   867  067D                     l1068:
   868                           
   869                           ;lcd.c: 202:    lcd_gotoxy(0,1);
   870  067D  01F6               	clrf	lcd_gotoxy@row
   871  067E  0AF6               	incf	lcd_gotoxy@row,f
   872  067F  3000               	movlw	0
   873  0680  120A  118A  2595  120A  118A  	fcall	_lcd_gotoxy
   874                           
   875                           ;lcd.c: 203:    break;
   876  0685  2EC3               	goto	l99
   877  0686                     l1070:
   878                           
   879                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
   880  0686  3010               	movlw	16
   881  0687  00FA               	movwf	??_lcd_putc
   882  0688  087A               	movf	??_lcd_putc,w
   883  0689  00F3               	movwf	lcd_put_byte@b
   884  068A  3000               	movlw	0
   885  068B  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
   886  0690                     l1072:	
   887                           ;lcd.c: 206:    while(lcd_busy());
   888                           
   889  0690  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
   890  0695  3A00               	xorlw	0
   891  0696  1D03               	skipz
   892  0697  2E99               	goto	u471
   893  0698  2E9A               	goto	u470
   894  0699                     u471:
   895  0699  2E90               	goto	l1072
   896  069A                     u470:
   897  069A  2EC3               	goto	l99
   898  069B                     l1074:
   899                           
   900                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
   901  069B  087C               	movf	lcd_putc@c,w
   902  069C  00FA               	movwf	??_lcd_putc
   903  069D  087A               	movf	??_lcd_putc,w
   904  069E  00F3               	movwf	lcd_put_byte@b
   905  069F  3001               	movlw	1
   906  06A0  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
   907  06A5                     l1076:	
   908                           ;lcd.c: 212:     while(lcd_busy());
   909                           
   910  06A5  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
   911  06AA  3A00               	xorlw	0
   912  06AB  1D03               	skipz
   913  06AC  2EAE               	goto	u481
   914  06AD  2EAF               	goto	u480
   915  06AE                     u481:
   916  06AE  2EA5               	goto	l1076
   917  06AF                     u480:
   918  06AF  2EC3               	goto	l99
   919  06B0                     l1078:
   920  06B0  087C               	movf	lcd_putc@c,w
   921  06B1  00FA               	movwf	??_lcd_putc
   922  06B2  01FB               	clrf	??_lcd_putc+1
   923                           
   924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   925                           ; Switch size 1, requested type "simple"
   926                           ; Number of cases is 1, Range of values is 0 to 0
   927                           ; switch strategies available:
   928                           ; Name         Instructions Cycles
   929                           ; simple_byte            4     3 (average)
   930                           ; direct_byte           11     8 (fixed)
   931                           ; jumptable            260     6 (fixed)
   932                           ;	Chosen strategy is simple_byte
   933  06B3  087B               	movf	??_lcd_putc+1,w
   934  06B4  3A00               	xorlw	0	; case 0
   935  06B5  1903               	skipnz
   936  06B6  2EB8               	goto	l1216
   937  06B7  2E9B               	goto	l1074
   938  06B8                     l1216:
   939                           
   940                           ; Switch size 1, requested type "simple"
   941                           ; Number of cases is 3, Range of values is 8 to 12
   942                           ; switch strategies available:
   943                           ; Name         Instructions Cycles
   944                           ; simple_byte           10     6 (average)
   945                           ; direct_byte           26    11 (fixed)
   946                           ; jumptable            263     9 (fixed)
   947                           ;	Chosen strategy is simple_byte
   948  06B8  087A               	movf	??_lcd_putc,w
   949  06B9  3A08               	xorlw	8	; case 8
   950  06BA  1903               	skipnz
   951  06BB  2E86               	goto	l1070
   952  06BC  3A02               	xorlw	2	; case 10
   953  06BD  1903               	skipnz
   954  06BE  2E7D               	goto	l1068
   955  06BF  3A06               	xorlw	6	; case 12
   956  06C0  1903               	skipnz
   957  06C1  2E6A               	goto	l1064
   958  06C2  2E9B               	goto	l1074
   959  06C3                     l99:
   960  06C3  0008               	return
   961  06C4                     __end_of_lcd_putc:
   962                           
   963                           	psect	text3
   964  0595                     __ptext3:	
   965 ;; *************** function _lcd_gotoxy *****************
   966 ;; Defined at:
   967 ;;		line 167 in file "lcd.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  col             1    wreg     unsigned char 
   970 ;;  row             1    6[COMMON] unsigned char 
   971 ;; Auto vars:     Size  Location     Type
   972 ;;  col             1    8[COMMON] unsigned char 
   973 ;;  address         1    9[COMMON] unsigned char 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0, pclath, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         1       0       0       0       0
   984 ;;      Locals:         2       0       0       0       0
   985 ;;      Temps:          1       0       0       0       0
   986 ;;      Totals:         4       0       0       0       0
   987 ;;Total ram usage:        4 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; Hardware stack levels required when called: 2
   990 ;; This function calls:
   991 ;;		_lcd_busy
   992 ;;		_lcd_put_byte
   993 ;; This function is called by:
   994 ;;		_main
   995 ;;		_lcd_putc
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _lcd_gotoxy
  1001  0595                     _lcd_gotoxy:
  1002                           
  1003                           ;incstack = 0
  1004                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1005                           ;lcd_gotoxy@col stored from wreg
  1006  0595  00F8               	movwf	lcd_gotoxy@col
  1007  0596                     l1050:
  1008                           
  1009                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1010  0596  0876               	movf	lcd_gotoxy@row,w
  1011  0597  1903               	btfsc	3,2
  1012  0598  2D9A               	goto	u441
  1013  0599  2D9B               	goto	u440
  1014  059A                     u441:
  1015  059A  2DA0               	goto	l1054
  1016  059B                     u440:
  1017  059B                     l1052:
  1018                           
  1019                           ;lcd.c: 174:   address=0x40;
  1020  059B  3040               	movlw	64
  1021  059C  00F7               	movwf	??_lcd_gotoxy
  1022  059D  0877               	movf	??_lcd_gotoxy,w
  1023  059E  00F9               	movwf	lcd_gotoxy@address
  1024  059F  2DA1               	goto	l1056
  1025  05A0                     l1054:
  1026                           
  1027                           ;lcd.c: 176:   address=0;
  1028  05A0  01F9               	clrf	lcd_gotoxy@address
  1029  05A1                     l1056:
  1030                           
  1031                           ;lcd.c: 178:  address += col;
  1032  05A1  0878               	movf	lcd_gotoxy@col,w
  1033  05A2  00F7               	movwf	??_lcd_gotoxy
  1034  05A3  0877               	movf	??_lcd_gotoxy,w
  1035  05A4  07F9               	addwf	lcd_gotoxy@address,f
  1036  05A5                     l1058:
  1037                           
  1038                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1039  05A5  0879               	movf	lcd_gotoxy@address,w
  1040  05A6  3880               	iorlw	128
  1041  05A7  00F7               	movwf	??_lcd_gotoxy
  1042  05A8  0877               	movf	??_lcd_gotoxy,w
  1043  05A9  00F3               	movwf	lcd_put_byte@b
  1044  05AA  3000               	movlw	0
  1045  05AB  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1046  05B0                     l1060:	
  1047                           ;lcd.c: 181:  while(lcd_busy());
  1048                           
  1049  05B0  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1050  05B5  3A00               	xorlw	0
  1051  05B6  1D03               	skipz
  1052  05B7  2DB9               	goto	u451
  1053  05B8  2DBA               	goto	u450
  1054  05B9                     u451:
  1055  05B9  2DB0               	goto	l1060
  1056  05BA                     u450:
  1057  05BA                     l81:
  1058  05BA  0008               	return
  1059  05BB                     __end_of_lcd_gotoxy:
  1060                           
  1061                           	psect	text4
  1062  0759                     __ptext4:	
  1063 ;; *************** function _lcd_init *****************
  1064 ;; Defined at:
  1065 ;;		line 241 in file "lcd.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  i               1    0        unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0
  1081 ;;      Temps:          2       0       0       0       0
  1082 ;;      Totals:         2       0       0       0       0
  1083 ;;Total ram usage:        2 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 2
  1086 ;; This function calls:
  1087 ;;		_lcd_busy
  1088 ;;		_lcd_put_byte
  1089 ;;		_lcd_put_nibble
  1090 ;; This function is called by:
  1091 ;;		_main
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           
  1096                           ;psect for function _lcd_init
  1097  0759                     _lcd_init:
  1098  0759                     l1084:	
  1099                           ;incstack = 0
  1100                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1101                           
  1102                           
  1103                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1104  0759  1683               	bsf	3,5	;RP0=1, select bank1
  1105  075A  1303               	bcf	3,6	;RP1=0, select bank1
  1106  075B  1188               	bcf	8,3	;volatile
  1107                           
  1108                           ;lcd.c: 248:  TRISD1 = 0;
  1109  075C  1088               	bcf	8,1	;volatile
  1110                           
  1111                           ;lcd.c: 249:  TRISD2 = 0;
  1112  075D  1108               	bcf	8,2	;volatile
  1113                           
  1114                           ;lcd.c: 250:  TRISD4 = 0;
  1115  075E  1208               	bcf	8,4	;volatile
  1116                           
  1117                           ;lcd.c: 251:  TRISD5 = 0;
  1118  075F  1288               	bcf	8,5	;volatile
  1119                           
  1120                           ;lcd.c: 252:  TRISD6 = 0;
  1121  0760  1308               	bcf	8,6	;volatile
  1122                           
  1123                           ;lcd.c: 253:  TRISD7 = 0;
  1124  0761  1388               	bcf	8,7	;volatile
  1125  0762                     l1086:
  1126                           
  1127                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1128  0762  3014               	movlw	20
  1129  0763  00F7               	movwf	??_lcd_init+1
  1130  0764  3079               	movlw	121
  1131  0765  00F6               	movwf	??_lcd_init
  1132  0766                     u617:
  1133  0766  0BF6               	decfsz	??_lcd_init,f
  1134  0767  2F66               	goto	u617
  1135  0768  0BF7               	decfsz	??_lcd_init+1,f
  1136  0769  2F66               	goto	u617
  1137  076A  2F6B               	nop2
  1138  076B                     l1088:
  1139                           
  1140                           ;lcd.c: 257:  RD1 = 0;
  1141  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1142  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1143  076D  1088               	bcf	8,1	;volatile
  1144  076E                     l1090:
  1145                           
  1146                           ;lcd.c: 258:  RD2 = 0;
  1147  076E  1108               	bcf	8,2	;volatile
  1148  076F                     l1092:
  1149                           
  1150                           ;lcd.c: 259:  RD3 = 0;
  1151  076F  1188               	bcf	8,3	;volatile
  1152  0770                     l1094:
  1153                           
  1154                           ;lcd.c: 261:  lcd_put_nibble(3);
  1155  0770  3003               	movlw	3
  1156  0771  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1157  0776                     l1096:
  1158                           
  1159                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1160  0776  300D               	movlw	13
  1161  0777  00F7               	movwf	??_lcd_init+1
  1162  0778  30FB               	movlw	251
  1163  0779  00F6               	movwf	??_lcd_init
  1164  077A                     u627:
  1165  077A  0BF6               	decfsz	??_lcd_init,f
  1166  077B  2F7A               	goto	u627
  1167  077C  0BF7               	decfsz	??_lcd_init+1,f
  1168  077D  2F7A               	goto	u627
  1169  077E  2F7F               	nop2
  1170                           
  1171                           ;lcd.c: 263:  lcd_put_nibble(3);
  1172  077F  3003               	movlw	3
  1173  0780  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1174  0785                     l1098:
  1175                           
  1176                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1177  0785  300D               	movlw	13
  1178  0786  00F7               	movwf	??_lcd_init+1
  1179  0787  30FB               	movlw	251
  1180  0788  00F6               	movwf	??_lcd_init
  1181  0789                     u637:
  1182  0789  0BF6               	decfsz	??_lcd_init,f
  1183  078A  2F89               	goto	u637
  1184  078B  0BF7               	decfsz	??_lcd_init+1,f
  1185  078C  2F89               	goto	u637
  1186  078D  2F8E               	nop2
  1187  078E                     l1100:
  1188                           
  1189                           ;lcd.c: 265:  lcd_put_nibble(3);
  1190  078E  3003               	movlw	3
  1191  078F  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1192                           
  1193                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1194  0794  300D               	movlw	13
  1195  0795  00F7               	movwf	??_lcd_init+1
  1196  0796  30FB               	movlw	251
  1197  0797  00F6               	movwf	??_lcd_init
  1198  0798                     u647:
  1199  0798  0BF6               	decfsz	??_lcd_init,f
  1200  0799  2F98               	goto	u647
  1201  079A  0BF7               	decfsz	??_lcd_init+1,f
  1202  079B  2F98               	goto	u647
  1203  079C  2F9D               	nop2
  1204  079D                     l1102:
  1205                           
  1206                           ;lcd.c: 268:  lcd_put_nibble(2);
  1207  079D  3002               	movlw	2
  1208  079E  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1209  07A3                     l1104:	
  1210                           ;lcd.c: 269:  while(lcd_busy());
  1211                           
  1212  07A3  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1213  07A8  3A00               	xorlw	0
  1214  07A9  1D03               	skipz
  1215  07AA  2FAC               	goto	u491
  1216  07AB  2FAD               	goto	u490
  1217  07AC                     u491:
  1218  07AC  2FA3               	goto	l1104
  1219  07AD                     u490:
  1220  07AD                     l1106:
  1221                           
  1222                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1223  07AD  3028               	movlw	40
  1224  07AE  00F6               	movwf	??_lcd_init
  1225  07AF  0876               	movf	??_lcd_init,w
  1226  07B0  00F3               	movwf	lcd_put_byte@b
  1227  07B1  3000               	movlw	0
  1228  07B2  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1229  07B7                     l1108:	
  1230                           ;lcd.c: 272:  while(lcd_busy());
  1231                           
  1232  07B7  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1233  07BC  3A00               	xorlw	0
  1234  07BD  1D03               	skipz
  1235  07BE  2FC0               	goto	u501
  1236  07BF  2FC1               	goto	u500
  1237  07C0                     u501:
  1238  07C0  2FB7               	goto	l1108
  1239  07C1                     u500:
  1240  07C1                     l1110:
  1241                           
  1242                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1243  07C1  300C               	movlw	12
  1244  07C2  00F6               	movwf	??_lcd_init
  1245  07C3  0876               	movf	??_lcd_init,w
  1246  07C4  00F3               	movwf	lcd_put_byte@b
  1247  07C5  3000               	movlw	0
  1248  07C6  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1249  07CB                     l1112:	
  1250                           ;lcd.c: 275:  while(lcd_busy());
  1251                           
  1252  07CB  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1253  07D0  3A00               	xorlw	0
  1254  07D1  1D03               	skipz
  1255  07D2  2FD4               	goto	u511
  1256  07D3  2FD5               	goto	u510
  1257  07D4                     u511:
  1258  07D4  2FCB               	goto	l1112
  1259  07D5                     u510:
  1260  07D5                     l1114:
  1261                           
  1262                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1263  07D5  01F3               	clrf	lcd_put_byte@b
  1264  07D6  0AF3               	incf	lcd_put_byte@b,f
  1265  07D7  3000               	movlw	0
  1266  07D8  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1267  07DD                     l1116:	
  1268                           ;lcd.c: 278:  while(lcd_busy());
  1269                           
  1270  07DD  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1271  07E2  3A00               	xorlw	0
  1272  07E3  1D03               	skipz
  1273  07E4  2FE6               	goto	u521
  1274  07E5  2FE7               	goto	u520
  1275  07E6                     u521:
  1276  07E6  2FDD               	goto	l1116
  1277  07E7                     u520:
  1278  07E7                     l1118:
  1279                           
  1280                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1281  07E7  3006               	movlw	6
  1282  07E8  00F6               	movwf	??_lcd_init
  1283  07E9  0876               	movf	??_lcd_init,w
  1284  07EA  00F3               	movwf	lcd_put_byte@b
  1285  07EB  3000               	movlw	0
  1286  07EC  120A  118A  25EB  120A  118A  	fcall	_lcd_put_byte
  1287  07F1                     l1120:	
  1288                           ;lcd.c: 281:  while(lcd_busy());
  1289                           
  1290  07F1  120A  118A  25BB  120A  118A  	fcall	_lcd_busy
  1291  07F6  3A00               	xorlw	0
  1292  07F7  1D03               	skipz
  1293  07F8  2FFA               	goto	u531
  1294  07F9  2FFB               	goto	u530
  1295  07FA                     u531:
  1296  07FA  2FF1               	goto	l1120
  1297  07FB                     u530:
  1298  07FB                     l123:
  1299  07FB  0008               	return
  1300  07FC                     __end_of_lcd_init:
  1301                           
  1302                           	psect	text5
  1303  05EB                     __ptext5:	
  1304 ;; *************** function _lcd_put_byte *****************
  1305 ;; Defined at:
  1306 ;;		line 134 in file "lcd.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  rs              1    wreg     unsigned char 
  1309 ;;  b               1    3[COMMON] unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  rs              1    5[COMMON] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         1       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0
  1323 ;;      Temps:          1       0       0       0       0
  1324 ;;      Totals:         3       0       0       0       0
  1325 ;;Total ram usage:        3 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		_lcd_put_nibble
  1330 ;; This function is called by:
  1331 ;;		_lcd_gotoxy
  1332 ;;		_lcd_putc
  1333 ;;		_lcd_init
  1334 ;;		_lcd_ShiftLeft
  1335 ;;		_lcd_ShiftRight
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           
  1340                           ;psect for function _lcd_put_byte
  1341  05EB                     _lcd_put_byte:
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  1345                           ;lcd_put_byte@rs stored from wreg
  1346  05EB  00F5               	movwf	lcd_put_byte@rs
  1347  05EC                     l1034:
  1348                           
  1349                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  1350  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  1351  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  1352  05EE  1208               	bcf	8,4	;volatile
  1353                           
  1354                           ;lcd.c: 140:  TRISD5 = 0;
  1355  05EF  1288               	bcf	8,5	;volatile
  1356                           
  1357                           ;lcd.c: 141:  TRISD6 = 0;
  1358  05F0  1308               	bcf	8,6	;volatile
  1359                           
  1360                           ;lcd.c: 142:  TRISD7 = 0;
  1361  05F1  1388               	bcf	8,7	;volatile
  1362  05F2                     l1036:
  1363                           
  1364                           ;lcd.c: 144:  if(rs)
  1365  05F2  0875               	movf	lcd_put_byte@rs,w
  1366  05F3  1903               	btfsc	3,2
  1367  05F4  2DF6               	goto	u421
  1368  05F5  2DF7               	goto	u420
  1369  05F6                     u421:
  1370  05F6  2DFB               	goto	l71
  1371  05F7                     u420:
  1372  05F7                     l1038:
  1373                           
  1374                           ;lcd.c: 145:   RD1 = 1;
  1375  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1376  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1377  05F9  1488               	bsf	8,1	;volatile
  1378  05FA  2DFE               	goto	l1040
  1379  05FB                     l71:	
  1380                           ;lcd.c: 146:  else
  1381                           
  1382                           
  1383                           ;lcd.c: 147:   RD1 = 0;
  1384  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1385  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1386  05FD  1088               	bcf	8,1	;volatile
  1387  05FE                     l1040:
  1388                           
  1389                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1390  05FE  3006               	movlw	6
  1391  05FF  00F4               	movwf	??_lcd_put_byte
  1392  0600                     u657:
  1393  0600  0BF4               	decfsz	??_lcd_put_byte,f
  1394  0601  2E00               	goto	u657
  1395  0602  0000               	nop
  1396  0603                     l1042:
  1397                           
  1398                           ;lcd.c: 150:  RD2 = 0;
  1399  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1400  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0605  1108               	bcf	8,2	;volatile
  1402                           
  1403                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1404  0606  3006               	movlw	6
  1405  0607  00F4               	movwf	??_lcd_put_byte
  1406  0608                     u667:
  1407  0608  0BF4               	decfsz	??_lcd_put_byte,f
  1408  0609  2E08               	goto	u667
  1409  060A  0000               	nop
  1410  060B                     l1044:
  1411                           
  1412                           ;lcd.c: 153:  RD3 = 0;
  1413  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1414  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1415  060D  1188               	bcf	8,3	;volatile
  1416  060E                     l1046:
  1417                           
  1418                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  1419  060E  0873               	movf	lcd_put_byte@b,w
  1420  060F  00F4               	movwf	??_lcd_put_byte
  1421  0610  3004               	movlw	4
  1422  0611                     u435:
  1423  0611  1003               	clrc
  1424  0612  0CF4               	rrf	??_lcd_put_byte,f
  1425  0613  3EFF               	addlw	-1
  1426  0614  1D03               	skipz
  1427  0615  2E11               	goto	u435
  1428  0616  0874               	movf	??_lcd_put_byte,w
  1429  0617  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1430  061C                     l1048:
  1431                           
  1432                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  1433  061C  0873               	movf	lcd_put_byte@b,w
  1434  061D  390F               	andlw	15
  1435  061E  120A  118A  2624  120A  118A  	fcall	_lcd_put_nibble
  1436  0623                     l73:
  1437  0623  0008               	return
  1438  0624                     __end_of_lcd_put_byte:
  1439                           
  1440                           	psect	text6
  1441  0624                     __ptext6:	
  1442 ;; *************** function _lcd_put_nibble *****************
  1443 ;; Defined at:
  1444 ;;		line 103 in file "lcd.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  b               1    wreg     unsigned char 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  b               1    1[COMMON] unsigned char 
  1449 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         2       0       0       0       0
  1461 ;;      Temps:          1       0       0       0       0
  1462 ;;      Totals:         3       0       0       0       0
  1463 ;;Total ram usage:        3 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_lcd_put_byte
  1469 ;;		_lcd_init
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _lcd_put_nibble
  1475  0624                     _lcd_put_nibble:
  1476                           
  1477                           ;incstack = 0
  1478                           ; Regs used in _lcd_put_nibble: [wreg]
  1479                           ;lcd_put_nibble@b stored from wreg
  1480  0624  00F1               	movwf	lcd_put_nibble@b
  1481  0625                     l996:
  1482                           
  1483                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  1484  0625  1683               	bsf	3,5	;RP0=1, select bank1
  1485  0626  1303               	bcf	3,6	;RP1=0, select bank1
  1486  0627  1208               	bcf	8,4	;volatile
  1487                           
  1488                           ;lcd.c: 110:  TRISD5 = 0;
  1489  0628  1288               	bcf	8,5	;volatile
  1490                           
  1491                           ;lcd.c: 111:  TRISD6 = 0;
  1492  0629  1308               	bcf	8,6	;volatile
  1493                           
  1494                           ;lcd.c: 112:  TRISD7 = 0;
  1495  062A  1388               	bcf	8,7	;volatile
  1496  062B                     l998:
  1497                           
  1498                           ;lcd.c: 114:  temp.Val = b;
  1499  062B  0871               	movf	lcd_put_nibble@b,w
  1500  062C  00F0               	movwf	??_lcd_put_nibble
  1501  062D  0870               	movf	??_lcd_put_nibble,w
  1502  062E  00F2               	movwf	lcd_put_nibble@temp
  1503  062F                     l1000:
  1504                           
  1505                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  1506  062F  1872               	btfsc	lcd_put_nibble@temp,0
  1507  0630  2E32               	goto	u341
  1508  0631  2E36               	goto	u340
  1509  0632                     u341:
  1510  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0633  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0634  1608               	bsf	8,4	;volatile
  1513  0635  2E39               	goto	u354
  1514  0636                     u340:
  1515  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0638  1208               	bcf	8,4	;volatile
  1518  0639                     u354:
  1519  0639                     l1002:
  1520                           
  1521                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  1522  0639  18F2               	btfsc	lcd_put_nibble@temp,1
  1523  063A  2E3C               	goto	u361
  1524  063B  2E40               	goto	u360
  1525  063C                     u361:
  1526  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1527  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1528  063E  1688               	bsf	8,5	;volatile
  1529  063F  2E43               	goto	u374
  1530  0640                     u360:
  1531  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0642  1288               	bcf	8,5	;volatile
  1534  0643                     u374:
  1535  0643                     l1004:
  1536                           
  1537                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  1538  0643  1972               	btfsc	lcd_put_nibble@temp,2
  1539  0644  2E46               	goto	u381
  1540  0645  2E4A               	goto	u380
  1541  0646                     u381:
  1542  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0648  1708               	bsf	8,6	;volatile
  1545  0649  2E4D               	goto	u394
  1546  064A                     u380:
  1547  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1548  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1549  064C  1308               	bcf	8,6	;volatile
  1550  064D                     u394:
  1551  064D                     l1006:
  1552                           
  1553                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  1554  064D  19F2               	btfsc	lcd_put_nibble@temp,3
  1555  064E  2E50               	goto	u401
  1556  064F  2E54               	goto	u400
  1557  0650                     u401:
  1558  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0652  1788               	bsf	8,7	;volatile
  1561  0653  2E57               	goto	u414
  1562  0654                     u400:
  1563  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1564  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1565  0656  1388               	bcf	8,7	;volatile
  1566  0657                     u414:
  1567                           
  1568                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1569  0657  3006               	movlw	6
  1570  0658  00F0               	movwf	??_lcd_put_nibble
  1571  0659                     u677:
  1572  0659  0BF0               	decfsz	??_lcd_put_nibble,f
  1573  065A  2E59               	goto	u677
  1574  065B  0000               	nop
  1575  065C                     l1008:
  1576                           
  1577                           ;lcd.c: 122:  RD3 = 1;
  1578  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1579  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1580  065E  1588               	bsf	8,3	;volatile
  1581                           
  1582                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1583  065F  3006               	movlw	6
  1584  0660  00F0               	movwf	??_lcd_put_nibble
  1585  0661                     u687:
  1586  0661  0BF0               	decfsz	??_lcd_put_nibble,f
  1587  0662  2E61               	goto	u687
  1588  0663  0000               	nop
  1589  0664                     l1010:
  1590                           
  1591                           ;lcd.c: 124:  RD3 = 0;
  1592  0664  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0665  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0666  1188               	bcf	8,3	;volatile
  1595  0667                     l68:
  1596  0667  0008               	return
  1597  0668                     __end_of_lcd_put_nibble:
  1598                           
  1599                           	psect	text7
  1600  05BB                     __ptext7:	
  1601 ;; *************** function _lcd_busy *****************
  1602 ;; Defined at:
  1603 ;;		line 18 in file "lcd.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;		None
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  busy            1    1[COMMON] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      unsigned char 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         0       0       0       0       0
  1618 ;;      Locals:         1       0       0       0       0
  1619 ;;      Temps:          1       0       0       0       0
  1620 ;;      Totals:         2       0       0       0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_lcd_gotoxy
  1627 ;;		_lcd_putc
  1628 ;;		_lcd_init
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _lcd_busy
  1634  05BB                     _lcd_busy:
  1635  05BB                     l1012:	
  1636                           ;incstack = 0
  1637                           ; Regs used in _lcd_busy: [wreg+status,2]
  1638                           
  1639                           
  1640                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1641  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  1642  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  1643  05BD  1608               	bsf	8,4	;volatile
  1644                           
  1645                           ;lcd.c: 25:  TRISD5 = 1;
  1646  05BE  1688               	bsf	8,5	;volatile
  1647                           
  1648                           ;lcd.c: 26:  TRISD6 = 1;
  1649  05BF  1708               	bsf	8,6	;volatile
  1650                           
  1651                           ;lcd.c: 27:  TRISD7 = 1;
  1652  05C0  1788               	bsf	8,7	;volatile
  1653                           
  1654                           ;lcd.c: 29:  RD2 = 1;
  1655  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1656  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1657  05C3  1508               	bsf	8,2	;volatile
  1658                           
  1659                           ;lcd.c: 30:  RD1 = 0;
  1660  05C4  1088               	bcf	8,1	;volatile
  1661  05C5                     l1014:
  1662                           
  1663                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1664  05C5  3006               	movlw	6
  1665  05C6  00F0               	movwf	??_lcd_busy
  1666  05C7                     u697:
  1667  05C7  0BF0               	decfsz	??_lcd_busy,f
  1668  05C8  2DC7               	goto	u697
  1669  05C9  0000               	nop
  1670  05CA                     l1016:
  1671                           
  1672                           ;lcd.c: 32:  RD3 = 1;
  1673  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1674  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1675  05CC  1588               	bsf	8,3	;volatile
  1676                           
  1677                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1678  05CD  3006               	movlw	6
  1679  05CE  00F0               	movwf	??_lcd_busy
  1680  05CF                     u707:
  1681  05CF  0BF0               	decfsz	??_lcd_busy,f
  1682  05D0  2DCF               	goto	u707
  1683  05D1  0000               	nop
  1684  05D2                     l1018:
  1685                           
  1686                           ;lcd.c: 35:  busy = RD7;
  1687  05D2  3000               	movlw	0
  1688  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1689  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1690  05D5  1B88               	btfsc	8,7	;volatile
  1691  05D6  3001               	movlw	1
  1692  05D7  00F1               	movwf	lcd_busy@busy
  1693  05D8                     l1020:
  1694                           
  1695                           ;lcd.c: 37:  RD3 = 0;
  1696  05D8  1188               	bcf	8,3	;volatile
  1697  05D9                     l1022:
  1698                           
  1699                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1700  05D9  3006               	movlw	6
  1701  05DA  00F0               	movwf	??_lcd_busy
  1702  05DB                     u717:
  1703  05DB  0BF0               	decfsz	??_lcd_busy,f
  1704  05DC  2DDB               	goto	u717
  1705  05DD  0000               	nop
  1706  05DE                     l1024:
  1707                           
  1708                           ;lcd.c: 39:  RD3 = 1;
  1709  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1710  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1711  05E0  1588               	bsf	8,3	;volatile
  1712  05E1                     l1026:
  1713                           
  1714                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1715  05E1  3006               	movlw	6
  1716  05E2  00F0               	movwf	??_lcd_busy
  1717  05E3                     u727:
  1718  05E3  0BF0               	decfsz	??_lcd_busy,f
  1719  05E4  2DE3               	goto	u727
  1720  05E5  0000               	nop
  1721  05E6                     l1028:
  1722                           
  1723                           ;lcd.c: 41:  RD3 = 0;
  1724  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1725  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1726  05E8  1188               	bcf	8,3	;volatile
  1727  05E9                     l1030:
  1728                           
  1729                           ;lcd.c: 43:  return busy;
  1730  05E9  0871               	movf	lcd_busy@busy,w
  1731  05EA                     l60:
  1732  05EA  0008               	return
  1733  05EB                     __end_of_lcd_busy:
  1734  007E                     btemp	set	126	;btemp
  1735  007E                     wtemp0	set	126
  1736                           
  1737                           	psect	config
  1738                           
  1739                           ;Config register CONFIG1 @ 0x2007
  1740                           ;	Oscillator Selection bits
  1741                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  1742                           ;	Watchdog Timer Enable bit
  1743                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1744                           ;	Power-up Timer Enable bit
  1745                           ;	PWRTE = OFF, PWRT disabled
  1746                           ;	RE3/MCLR pin function select bit
  1747                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1748                           ;	Code Protection bit
  1749                           ;	CP = OFF, Program memory code protection is disabled
  1750                           ;	Data Code Protection bit
  1751                           ;	CPD = OFF, Data memory code protection is disabled
  1752                           ;	Brown Out Reset Selection bits
  1753                           ;	BOREN = OFF, BOR disabled
  1754                           ;	Internal External Switchover bit
  1755                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1756                           ;	Fail-Safe Clock Monitor Enabled bit
  1757                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1758                           ;	Low Voltage Programming Enable bit
  1759                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1760                           ;	In-Circuit Debugger Mode bit
  1761                           ;	DEBUG = 0x1, unprogrammed default
  1762  2007                     	org	8199
  1763  2007  20F2               	dw	8434
  1764                           
  1765                           ;Config register CONFIG2 @ 0x2008
  1766                           ;	Brown-out Reset Selection bit
  1767                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1768                           ;	Flash Program Memory Self Write Enable bits
  1769                           ;	WRT = OFF, Write protection off
  1770  2008                     	org	8200
  1771  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    90
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 17
		 -> main@class(CODE[13]), main@HKTT(CODE[13]), main@your_live(CODE[17]), main@your_born(CODE[17]), 
		 -> main@MSSV(CODE[14]), main@your_name(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8005
                                              1 BANK0      3     3      0
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2808
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2565
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1561
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1071
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1     937
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
       _lcd_put_nibble
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 02 18:23:56 2021

                      pc 0002                       l27 0756                       l60 05EA  
                     l71 05FB                       l73 0623                       l81 05BA  
                     l68 0667                       l99 06C3   __end_of_lcd_put_nibble 0668  
                     fsr 0004            ?_lcd_put_byte 0073                      l105 0594  
                    l123 07FB                      l996 0625                      l998 062B  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      u400 0654                      u401 0650  
                    u340 0636                      u420 05F7                      u500 07C1  
                    u341 0632                      u421 05F6                      u501 07C0  
                    u414 0657                      u510 07D5                      u511 07D4  
                    u360 0640                      u520 07E7                      u440 059B  
                    u361 063C                      u521 07E6                      u441 059A  
                    u354 0639                      u530 07FB                      u450 05BA  
                    u435 0611                      u531 07FA                      u451 05B9  
                    u380 064A                      u460 067C                      u540 0594  
                    u381 0646                      u461 067B                      u541 0593  
                    u374 0643                      u470 069A                      u471 0699  
                    u607 0750                      u480 06AF                      u617 0766  
                    u481 06AE                      u394 064D                      u490 07AD  
                    u707 05CF                      u491 07AC                      u627 077A  
                    u717 05DB                      u637 0789                      u727 05E3  
                    u647 0798                      u657 0600                      u667 0608  
                    u587 06F2                      u677 0659                      u597 0721  
                    u687 0661                      u697 05C7                      fsr0 0004  
                   l1000 062F                     l1010 0664                     l1002 0639  
                   l1020 05D8                     l1012 05BB                     l1004 0643  
                   l1100 078E                     l1030 05E9                     l1022 05D9  
                   l1014 05C5                     l1006 064D                     l1110 07C1  
                   l1102 079D                     l1024 05DE                     l1016 05CA  
                   l1008 065C                     l1040 05FE                     l1120 07F1  
                   l1112 07CB                     l1104 07A3                     l1026 05E1  
                   l1018 05D2                     l1042 0603                     l1034 05EC  
                   l1114 07D5                     l1106 07AD                     l1050 0596  
                   l1122 0575                     l1028 05E6                     l1044 060B  
                   l1036 05F2                     l1116 07DD                     l1108 07B7  
                   l1060 05B0                     l1052 059B                     l1124 0576  
                   l1140 06DC                     l1046 060E                     l1038 05F7  
                   l1118 07E7                     l1054 05A0                     l1070 0686  
                   l1062 0669                     l1126 0582                     l1150 0705  
                   l1142 06E4                     l1134 06C4                     l1048 061C  
                   l1056 05A1                     l1216 06B8                     l1072 0690  
                   l1064 066A                     l1128 0588                     l1160 0734  
                   l1152 070B                     l1144 06EA                     l1136 06C9  
                   l1090 076E                     l1058 05A5                     l1074 069B  
                   l1066 0672                     l1162 073A                     l1154 0713  
                   l1146 06F8                     l1138 06CF                     l1092 076F  
                   l1084 0759                     l1076 06A5                     l1068 067D  
                   l1164 0748                     l1156 0719                     l1148 06FE  
                   l1094 0770                     l1086 0762                     l1078 06B0  
                   l1158 0727                     l1096 0776                     l1088 076B  
                   l1098 0785                     _main 06C4             lcd_busy@busy 0071  
                   btemp 007E                     start 0000          ?_lcd_put_nibble 0070  
         ??_lcd_put_byte 0074                    ?_main 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0759            lcd_gotoxy@col 0078            lcd_gotoxy@row 0076  
     lcd_put_nibble@temp 0072                   ??_main 0021                   _TRISD1 0441  
                 _TRISD2 0442                   _TRISD3 0443                   _TRISD4 0444  
                 _TRISD5 0445                   _TRISD6 0446                   _TRISD7 0447  
       __end_of_lcd_busy 05EB         __end_of_lcd_init 07FC         __end_of_lcd_putc 06C4  
       __end_of_lcd_puts 0595            lcd_put_byte@b 0073         __end_ofmain@HKTT 0063  
       __end_ofmain@MSSV 0049  __end_of__initialization 07FC     __end_of_lcd_put_byte 0624  
         __pcstackCOMMON 0070            main@your_born 001A            main@your_name 002B  
          main@your_live 0009        lcd_gotoxy@address 0079         ??_lcd_put_nibble 0070  
             __pmaintext 06C4               _lcd_gotoxy 0595                ?_lcd_busy 0070  
              ?_lcd_init 0070                ?_lcd_putc 0070                ?_lcd_puts 0070  
             __stringtab 0003                  __ptext1 0572                  __ptext2 0668  
                __ptext3 0595                  __ptext4 0759                  __ptext5 05EB  
                __ptext6 0624                  __ptext7 05BB    __size_of_lcd_put_byte 0039  
             ??_lcd_busy 0070               ??_lcd_init 0076               ??_lcd_putc 007A  
             ??_lcd_puts 007D     end_of_initialization 07FC           lcd_put_byte@rs 0075  
      __end_ofmain@class 0056             _lcd_put_byte 05EB              ?_lcd_gotoxy 0076  
    start_initialization 07FC      __size_of_lcd_gotoxy 0026                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_lcd_busy 0030        __size_of_lcd_init 00A3  
      __size_of_lcd_putc 005C        __size_of_lcd_puts 0023                __pstrings 0003  
            __stringbase 0008  __size_of_lcd_put_nibble 0044                main@class 0049  
              lcd_putc@c 007C                lcd_puts@s 0020             ??_lcd_gotoxy 0077  
  __end_ofmain@your_born 002B    __end_ofmain@your_name 003B    __end_ofmain@your_live 001A  
     __end_of_lcd_gotoxy 05BB       __end_of__stringtab 0009                 _lcd_busy 05BB  
               _lcd_init 0759                 _lcd_putc 0668                 _lcd_puts 0572  
          __size_of_main 0095                 main@HKTT 0056                 main@MSSV 003B  
        lcd_put_nibble@b 0071                stringcode 0003           _lcd_put_nibble 0624  
               stringdir 0003                 stringtab 0003  
