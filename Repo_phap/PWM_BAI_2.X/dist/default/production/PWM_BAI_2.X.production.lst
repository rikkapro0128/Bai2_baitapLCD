

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 14 21:31:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295                           
   296                           	psect	strings
   297  0003                     __pstrings:
   298  0003                     stringtab:
   299  0003                     __stringtab:
   300  0003                     stringcode:	
   301                           ;	String table - string pointers are 1 byte each
   302                           
   303  0003                     stringdir:
   304  0003  3000               	movlw	high stringdir
   305  0004  008A               	movwf	10
   306  0005  0804               	movf	4,w
   307  0006  0A84               	incf	4,f
   308  0007  0782               	addwf	2,f
   309  0008                     __stringbase:
   310  0008  3400               	retlw	0
   311  0009                     __end_of__stringtab:
   312  0009                     contentStop@special_name_bye:
   313  0009  340D               	retlw	13
   314  000A  3412               	retlw	18
   315  000B  3408               	retlw	8
   316  000C  3414               	retlw	20
   317  000D  3408               	retlw	8
   318  000E  3414               	retlw	20
   319  000F  341E               	retlw	30
   320  0010  3400               	retlw	0
   321  0011  3401               	retlw	1
   322  0012  340A               	retlw	10
   323  0013  3414               	retlw	20
   324  0014  3400               	retlw	0
   325  0015  341C               	retlw	28
   326  0016  3414               	retlw	20
   327  0017  341F               	retlw	31
   328  0018  3400               	retlw	0
   329  0019  3400               	retlw	0
   330  001A  3404               	retlw	4
   331  001B  3408               	retlw	8
   332  001C  3400               	retlw	0
   333  001D  341C               	retlw	28
   334  001E  3414               	retlw	20
   335  001F  341E               	retlw	30
   336  0020  3400               	retlw	0
   337  0021  3400               	retlw	0
   338  0022  340E               	retlw	14
   339  0023  3412               	retlw	18
   340  0024  3412               	retlw	18
   341  0025  340F               	retlw	15
   342  0026  3400               	retlw	0
   343  0027  3404               	retlw	4
   344  0028  3400               	retlw	0
   345  0029  3404               	retlw	4
   346  002A  340A               	retlw	10
   347  002B  3404               	retlw	4
   348  002C  340A               	retlw	10
   349  002D  340F               	retlw	15
   350  002E  3400               	retlw	0
   351  002F  3404               	retlw	4
   352  0030  3400               	retlw	0
   353  0031  3499               	retlw	153
   354  0032                     __end_ofcontentStop@special_name_bye:
   355  0032                     contentStop@your_name:
   356  0032  344E               	retlw	78
   357  0033  3467               	retlw	103
   358  0034  3475               	retlw	117
   359  0035  3479               	retlw	121
   360  0036  3400               	retlw	0
   361  0037  346E               	retlw	110
   362  0038  3420               	retlw	32
   363  0039  3454               	retlw	84
   364  003A  3401               	retlw	1
   365  003B  346E               	retlw	110
   366  003C  3420               	retlw	32
   367  003D  3450               	retlw	80
   368  003E  3468               	retlw	104
   369  003F  3402               	retlw	2
   370  0040  3470               	retlw	112
   371  0041  340A               	retlw	10
   372  0042                     __end_ofcontentStop@your_name:
   373  0042                     contentStop@bye:
   374  0042  3454               	retlw	84
   375  0043  3403               	retlw	3
   376  0044  346D               	retlw	109
   377  0045  3420               	retlw	32
   378  0046  3462               	retlw	98
   379  0047  3469               	retlw	105
   380  0048  3404               	retlw	4
   381  0049  3474               	retlw	116
   382  004A  340A               	retlw	10
   383  004B                     __end_ofcontentStop@bye:
   384  001B                     _CCPR2L	set	27
   385  0012                     _T2CON	set	18
   386  001D                     _CCP2CON	set	29
   387  0017                     _CCP1CON	set	23
   388  0015                     _CCPR1L	set	21
   389  0011                     _TMR2	set	17
   390  0044                     _RD4	set	68
   391  0045                     _RD5	set	69
   392  0046                     _RD6	set	70
   393  0047                     _RD7	set	71
   394  0043                     _RD3	set	67
   395  0041                     _RD1	set	65
   396  0042                     _RD2	set	66
   397  0032                     _RB2	set	50
   398  0031                     _RB1	set	49
   399  0030                     _RB0	set	48
   400  0048                     _RE0	set	72
   401  00EC                     _DC2B0	set	236
   402  00ED                     _DC2B1	set	237
   403  0092                     _TMR2ON	set	146
   404  0090                     _T2CKPS0	set	144
   405  0091                     _T2CKPS1	set	145
   406  00BC                     _DC1B0	set	188
   407  00BD                     _DC1B1	set	189
   408  0095                     _WPUB	set	149
   409  0092                     _PR2	set	146
   410  0442                     _TRISD2	set	1090
   411  0441                     _TRISD1	set	1089
   412  0443                     _TRISD3	set	1091
   413  0447                     _TRISD7	set	1095
   414  0446                     _TRISD6	set	1094
   415  0445                     _TRISD5	set	1093
   416  0444                     _TRISD4	set	1092
   417  0448                     _TRISE0	set	1096
   418  040F                     _nRBPU	set	1039
   419  0432                     _TRISB2	set	1074
   420  0431                     _TRISB1	set	1073
   421  0430                     _TRISB0	set	1072
   422  043A                     _TRISC2	set	1082
   423  0439                     _TRISC1	set	1081
   424  0189                     _ANSELH	set	393
   425  0188                     _ANSEL	set	392
   426  004B                     STR_3:
   427  004B  3466               	retlw	102	;'f'
   428  004C  343D               	retlw	61	;'='
   429  004D  3433               	retlw	51	;'3'
   430  004E  344B               	retlw	75	;'K'
   431  004F  3448               	retlw	72	;'H'
   432  0050  347A               	retlw	122	;'z'
   433  0051  3400               	retlw	0
   434  0052                     STR_1:
   435  0052  3466               	retlw	102	;'f'
   436  0053  343D               	retlw	61	;'='
   437  0054  3434               	retlw	52	;'4'
   438  0055  344B               	retlw	75	;'K'
   439  0056  3448               	retlw	72	;'H'
   440  0057  347A               	retlw	122	;'z'
   441  0058  3400               	retlw	0
   442  0059                     STR_2:
   443  0059  3444               	retlw	68	;'D'
   444  005A  343D               	retlw	61	;'='
   445  005B  3433               	retlw	51	;'3'
   446  005C  3430               	retlw	48	;'0'
   447  005D  3425               	retlw	37	;'%'
   448  005E  3400               	retlw	0
   449  005F                     STR_4:
   450  005F  3444               	retlw	68	;'D'
   451  0060  343D               	retlw	61	;'='
   452  0061  3438               	retlw	56	;'8'
   453  0062  3430               	retlw	48	;'0'
   454  0063  3425               	retlw	37	;'%'
   455  0064  3400               	retlw	0
   456                           
   457                           	psect	cinit
   458  07FC                     start_initialization:	
   459                           ; #config settings
   460                           
   461  07FC                     __initialization:
   462  07FC                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465  07FC                     __end_of__initialization:
   466  07FC  0183               	clrf	3
   467  07FD  120A  118A  2E2D   	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	cstackCOMMON
   470  0070                     __pcstackCOMMON:
   471  0070                     ?_lcd_busy:
   472  0070                     ??_lcd_busy:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_lcd_init:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_lcd_putc:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_lcd_puts:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_addCharSpecial:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_contentStop:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_contentConfigPwm_1:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_contentConfigPwm_2:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_configPwm_1:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_configPwm_1:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_configPwm_2:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ??_configPwm_2:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_declarePort:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ??_declarePort:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_main:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_lcd_put_nibble:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ??_lcd_put_nibble:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_getLengthArr:	
   524                           ; 1 bytes @ 0x0
   525                           
   526                           
   527                           ; 2 bytes @ 0x0
   528  0070                     	ds	1
   529  0071                     lcd_busy@busy:
   530  0071                     lcd_put_nibble@b:	
   531                           ; 1 bytes @ 0x1
   532                           
   533                           
   534                           ; 1 bytes @ 0x1
   535  0071                     	ds	1
   536  0072                     ??_getLengthArr:
   537  0072                     getLengthArr@character:	
   538                           ; 1 bytes @ 0x2
   539                           
   540  0072                     lcd_put_nibble@temp:	
   541                           ; 1 bytes @ 0x2
   542                           
   543                           
   544                           ; 1 bytes @ 0x2
   545  0072                     	ds	1
   546  0073                     ?_lcd_put_byte:
   547  0073                     lcd_put_byte@b:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0073                     getLengthArr@i:	
   551                           ; 1 bytes @ 0x3
   552                           
   553                           
   554                           ; 2 bytes @ 0x3
   555  0073                     	ds	1
   556  0074                     ??_lcd_put_byte:
   557                           
   558                           ; 1 bytes @ 0x4
   559  0074                     	ds	1
   560  0075                     lcd_put_byte@rs:
   561                           
   562                           ; 1 bytes @ 0x5
   563  0075                     	ds	1
   564  0076                     ??_lcd_init:
   565  0076                     ?_lcd_gotoxy:	
   566                           ; 1 bytes @ 0x6
   567                           
   568  0076                     ??_addCharSpecial:	
   569                           ; 1 bytes @ 0x6
   570                           
   571  0076                     lcd_gotoxy@row:	
   572                           ; 1 bytes @ 0x6
   573                           
   574                           
   575                           ; 1 bytes @ 0x6
   576  0076                     	ds	1
   577  0077                     ??_lcd_gotoxy:
   578  0077                     addCharSpecial@i:	
   579                           ; 1 bytes @ 0x7
   580                           
   581                           
   582                           ; 2 bytes @ 0x7
   583  0077                     	ds	1
   584  0078                     lcd_gotoxy@col:
   585                           
   586                           ; 1 bytes @ 0x8
   587  0078                     	ds	1
   588  0079                     addCharSpecial@character:
   589  0079                     lcd_gotoxy@address:	
   590                           ; 1 bytes @ 0x9
   591                           
   592                           
   593                           ; 1 bytes @ 0x9
   594  0079                     	ds	1
   595  007A                     ??_lcd_putc:
   596                           
   597                           ; 1 bytes @ 0xA
   598  007A                     	ds	2
   599  007C                     lcd_putc@c:
   600                           
   601                           ; 1 bytes @ 0xC
   602  007C                     	ds	1
   603  007D                     ??_lcd_puts:
   604  007D                     ??_contentStop:	
   605                           ; 1 bytes @ 0xD
   606                           
   607                           
   608                           ; 1 bytes @ 0xD
   609  007D                     	ds	1
   610  007E                     ??_contentConfigPwm_1:
   611  007E                     ??_contentConfigPwm_2:	
   612                           ; 1 bytes @ 0xE
   613                           
   614  007E                     ??_main:	
   615                           ; 1 bytes @ 0xE
   616                           
   617                           
   618                           	psect	cstackBANK0
   619  0020                     __pcstackBANK0:	
   620                           ; 1 bytes @ 0xE
   621                           
   622  0020                     lcd_puts@s:
   623  0020                     contentStop@length:	
   624                           ; 1 bytes @ 0x0
   625                           
   626                           
   627                           ; 2 bytes @ 0x0
   628  0020                     	ds	2
   629  0022                     contentStop@i:
   630                           
   631                           ; 2 bytes @ 0x2
   632  0022                     	ds	2
   633                           
   634                           	psect	maintext
   635  062D                     __pmaintext:	
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   638 ;;
   639 ;; *************** function _main *****************
   640 ;; Defined at:
   641 ;;		line 137 in file "bai_2.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : B00/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels required when called: 6
   661 ;; This function calls:
   662 ;;		_configPwm_1
   663 ;;		_configPwm_2
   664 ;;		_contentConfigPwm_1
   665 ;;		_contentConfigPwm_2
   666 ;;		_contentStop
   667 ;;		_declarePort
   668 ;; This function is called by:
   669 ;;		Startup code after reset
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _main
   675  062D                     _main:
   676  062D                     l1439:	
   677                           ;incstack = 0
   678                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   679                           
   680                           
   681                           ;bai_2.c: 138:     declarePort();
   682  062D  120A  118A  2444  120A  118A  	fcall	_declarePort
   683  0632                     l1441:
   684                           
   685                           ;bai_2.c: 140:         if(!RB0) {
   686  0632  1283               	bcf	3,5	;RP0=0, select bank0
   687  0633  1303               	bcf	3,6	;RP1=0, select bank0
   688  0634  1806               	btfsc	6,0	;volatile
   689  0635  2E37               	goto	u771
   690  0636  2E38               	goto	u770
   691  0637                     u771:
   692  0637  2E48               	goto	l126
   693  0638                     u770:
   694  0638                     l127:
   695  0638  1C06               	btfss	6,0	;volatile
   696  0639  2E3B               	goto	u781
   697  063A  2E3C               	goto	u780
   698  063B                     u781:
   699  063B  2E38               	goto	l127
   700  063C                     u780:
   701  063C                     l129:
   702                           
   703                           ;bai_2.c: 142:             RE0 = 1;
   704  063C  1409               	bsf	9,0	;volatile
   705  063D                     l1445:
   706                           
   707                           ;bai_2.c: 144:             configPwm_1();
   708  063D  120A  118A  2472  120A  118A  	fcall	_configPwm_1
   709  0642                     l1447:
   710                           
   711                           ;bai_2.c: 145:             contentConfigPwm_1();
   712  0642  120A  118A  24AE  120A  118A  	fcall	_contentConfigPwm_1
   713                           
   714                           ;bai_2.c: 146:         }else if(!RB1) {
   715  0647  2E32               	goto	l1441
   716  0648                     l126:
   717  0648  1886               	btfsc	6,1	;volatile
   718  0649  2E4B               	goto	u791
   719  064A  2E4C               	goto	u790
   720  064B                     u791:
   721  064B  2E5C               	goto	l131
   722  064C                     u790:
   723  064C                     l132:
   724  064C  1C86               	btfss	6,1	;volatile
   725  064D  2E4F               	goto	u801
   726  064E  2E50               	goto	u800
   727  064F                     u801:
   728  064F  2E4C               	goto	l132
   729  0650                     u800:
   730  0650                     l134:
   731                           
   732                           ;bai_2.c: 148:             RE0 = 1;
   733  0650  1409               	bsf	9,0	;volatile
   734  0651                     l1451:
   735                           
   736                           ;bai_2.c: 150:             configPwm_2();
   737  0651  120A  118A  2490  120A  118A  	fcall	_configPwm_2
   738  0656                     l1453:
   739                           
   740                           ;bai_2.c: 151:             contentConfigPwm_2();
   741  0656  120A  118A  24CF  120A  118A  	fcall	_contentConfigPwm_2
   742                           
   743                           ;bai_2.c: 152:         }else if(!RB2) {
   744  065B  2E32               	goto	l1441
   745  065C                     l131:
   746  065C  1906               	btfsc	6,2	;volatile
   747  065D  2E5F               	goto	u811
   748  065E  2E60               	goto	u810
   749  065F                     u811:
   750  065F  2E7A               	goto	l130
   751  0660                     u810:
   752  0660                     l137:
   753  0660  1D06               	btfss	6,2	;volatile
   754  0661  2E63               	goto	u821
   755  0662  2E64               	goto	u820
   756  0663                     u821:
   757  0663  2E60               	goto	l137
   758  0664                     u820:
   759  0664                     l139:
   760                           
   761                           ;bai_2.c: 155:             TRISC1 = TRISC2 = 1;
   762  0664  1683               	bsf	3,5	;RP0=1, select bank1
   763  0665  1303               	bcf	3,6	;RP1=0, select bank1
   764  0666  1507               	bsf	7,2	;volatile
   765  0667  1907               	btfsc	7,2	;volatile
   766  0668  2E6A               	goto	u831
   767  0669  2E6E               	goto	u830
   768  066A                     u831:
   769  066A  1683               	bsf	3,5	;RP0=1, select bank1
   770  066B  1303               	bcf	3,6	;RP1=0, select bank1
   771  066C  1487               	bsf	7,1	;volatile
   772  066D  2E71               	goto	u844
   773  066E                     u830:
   774  066E  1683               	bsf	3,5	;RP0=1, select bank1
   775  066F  1303               	bcf	3,6	;RP1=0, select bank1
   776  0670  1087               	bcf	7,1	;volatile
   777  0671                     u844:
   778                           
   779                           ;bai_2.c: 156:             RE0 = 0;
   780  0671  1283               	bcf	3,5	;RP0=0, select bank0
   781  0672  1303               	bcf	3,6	;RP1=0, select bank0
   782  0673  1009               	bcf	9,0	;volatile
   783  0674                     l1457:
   784                           
   785                           ;bai_2.c: 157:             contentStop();
   786  0674  120A  118A  26DA  120A  118A  	fcall	_contentStop
   787  0679  2E32               	goto	l1441
   788  067A                     l130:
   789  067A  2E32               	goto	l1441
   790  067B  120A  118A  2800   	ljmp	start
   791  067E                     __end_of_main:
   792                           
   793                           	psect	text1
   794  0444                     __ptext1:	
   795 ;; *************** function _declarePort *****************
   796 ;; Defined at:
   797 ;;		line 124 in file "bai_2.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           
   825                           ;psect for function _declarePort
   826  0444                     _declarePort:
   827  0444                     l1109:	
   828                           ;incstack = 0
   829                           ; Regs used in _declarePort: [wreg+status,2]
   830                           
   831                           
   832                           ;bai_2.c: 125:     ANSEL = ANSELH = 0;
   833  0444  1683               	bsf	3,5	;RP0=1, select bank3
   834  0445  1703               	bsf	3,6	;RP1=1, select bank3
   835  0446  0189               	clrf	9	;volatile
   836  0447  0188               	clrf	8	;volatile
   837  0448                     l1111:
   838                           
   839                           ;bai_2.c: 126:     TRISB0 = 1;
   840  0448  1683               	bsf	3,5	;RP0=1, select bank1
   841  0449  1303               	bcf	3,6	;RP1=0, select bank1
   842  044A  1406               	bsf	6,0	;volatile
   843  044B                     l1113:
   844                           
   845                           ;bai_2.c: 127:     TRISB1 = 1;
   846  044B  1486               	bsf	6,1	;volatile
   847  044C                     l1115:
   848                           
   849                           ;bai_2.c: 128:     TRISB2 = 1;
   850  044C  1506               	bsf	6,2	;volatile
   851  044D                     l1117:
   852                           
   853                           ;bai_2.c: 129:     nRBPU = 0;
   854  044D  1381               	bcf	1,7	;volatile
   855  044E                     l1119:
   856                           
   857                           ;bai_2.c: 130:     WPUB = 0x07;
   858  044E  3007               	movlw	7
   859  044F  0095               	movwf	21	;volatile
   860  0450                     l1121:
   861                           
   862                           ;bai_2.c: 131:     TRISE0 = 0;
   863  0450  1009               	bcf	9,0	;volatile
   864  0451                     l1123:
   865                           
   866                           ;bai_2.c: 132:     RE0 = 1;
   867  0451  1283               	bcf	3,5	;RP0=0, select bank0
   868  0452  1303               	bcf	3,6	;RP1=0, select bank0
   869  0453  1409               	bsf	9,0	;volatile
   870  0454                     l120:
   871  0454  0008               	return
   872  0455                     __end_of_declarePort:
   873                           
   874                           	psect	text2
   875  06DA                     __ptext2:	
   876 ;; *************** function _contentStop *****************
   877 ;; Defined at:
   878 ;;		line 47 in file "bai_2.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  i               2    2[BANK0 ] unsigned int 
   883 ;;  length          2    0[BANK0 ] unsigned int 
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0       0       0       0       0
   894 ;;      Locals:         0       4       0       0       0
   895 ;;      Temps:          0       0       0       0       0
   896 ;;      Totals:         0       4       0       0       0
   897 ;;Total ram usage:        4 bytes
   898 ;; Hardware stack levels used: 1
   899 ;; Hardware stack levels required when called: 4
   900 ;; This function calls:
   901 ;;		_addCharSpecial
   902 ;;		_getLengthArr
   903 ;;		_lcd_gotoxy
   904 ;;		_lcd_init
   905 ;;		_lcd_putc
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           
   912                           ;psect for function _contentStop
   913  06DA                     _contentStop:
   914  06DA                     l1395:	
   915                           ;incstack = 0
   916                           ; Regs used in _contentStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   917                           
   918  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   919  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   920  06DC  01A0               	clrf	contentStop@length
   921  06DD  01A1               	clrf	contentStop@length+1
   922  06DE                     l1397:
   923                           
   924                           ;bai_2.c: 51:     const char special_name_bye[];bai_2.c: 60:     addCharSpecial(special_
      +                          name_bye);
   925  06DE  3001               	movlw	(low ((contentStop@special_name_bye-__stringbase)| (0+32768)))& (0+255)
   926  06DF  120A  118A  25E6  120A  118A  	fcall	_addCharSpecial
   927  06E4                     l1399:
   928                           
   929                           ;bai_2.c: 61:     lcd_init();
   930  06E4  120A  118A  2759  120A  118A  	fcall	_lcd_init
   931  06E9                     l1401:
   932                           
   933                           ;bai_2.c: 62:     length = getLengthArr(your_name);
   934  06E9  302A               	movlw	(low ((contentStop@your_name-__stringbase)| (0+32768)))& (0+255)
   935  06EA  120A  118A  2455  120A  118A  	fcall	_getLengthArr
   936  06EF  0871               	movf	?_getLengthArr+1,w
   937  06F0  1283               	bcf	3,5	;RP0=0, select bank0
   938  06F1  1303               	bcf	3,6	;RP1=0, select bank0
   939  06F2  00A1               	movwf	contentStop@length+1
   940  06F3  0870               	movf	?_getLengthArr,w
   941  06F4  00A0               	movwf	contentStop@length
   942  06F5                     l1403:
   943                           
   944                           ;bai_2.c: 63:     lcd_gotoxy(0, 0);
   945  06F5  01F6               	clrf	lcd_gotoxy@row
   946  06F6  3000               	movlw	0
   947  06F7  120A  118A  2513  120A  118A  	fcall	_lcd_gotoxy
   948                           
   949                           ;bai_2.c: 64:     for(i = 0; i< length; i++) {
   950  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   951  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   952  06FE  01A2               	clrf	contentStop@i
   953  06FF  01A3               	clrf	contentStop@i+1
   954  0700  2F16               	goto	l1409
   955  0701                     l1405:
   956                           
   957                           ;bai_2.c: 65:         lcd_putc(your_name[i]);
   958  0701  0822               	movf	contentStop@i,w
   959  0702  3E2A               	addlw	low ((contentStop@your_name-__stringbase)| (0+32768))
   960  0703  0084               	movwf	4
   961  0704  120A  118A  2003  120A  118A  	fcall	stringdir
   962  0709  120A  118A  267E  120A  118A  	fcall	_lcd_putc
   963  070E                     l1407:
   964                           
   965                           ;bai_2.c: 66:     }
   966  070E  3001               	movlw	1
   967  070F  1283               	bcf	3,5	;RP0=0, select bank0
   968  0710  1303               	bcf	3,6	;RP1=0, select bank0
   969  0711  07A2               	addwf	contentStop@i,f
   970  0712  1803               	skipnc
   971  0713  0AA3               	incf	contentStop@i+1,f
   972  0714  3000               	movlw	0
   973  0715  07A3               	addwf	contentStop@i+1,f
   974  0716                     l1409:
   975  0716  0821               	movf	contentStop@length+1,w
   976  0717  0223               	subwf	contentStop@i+1,w
   977  0718  1D03               	skipz
   978  0719  2F1C               	goto	u755
   979  071A  0820               	movf	contentStop@length,w
   980  071B  0222               	subwf	contentStop@i,w
   981  071C                     u755:
   982  071C  1C03               	skipc
   983  071D  2F1F               	goto	u751
   984  071E  2F20               	goto	u750
   985  071F                     u751:
   986  071F  2F01               	goto	l1405
   987  0720                     u750:
   988  0720                     l1411:
   989                           
   990                           ;bai_2.c: 67:     length = getLengthArr(bye);
   991  0720  303A               	movlw	(low ((contentStop@bye-__stringbase)| (0+32768)))& (0+255)
   992  0721  120A  118A  2455  120A  118A  	fcall	_getLengthArr
   993  0726  0871               	movf	?_getLengthArr+1,w
   994  0727  1283               	bcf	3,5	;RP0=0, select bank0
   995  0728  1303               	bcf	3,6	;RP1=0, select bank0
   996  0729  00A1               	movwf	contentStop@length+1
   997  072A  0870               	movf	?_getLengthArr,w
   998  072B  00A0               	movwf	contentStop@length
   999  072C                     l1413:
  1000                           
  1001                           ;bai_2.c: 68:     lcd_gotoxy(5, 1);
  1002  072C  01F6               	clrf	lcd_gotoxy@row
  1003  072D  0AF6               	incf	lcd_gotoxy@row,f
  1004  072E  3005               	movlw	5
  1005  072F  120A  118A  2513  120A  118A  	fcall	_lcd_gotoxy
  1006  0734                     l1415:
  1007                           
  1008                           ;bai_2.c: 69:     for(i = 0; i< length; i++) {
  1009  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0736  01A2               	clrf	contentStop@i
  1012  0737  01A3               	clrf	contentStop@i+1
  1013  0738  2F4E               	goto	l1421
  1014  0739                     l1417:
  1015                           
  1016                           ;bai_2.c: 70:         lcd_putc(bye[i]);
  1017  0739  0822               	movf	contentStop@i,w
  1018  073A  3E3A               	addlw	low ((contentStop@bye-__stringbase)| (0+32768))
  1019  073B  0084               	movwf	4
  1020  073C  120A  118A  2003  120A  118A  	fcall	stringdir
  1021  0741  120A  118A  267E  120A  118A  	fcall	_lcd_putc
  1022  0746                     l1419:
  1023                           
  1024                           ;bai_2.c: 71:     }
  1025  0746  3001               	movlw	1
  1026  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0749  07A2               	addwf	contentStop@i,f
  1029  074A  1803               	skipnc
  1030  074B  0AA3               	incf	contentStop@i+1,f
  1031  074C  3000               	movlw	0
  1032  074D  07A3               	addwf	contentStop@i+1,f
  1033  074E                     l1421:
  1034  074E  0821               	movf	contentStop@length+1,w
  1035  074F  0223               	subwf	contentStop@i+1,w
  1036  0750  1D03               	skipz
  1037  0751  2F54               	goto	u765
  1038  0752  0820               	movf	contentStop@length,w
  1039  0753  0222               	subwf	contentStop@i,w
  1040  0754                     u765:
  1041  0754  1C03               	skipc
  1042  0755  2F57               	goto	u761
  1043  0756  2F58               	goto	u760
  1044  0757                     u761:
  1045  0757  2F39               	goto	l1417
  1046  0758                     u760:
  1047  0758                     l105:
  1048  0758  0008               	return
  1049  0759                     __end_of_contentStop:
  1050                           
  1051                           	psect	text3
  1052  0455                     __ptext3:	
  1053 ;; *************** function _getLengthArr *****************
  1054 ;; Defined at:
  1055 ;;		line 35 in file "bai_2.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  character       1    wreg     PTR unsigned char 
  1058 ;;		 -> contentStop@bye(9), contentStop@your_name(16), 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  character       1    2[COMMON] PTR unsigned char 
  1061 ;;		 -> contentStop@bye(9), contentStop@your_name(16), 
  1062 ;;  i               2    3[COMMON] unsigned int 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  2    0[COMMON] unsigned int 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         2       0       0       0       0
  1073 ;;      Locals:         3       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0
  1075 ;;      Totals:         5       0       0       0       0
  1076 ;;Total ram usage:        5 bytes
  1077 ;; Hardware stack levels used: 2
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_contentStop
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _getLengthArr
  1087  0455                     _getLengthArr:
  1088                           
  1089                           ;incstack = 0
  1090                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1091                           ;getLengthArr@character stored from wreg
  1092  0455  00F2               	movwf	getLengthArr@character
  1093  0456                     l1337:
  1094                           
  1095                           ;bai_2.c: 36:     unsigned int i = 0;
  1096  0456  01F3               	clrf	getLengthArr@i
  1097  0457  01F4               	clrf	getLengthArr@i+1
  1098  0458                     l1339:
  1099                           
  1100                           ;bai_2.c: 38:         if(character[i] == '\n')
  1101  0458  0873               	movf	getLengthArr@i,w
  1102  0459  0772               	addwf	getLengthArr@character,w
  1103  045A  0084               	movwf	4
  1104  045B  120A  118A  2003  120A  118A  	fcall	stringdir
  1105  0460  3A0A               	xorlw	10
  1106  0461  1D03               	skipz
  1107  0462  2C64               	goto	u681
  1108  0463  2C65               	goto	u680
  1109  0464                     u681:
  1110  0464  2C66               	goto	l1343
  1111  0465                     u680:
  1112  0465  2C6D               	goto	l1345
  1113  0466                     l1343:
  1114                           
  1115                           ;bai_2.c: 42:         i++;
  1116  0466  3001               	movlw	1
  1117  0467  07F3               	addwf	getLengthArr@i,f
  1118  0468  1803               	skipnc
  1119  0469  0AF4               	incf	getLengthArr@i+1,f
  1120  046A  3000               	movlw	0
  1121  046B  07F4               	addwf	getLengthArr@i+1,f
  1122  046C  2C58               	goto	l1339
  1123  046D                     l1345:
  1124                           
  1125                           ;bai_2.c: 44:     return i;
  1126  046D  0874               	movf	getLengthArr@i+1,w
  1127  046E  00F1               	movwf	?_getLengthArr+1
  1128  046F  0873               	movf	getLengthArr@i,w
  1129  0470  00F0               	movwf	?_getLengthArr
  1130  0471                     l90:
  1131  0471  0008               	return
  1132  0472                     __end_of_getLengthArr:
  1133                           
  1134                           	psect	text4
  1135  05E6                     __ptext4:	
  1136 ;; *************** function _addCharSpecial *****************
  1137 ;; Defined at:
  1138 ;;		line 24 in file "bai_2.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  character       1    wreg     PTR unsigned char 
  1141 ;;		 -> contentStop@special_name_bye(41), 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  character       1    9[COMMON] PTR unsigned char 
  1144 ;;		 -> contentStop@special_name_bye(41), 
  1145 ;;  i               2    7[COMMON] unsigned int 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1155 ;;      Params:         0       0       0       0       0
  1156 ;;      Locals:         3       0       0       0       0
  1157 ;;      Temps:          1       0       0       0       0
  1158 ;;      Totals:         4       0       0       0       0
  1159 ;;Total ram usage:        4 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 2
  1162 ;; This function calls:
  1163 ;;		_lcd_busy
  1164 ;;		_lcd_put_byte
  1165 ;; This function is called by:
  1166 ;;		_contentStop
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _addCharSpecial
  1172  05E6                     _addCharSpecial:
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1176                           ;addCharSpecial@character stored from wreg
  1177  05E6  00F9               	movwf	addCharSpecial@character
  1178  05E7                     l1323:
  1179                           
  1180                           ;bai_2.c: 25:     unsigned int i = 0;
  1181  05E7  01F7               	clrf	addCharSpecial@i
  1182  05E8  01F8               	clrf	addCharSpecial@i+1
  1183  05E9                     l1325:
  1184                           
  1185                           ;bai_2.c: 26:     lcd_put_byte(0, 0x40);
  1186  05E9  3040               	movlw	64
  1187  05EA  00F6               	movwf	??_addCharSpecial
  1188  05EB  0876               	movf	??_addCharSpecial,w
  1189  05EC  00F3               	movwf	lcd_put_byte@b
  1190  05ED  3000               	movlw	0
  1191  05EE  120A  118A  2569  120A  118A  	fcall	_lcd_put_byte
  1192  05F3                     l1327:	
  1193                           ;bai_2.c: 27:     while(lcd_busy());
  1194                           
  1195  05F3  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1196  05F8  3A00               	xorlw	0
  1197  05F9  1D03               	skipz
  1198  05FA  2DFC               	goto	u651
  1199  05FB  2DFD               	goto	u650
  1200  05FC                     u651:
  1201  05FC  2DF3               	goto	l1327
  1202  05FD                     u650:
  1203  05FD  2E1F               	goto	l1335
  1204  05FE                     l1329:
  1205                           
  1206                           ;bai_2.c: 29:         lcd_put_byte(1, character[i]);
  1207  05FE  0877               	movf	addCharSpecial@i,w
  1208  05FF  0779               	addwf	addCharSpecial@character,w
  1209  0600  0084               	movwf	4
  1210  0601  120A  118A  2003  120A  118A  	fcall	stringdir
  1211  0606  00F6               	movwf	??_addCharSpecial
  1212  0607  0876               	movf	??_addCharSpecial,w
  1213  0608  00F3               	movwf	lcd_put_byte@b
  1214  0609  3001               	movlw	1
  1215  060A  120A  118A  2569  120A  118A  	fcall	_lcd_put_byte
  1216  060F                     l1331:	
  1217                           ;bai_2.c: 30:         while(lcd_busy());
  1218                           
  1219  060F  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1220  0614  3A00               	xorlw	0
  1221  0615  1D03               	skipz
  1222  0616  2E18               	goto	u661
  1223  0617  2E19               	goto	u660
  1224  0618                     u661:
  1225  0618  2E0F               	goto	l1331
  1226  0619                     u660:
  1227  0619                     l1333:
  1228                           
  1229                           ;bai_2.c: 31:         i++;
  1230  0619  3001               	movlw	1
  1231  061A  07F7               	addwf	addCharSpecial@i,f
  1232  061B  1803               	skipnc
  1233  061C  0AF8               	incf	addCharSpecial@i+1,f
  1234  061D  3000               	movlw	0
  1235  061E  07F8               	addwf	addCharSpecial@i+1,f
  1236  061F                     l1335:
  1237                           
  1238                           ;bai_2.c: 28:     while(character[i] != 0x99) {
  1239  061F  0877               	movf	addCharSpecial@i,w
  1240  0620  0779               	addwf	addCharSpecial@character,w
  1241  0621  0084               	movwf	4
  1242  0622  120A  118A  2003  120A  118A  	fcall	stringdir
  1243  0627  3A99               	xorlw	153
  1244  0628  1D03               	skipz
  1245  0629  2E2B               	goto	u671
  1246  062A  2E2C               	goto	u670
  1247  062B                     u671:
  1248  062B  2DFE               	goto	l1329
  1249  062C                     u670:
  1250  062C                     l83:
  1251  062C  0008               	return
  1252  062D                     __end_of_addCharSpecial:
  1253                           
  1254                           	psect	text5
  1255  04CF                     __ptext5:	
  1256 ;; *************** function _contentConfigPwm_2 *****************
  1257 ;; Defined at:
  1258 ;;		line 82 in file "bai_2.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0
  1275 ;;      Totals:         0       0       0       0       0
  1276 ;;Total ram usage:        0 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 5
  1279 ;; This function calls:
  1280 ;;		_lcd_gotoxy
  1281 ;;		_lcd_init
  1282 ;;		_lcd_puts
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           
  1289                           ;psect for function _contentConfigPwm_2
  1290  04CF                     _contentConfigPwm_2:
  1291  04CF                     l1429:	
  1292                           ;incstack = 0
  1293                           ; Regs used in _contentConfigPwm_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1294                           
  1295                           
  1296                           ;bai_2.c: 83:     lcd_init();
  1297  04CF  120A  118A  2759  120A  118A  	fcall	_lcd_init
  1298                           
  1299                           ;bai_2.c: 84:     lcd_gotoxy(5, 0);
  1300  04D4  01F6               	clrf	lcd_gotoxy@row
  1301  04D5  3005               	movlw	5
  1302  04D6  120A  118A  2513  120A  118A  	fcall	_lcd_gotoxy
  1303  04DB                     l1431:
  1304                           
  1305                           ;bai_2.c: 85:     lcd_puts("f=3KHz");
  1306  04DB  3043               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1307  04DC  120A  118A  24F0  120A  118A  	fcall	_lcd_puts
  1308  04E1                     l1433:
  1309                           
  1310                           ;bai_2.c: 86:     lcd_gotoxy(5, 1);
  1311  04E1  01F6               	clrf	lcd_gotoxy@row
  1312  04E2  0AF6               	incf	lcd_gotoxy@row,f
  1313  04E3  3005               	movlw	5
  1314  04E4  120A  118A  2513  120A  118A  	fcall	_lcd_gotoxy
  1315                           
  1316                           ;bai_2.c: 87:     lcd_puts("D=80%");
  1317  04E9  3057               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1318  04EA  120A  118A  24F0  120A  118A  	fcall	_lcd_puts
  1319  04EF                     l111:
  1320  04EF  0008               	return
  1321  04F0                     __end_of_contentConfigPwm_2:
  1322                           
  1323                           	psect	text6
  1324  04AE                     __ptext6:	
  1325 ;; *************** function _contentConfigPwm_1 *****************
  1326 ;; Defined at:
  1327 ;;		line 74 in file "bai_2.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         0       0       0       0       0
  1342 ;;      Locals:         0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0
  1344 ;;      Totals:         0       0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 5
  1348 ;; This function calls:
  1349 ;;		_lcd_gotoxy
  1350 ;;		_lcd_init
  1351 ;;		_lcd_puts
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _contentConfigPwm_1
  1359  04AE                     _contentConfigPwm_1:
  1360  04AE                     l1423:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _contentConfigPwm_1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1363                           
  1364                           
  1365                           ;bai_2.c: 75:     lcd_init();
  1366  04AE  120A  118A  2759  120A  118A  	fcall	_lcd_init
  1367                           
  1368                           ;bai_2.c: 76:     lcd_gotoxy(5, 0);
  1369  04B3  01F6               	clrf	lcd_gotoxy@row
  1370  04B4  3005               	movlw	5
  1371  04B5  120A  118A  2513  120A  118A  	fcall	_lcd_gotoxy
  1372  04BA                     l1425:
  1373                           
  1374                           ;bai_2.c: 77:     lcd_puts("f=4KHz");
  1375  04BA  304A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1376  04BB  120A  118A  24F0  120A  118A  	fcall	_lcd_puts
  1377  04C0                     l1427:
  1378                           
  1379                           ;bai_2.c: 78:     lcd_gotoxy(5, 1);
  1380  04C0  01F6               	clrf	lcd_gotoxy@row
  1381  04C1  0AF6               	incf	lcd_gotoxy@row,f
  1382  04C2  3005               	movlw	5
  1383  04C3  120A  118A  2513  120A  118A  	fcall	_lcd_gotoxy
  1384                           
  1385                           ;bai_2.c: 79:     lcd_puts("D=30%");
  1386  04C8  3051               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1387  04C9  120A  118A  24F0  120A  118A  	fcall	_lcd_puts
  1388  04CE                     l108:
  1389  04CE  0008               	return
  1390  04CF                     __end_of_contentConfigPwm_1:
  1391                           
  1392                           	psect	text7
  1393  04F0                     __ptext7:	
  1394 ;; *************** function _lcd_puts *****************
  1395 ;; Defined at:
  1396 ;;		line 224 in file "lcd.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  s               1    wreg     PTR const unsigned char 
  1399 ;;		 -> STR_4(6), STR_3(7), STR_2(6), STR_1(7), 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  1402 ;;		 -> STR_4(6), STR_3(7), STR_2(6), STR_1(7), 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         0       1       0       0       0
  1414 ;;      Temps:          1       0       0       0       0
  1415 ;;      Totals:         1       1       0       0       0
  1416 ;;Total ram usage:        2 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 4
  1419 ;; This function calls:
  1420 ;;		_lcd_putc
  1421 ;; This function is called by:
  1422 ;;		_contentConfigPwm_1
  1423 ;;		_contentConfigPwm_2
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           
  1428                           ;psect for function _lcd_puts
  1429  04F0                     _lcd_puts:
  1430                           
  1431                           ;incstack = 0
  1432                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1433                           ;lcd_puts@s stored from wreg
  1434  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  1435  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  1436  04F2  00A0               	movwf	lcd_puts@s
  1437  04F3                     l1387:
  1438                           
  1439                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  1440  04F3  2D06               	goto	l1393
  1441  04F4                     l1389:
  1442                           
  1443                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  1444  04F4  0820               	movf	lcd_puts@s,w
  1445  04F5  0084               	movwf	4
  1446  04F6  120A  118A  2003  120A  118A  	fcall	stringdir
  1447  04FB  120A  118A  267E  120A  118A  	fcall	_lcd_putc
  1448  0500                     l1391:
  1449  0500  3001               	movlw	1
  1450  0501  00FD               	movwf	??_lcd_puts
  1451  0502  087D               	movf	??_lcd_puts,w
  1452  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0505  07A0               	addwf	lcd_puts@s,f
  1455  0506                     l1393:
  1456                           
  1457                           ;lcd.c: 229:  while(*s)
  1458  0506  0820               	movf	lcd_puts@s,w
  1459  0507  0084               	movwf	4
  1460  0508  120A  118A  2003  120A  118A  	fcall	stringdir
  1461  050D  3A00               	xorlw	0
  1462  050E  1D03               	skipz
  1463  050F  2D11               	goto	u741
  1464  0510  2D12               	goto	u740
  1465  0511                     u741:
  1466  0511  2CF4               	goto	l1389
  1467  0512                     u740:
  1468  0512                     l220:
  1469  0512  0008               	return
  1470  0513                     __end_of_lcd_puts:
  1471                           
  1472                           	psect	text8
  1473  067E                     __ptext8:	
  1474 ;; *************** function _lcd_putc *****************
  1475 ;; Defined at:
  1476 ;;		line 190 in file "lcd.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  c               1    wreg     unsigned char 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  c               1   12[COMMON] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         0       0       0       0       0
  1491 ;;      Locals:         1       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0
  1493 ;;      Totals:         3       0       0       0       0
  1494 ;;Total ram usage:        3 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 3
  1497 ;; This function calls:
  1498 ;;		_lcd_busy
  1499 ;;		_lcd_gotoxy
  1500 ;;		_lcd_put_byte
  1501 ;; This function is called by:
  1502 ;;		_contentStop
  1503 ;;		_lcd_puts
  1504 ;;		_lcd_String_Delay
  1505 ;;		_putch
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function _lcd_putc
  1511  067E                     _lcd_putc:
  1512                           
  1513                           ;incstack = 0
  1514                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1515                           ;lcd_putc@c stored from wreg
  1516  067E  00FC               	movwf	lcd_putc@c
  1517  067F                     l1301:
  1518                           
  1519                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1520  067F  2EC6               	goto	l1317
  1521  0680                     l1303:
  1522                           
  1523                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1524  0680  01F3               	clrf	lcd_put_byte@b
  1525  0681  0AF3               	incf	lcd_put_byte@b,f
  1526  0682  3000               	movlw	0
  1527  0683  120A  118A  2569  120A  118A  	fcall	_lcd_put_byte
  1528  0688                     l1305:	
  1529                           ;lcd.c: 199:    while(lcd_busy());
  1530                           
  1531  0688  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1532  068D  3A00               	xorlw	0
  1533  068E  1D03               	skipz
  1534  068F  2E91               	goto	u621
  1535  0690  2E92               	goto	u620
  1536  0691                     u621:
  1537  0691  2E88               	goto	l1305
  1538  0692                     u620:
  1539  0692  2ED9               	goto	l214
  1540  0693                     l1307:
  1541                           
  1542                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1543  0693  01F6               	clrf	lcd_gotoxy@row
  1544  0694  0AF6               	incf	lcd_gotoxy@row,f
  1545  0695  3000               	movlw	0
  1546  0696  120A  118A  2513  120A  118A  	fcall	_lcd_gotoxy
  1547                           
  1548                           ;lcd.c: 203:    break;
  1549  069B  2ED9               	goto	l214
  1550  069C                     l1309:
  1551                           
  1552                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1553  069C  3010               	movlw	16
  1554  069D  00FA               	movwf	??_lcd_putc
  1555  069E  087A               	movf	??_lcd_putc,w
  1556  069F  00F3               	movwf	lcd_put_byte@b
  1557  06A0  3000               	movlw	0
  1558  06A1  120A  118A  2569  120A  118A  	fcall	_lcd_put_byte
  1559  06A6                     l1311:	
  1560                           ;lcd.c: 206:    while(lcd_busy());
  1561                           
  1562  06A6  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1563  06AB  3A00               	xorlw	0
  1564  06AC  1D03               	skipz
  1565  06AD  2EAF               	goto	u631
  1566  06AE  2EB0               	goto	u630
  1567  06AF                     u631:
  1568  06AF  2EA6               	goto	l1311
  1569  06B0                     u630:
  1570  06B0  2ED9               	goto	l214
  1571  06B1                     l1313:
  1572                           
  1573                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1574  06B1  087C               	movf	lcd_putc@c,w
  1575  06B2  00FA               	movwf	??_lcd_putc
  1576  06B3  087A               	movf	??_lcd_putc,w
  1577  06B4  00F3               	movwf	lcd_put_byte@b
  1578  06B5  3001               	movlw	1
  1579  06B6  120A  118A  2569  120A  118A  	fcall	_lcd_put_byte
  1580  06BB                     l1315:	
  1581                           ;lcd.c: 212:     while(lcd_busy());
  1582                           
  1583  06BB  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1584  06C0  3A00               	xorlw	0
  1585  06C1  1D03               	skipz
  1586  06C2  2EC4               	goto	u641
  1587  06C3  2EC5               	goto	u640
  1588  06C4                     u641:
  1589  06C4  2EBB               	goto	l1315
  1590  06C5                     u640:
  1591  06C5  2ED9               	goto	l214
  1592  06C6                     l1317:
  1593  06C6  087C               	movf	lcd_putc@c,w
  1594  06C7  00FA               	movwf	??_lcd_putc
  1595  06C8  01FB               	clrf	??_lcd_putc+1
  1596                           
  1597                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1598                           ; Switch size 1, requested type "simple"
  1599                           ; Number of cases is 1, Range of values is 0 to 0
  1600                           ; switch strategies available:
  1601                           ; Name         Instructions Cycles
  1602                           ; simple_byte            4     3 (average)
  1603                           ; direct_byte           11     8 (fixed)
  1604                           ; jumptable            260     6 (fixed)
  1605                           ;	Chosen strategy is simple_byte
  1606  06C9  087B               	movf	??_lcd_putc+1,w
  1607  06CA  3A00               	xorlw	0	; case 0
  1608  06CB  1903               	skipnz
  1609  06CC  2ECE               	goto	l1509
  1610  06CD  2EB1               	goto	l1313
  1611  06CE                     l1509:
  1612                           
  1613                           ; Switch size 1, requested type "simple"
  1614                           ; Number of cases is 3, Range of values is 8 to 12
  1615                           ; switch strategies available:
  1616                           ; Name         Instructions Cycles
  1617                           ; simple_byte           10     6 (average)
  1618                           ; direct_byte           26    11 (fixed)
  1619                           ; jumptable            263     9 (fixed)
  1620                           ;	Chosen strategy is simple_byte
  1621  06CE  087A               	movf	??_lcd_putc,w
  1622  06CF  3A08               	xorlw	8	; case 8
  1623  06D0  1903               	skipnz
  1624  06D1  2E9C               	goto	l1309
  1625  06D2  3A02               	xorlw	2	; case 10
  1626  06D3  1903               	skipnz
  1627  06D4  2E93               	goto	l1307
  1628  06D5  3A06               	xorlw	6	; case 12
  1629  06D6  1903               	skipnz
  1630  06D7  2E80               	goto	l1303
  1631  06D8  2EB1               	goto	l1313
  1632  06D9                     l214:
  1633  06D9  0008               	return
  1634  06DA                     __end_of_lcd_putc:
  1635                           
  1636                           	psect	text9
  1637  0513                     __ptext9:	
  1638 ;; *************** function _lcd_gotoxy *****************
  1639 ;; Defined at:
  1640 ;;		line 167 in file "lcd.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  col             1    wreg     unsigned char 
  1643 ;;  row             1    6[COMMON] unsigned char 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  col             1    8[COMMON] unsigned char 
  1646 ;;  address         1    9[COMMON] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, pclath, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1656 ;;      Params:         1       0       0       0       0
  1657 ;;      Locals:         2       0       0       0       0
  1658 ;;      Temps:          1       0       0       0       0
  1659 ;;      Totals:         4       0       0       0       0
  1660 ;;Total ram usage:        4 bytes
  1661 ;; Hardware stack levels used: 1
  1662 ;; Hardware stack levels required when called: 2
  1663 ;; This function calls:
  1664 ;;		_lcd_busy
  1665 ;;		_lcd_put_byte
  1666 ;; This function is called by:
  1667 ;;		_contentStop
  1668 ;;		_contentConfigPwm_1
  1669 ;;		_contentConfigPwm_2
  1670 ;;		_lcd_putc
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function _lcd_gotoxy
  1676  0513                     _lcd_gotoxy:
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1680                           ;lcd_gotoxy@col stored from wreg
  1681  0513  00F8               	movwf	lcd_gotoxy@col
  1682  0514                     l1289:
  1683                           
  1684                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1685  0514  0876               	movf	lcd_gotoxy@row,w
  1686  0515  1903               	btfsc	3,2
  1687  0516  2D18               	goto	u601
  1688  0517  2D19               	goto	u600
  1689  0518                     u601:
  1690  0518  2D1E               	goto	l1293
  1691  0519                     u600:
  1692  0519                     l1291:
  1693                           
  1694                           ;lcd.c: 174:   address=0x40;
  1695  0519  3040               	movlw	64
  1696  051A  00F7               	movwf	??_lcd_gotoxy
  1697  051B  0877               	movf	??_lcd_gotoxy,w
  1698  051C  00F9               	movwf	lcd_gotoxy@address
  1699  051D  2D1F               	goto	l1295
  1700  051E                     l1293:
  1701                           
  1702                           ;lcd.c: 176:   address=0;
  1703  051E  01F9               	clrf	lcd_gotoxy@address
  1704  051F                     l1295:
  1705                           
  1706                           ;lcd.c: 178:  address += col;
  1707  051F  0878               	movf	lcd_gotoxy@col,w
  1708  0520  00F7               	movwf	??_lcd_gotoxy
  1709  0521  0877               	movf	??_lcd_gotoxy,w
  1710  0522  07F9               	addwf	lcd_gotoxy@address,f
  1711  0523                     l1297:
  1712                           
  1713                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1714  0523  0879               	movf	lcd_gotoxy@address,w
  1715  0524  3880               	iorlw	128
  1716  0525  00F7               	movwf	??_lcd_gotoxy
  1717  0526  0877               	movf	??_lcd_gotoxy,w
  1718  0527  00F3               	movwf	lcd_put_byte@b
  1719  0528  3000               	movlw	0
  1720  0529  120A  118A  2569  120A  118A  	fcall	_lcd_put_byte
  1721  052E                     l1299:	
  1722                           ;lcd.c: 181:  while(lcd_busy());
  1723                           
  1724  052E  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1725  0533  3A00               	xorlw	0
  1726  0534  1D03               	skipz
  1727  0535  2D37               	goto	u611
  1728  0536  2D38               	goto	u610
  1729  0537                     u611:
  1730  0537  2D2E               	goto	l1299
  1731  0538                     u610:
  1732  0538                     l196:
  1733  0538  0008               	return
  1734  0539                     __end_of_lcd_gotoxy:
  1735                           
  1736                           	psect	text10
  1737  0759                     __ptext10:	
  1738 ;; *************** function _lcd_init *****************
  1739 ;; Defined at:
  1740 ;;		line 241 in file "lcd.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  i               1    0        unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0, pclath, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1754 ;;      Params:         0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0
  1756 ;;      Temps:          2       0       0       0       0
  1757 ;;      Totals:         2       0       0       0       0
  1758 ;;Total ram usage:        2 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 2
  1761 ;; This function calls:
  1762 ;;		_lcd_busy
  1763 ;;		_lcd_put_byte
  1764 ;;		_lcd_put_nibble
  1765 ;; This function is called by:
  1766 ;;		_contentStop
  1767 ;;		_contentConfigPwm_1
  1768 ;;		_contentConfigPwm_2
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           
  1773                           ;psect for function _lcd_init
  1774  0759                     _lcd_init:
  1775  0759                     l1349:	
  1776                           ;incstack = 0
  1777                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1778                           
  1779                           
  1780                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1781  0759  1683               	bsf	3,5	;RP0=1, select bank1
  1782  075A  1303               	bcf	3,6	;RP1=0, select bank1
  1783  075B  1188               	bcf	8,3	;volatile
  1784                           
  1785                           ;lcd.c: 248:  TRISD1 = 0;
  1786  075C  1088               	bcf	8,1	;volatile
  1787                           
  1788                           ;lcd.c: 249:  TRISD2 = 0;
  1789  075D  1108               	bcf	8,2	;volatile
  1790                           
  1791                           ;lcd.c: 250:  TRISD4 = 0;
  1792  075E  1208               	bcf	8,4	;volatile
  1793                           
  1794                           ;lcd.c: 251:  TRISD5 = 0;
  1795  075F  1288               	bcf	8,5	;volatile
  1796                           
  1797                           ;lcd.c: 252:  TRISD6 = 0;
  1798  0760  1308               	bcf	8,6	;volatile
  1799                           
  1800                           ;lcd.c: 253:  TRISD7 = 0;
  1801  0761  1388               	bcf	8,7	;volatile
  1802  0762                     l1351:
  1803                           
  1804                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1805  0762  3014               	movlw	20
  1806  0763  00F7               	movwf	??_lcd_init+1
  1807  0764  3079               	movlw	121
  1808  0765  00F6               	movwf	??_lcd_init
  1809  0766                     u887:
  1810  0766  0BF6               	decfsz	??_lcd_init,f
  1811  0767  2F66               	goto	u887
  1812  0768  0BF7               	decfsz	??_lcd_init+1,f
  1813  0769  2F66               	goto	u887
  1814  076A  2F6B               	nop2
  1815  076B                     l1353:
  1816                           
  1817                           ;lcd.c: 257:  RD1 = 0;
  1818  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1819  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1820  076D  1088               	bcf	8,1	;volatile
  1821  076E                     l1355:
  1822                           
  1823                           ;lcd.c: 258:  RD2 = 0;
  1824  076E  1108               	bcf	8,2	;volatile
  1825  076F                     l1357:
  1826                           
  1827                           ;lcd.c: 259:  RD3 = 0;
  1828  076F  1188               	bcf	8,3	;volatile
  1829  0770                     l1359:
  1830                           
  1831                           ;lcd.c: 261:  lcd_put_nibble(3);
  1832  0770  3003               	movlw	3
  1833  0771  120A  118A  25A2  120A  118A  	fcall	_lcd_put_nibble
  1834  0776                     l1361:
  1835                           
  1836                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1837  0776  300D               	movlw	13
  1838  0777  00F7               	movwf	??_lcd_init+1
  1839  0778  30FB               	movlw	251
  1840  0779  00F6               	movwf	??_lcd_init
  1841  077A                     u897:
  1842  077A  0BF6               	decfsz	??_lcd_init,f
  1843  077B  2F7A               	goto	u897
  1844  077C  0BF7               	decfsz	??_lcd_init+1,f
  1845  077D  2F7A               	goto	u897
  1846  077E  2F7F               	nop2
  1847                           
  1848                           ;lcd.c: 263:  lcd_put_nibble(3);
  1849  077F  3003               	movlw	3
  1850  0780  120A  118A  25A2  120A  118A  	fcall	_lcd_put_nibble
  1851  0785                     l1363:
  1852                           
  1853                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1854  0785  300D               	movlw	13
  1855  0786  00F7               	movwf	??_lcd_init+1
  1856  0787  30FB               	movlw	251
  1857  0788  00F6               	movwf	??_lcd_init
  1858  0789                     u907:
  1859  0789  0BF6               	decfsz	??_lcd_init,f
  1860  078A  2F89               	goto	u907
  1861  078B  0BF7               	decfsz	??_lcd_init+1,f
  1862  078C  2F89               	goto	u907
  1863  078D  2F8E               	nop2
  1864  078E                     l1365:
  1865                           
  1866                           ;lcd.c: 265:  lcd_put_nibble(3);
  1867  078E  3003               	movlw	3
  1868  078F  120A  118A  25A2  120A  118A  	fcall	_lcd_put_nibble
  1869                           
  1870                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1871  0794  300D               	movlw	13
  1872  0795  00F7               	movwf	??_lcd_init+1
  1873  0796  30FB               	movlw	251
  1874  0797  00F6               	movwf	??_lcd_init
  1875  0798                     u917:
  1876  0798  0BF6               	decfsz	??_lcd_init,f
  1877  0799  2F98               	goto	u917
  1878  079A  0BF7               	decfsz	??_lcd_init+1,f
  1879  079B  2F98               	goto	u917
  1880  079C  2F9D               	nop2
  1881  079D                     l1367:
  1882                           
  1883                           ;lcd.c: 268:  lcd_put_nibble(2);
  1884  079D  3002               	movlw	2
  1885  079E  120A  118A  25A2  120A  118A  	fcall	_lcd_put_nibble
  1886  07A3                     l1369:	
  1887                           ;lcd.c: 269:  while(lcd_busy());
  1888                           
  1889  07A3  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1890  07A8  3A00               	xorlw	0
  1891  07A9  1D03               	skipz
  1892  07AA  2FAC               	goto	u691
  1893  07AB  2FAD               	goto	u690
  1894  07AC                     u691:
  1895  07AC  2FA3               	goto	l1369
  1896  07AD                     u690:
  1897  07AD                     l1371:
  1898                           
  1899                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1900  07AD  3028               	movlw	40
  1901  07AE  00F6               	movwf	??_lcd_init
  1902  07AF  0876               	movf	??_lcd_init,w
  1903  07B0  00F3               	movwf	lcd_put_byte@b
  1904  07B1  3000               	movlw	0
  1905  07B2  120A  118A  2569  120A  118A  	fcall	_lcd_put_byte
  1906  07B7                     l1373:	
  1907                           ;lcd.c: 272:  while(lcd_busy());
  1908                           
  1909  07B7  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1910  07BC  3A00               	xorlw	0
  1911  07BD  1D03               	skipz
  1912  07BE  2FC0               	goto	u701
  1913  07BF  2FC1               	goto	u700
  1914  07C0                     u701:
  1915  07C0  2FB7               	goto	l1373
  1916  07C1                     u700:
  1917  07C1                     l1375:
  1918                           
  1919                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1920  07C1  300C               	movlw	12
  1921  07C2  00F6               	movwf	??_lcd_init
  1922  07C3  0876               	movf	??_lcd_init,w
  1923  07C4  00F3               	movwf	lcd_put_byte@b
  1924  07C5  3000               	movlw	0
  1925  07C6  120A  118A  2569  120A  118A  	fcall	_lcd_put_byte
  1926  07CB                     l1377:	
  1927                           ;lcd.c: 275:  while(lcd_busy());
  1928                           
  1929  07CB  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1930  07D0  3A00               	xorlw	0
  1931  07D1  1D03               	skipz
  1932  07D2  2FD4               	goto	u711
  1933  07D3  2FD5               	goto	u710
  1934  07D4                     u711:
  1935  07D4  2FCB               	goto	l1377
  1936  07D5                     u710:
  1937  07D5                     l1379:
  1938                           
  1939                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1940  07D5  01F3               	clrf	lcd_put_byte@b
  1941  07D6  0AF3               	incf	lcd_put_byte@b,f
  1942  07D7  3000               	movlw	0
  1943  07D8  120A  118A  2569  120A  118A  	fcall	_lcd_put_byte
  1944  07DD                     l1381:	
  1945                           ;lcd.c: 278:  while(lcd_busy());
  1946                           
  1947  07DD  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1948  07E2  3A00               	xorlw	0
  1949  07E3  1D03               	skipz
  1950  07E4  2FE6               	goto	u721
  1951  07E5  2FE7               	goto	u720
  1952  07E6                     u721:
  1953  07E6  2FDD               	goto	l1381
  1954  07E7                     u720:
  1955  07E7                     l1383:
  1956                           
  1957                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1958  07E7  3006               	movlw	6
  1959  07E8  00F6               	movwf	??_lcd_init
  1960  07E9  0876               	movf	??_lcd_init,w
  1961  07EA  00F3               	movwf	lcd_put_byte@b
  1962  07EB  3000               	movlw	0
  1963  07EC  120A  118A  2569  120A  118A  	fcall	_lcd_put_byte
  1964  07F1                     l1385:	
  1965                           ;lcd.c: 281:  while(lcd_busy());
  1966                           
  1967  07F1  120A  118A  2539  120A  118A  	fcall	_lcd_busy
  1968  07F6  3A00               	xorlw	0
  1969  07F7  1D03               	skipz
  1970  07F8  2FFA               	goto	u731
  1971  07F9  2FFB               	goto	u730
  1972  07FA                     u731:
  1973  07FA  2FF1               	goto	l1385
  1974  07FB                     u730:
  1975  07FB                     l238:
  1976  07FB  0008               	return
  1977  07FC                     __end_of_lcd_init:
  1978                           
  1979                           	psect	text11
  1980  0569                     __ptext11:	
  1981 ;; *************** function _lcd_put_byte *****************
  1982 ;; Defined at:
  1983 ;;		line 134 in file "lcd.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  rs              1    wreg     unsigned char 
  1986 ;;  b               1    3[COMMON] unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  rs              1    5[COMMON] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         1       0       0       0       0
  1999 ;;      Locals:         1       0       0       0       0
  2000 ;;      Temps:          1       0       0       0       0
  2001 ;;      Totals:         3       0       0       0       0
  2002 ;;Total ram usage:        3 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 1
  2005 ;; This function calls:
  2006 ;;		_lcd_put_nibble
  2007 ;; This function is called by:
  2008 ;;		_addCharSpecial
  2009 ;;		_lcd_gotoxy
  2010 ;;		_lcd_putc
  2011 ;;		_lcd_init
  2012 ;;		_lcd_ShiftLeft
  2013 ;;		_lcd_ShiftRight
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           
  2018                           ;psect for function _lcd_put_byte
  2019  0569                     _lcd_put_byte:
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  2023                           ;lcd_put_byte@rs stored from wreg
  2024  0569  00F5               	movwf	lcd_put_byte@rs
  2025  056A                     l1251:
  2026                           
  2027                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  2028  056A  1683               	bsf	3,5	;RP0=1, select bank1
  2029  056B  1303               	bcf	3,6	;RP1=0, select bank1
  2030  056C  1208               	bcf	8,4	;volatile
  2031                           
  2032                           ;lcd.c: 140:  TRISD5 = 0;
  2033  056D  1288               	bcf	8,5	;volatile
  2034                           
  2035                           ;lcd.c: 141:  TRISD6 = 0;
  2036  056E  1308               	bcf	8,6	;volatile
  2037                           
  2038                           ;lcd.c: 142:  TRISD7 = 0;
  2039  056F  1388               	bcf	8,7	;volatile
  2040  0570                     l1253:
  2041                           
  2042                           ;lcd.c: 144:  if(rs)
  2043  0570  0875               	movf	lcd_put_byte@rs,w
  2044  0571  1903               	btfsc	3,2
  2045  0572  2D74               	goto	u581
  2046  0573  2D75               	goto	u580
  2047  0574                     u581:
  2048  0574  2D79               	goto	l186
  2049  0575                     u580:
  2050  0575                     l1255:
  2051                           
  2052                           ;lcd.c: 145:   RD1 = 1;
  2053  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0577  1488               	bsf	8,1	;volatile
  2056  0578  2D7C               	goto	l1257
  2057  0579                     l186:	
  2058                           ;lcd.c: 146:  else
  2059                           
  2060                           
  2061                           ;lcd.c: 147:   RD1 = 0;
  2062  0579  1283               	bcf	3,5	;RP0=0, select bank0
  2063  057A  1303               	bcf	3,6	;RP1=0, select bank0
  2064  057B  1088               	bcf	8,1	;volatile
  2065  057C                     l1257:
  2066                           
  2067                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2068  057C  3006               	movlw	6
  2069  057D  00F4               	movwf	??_lcd_put_byte
  2070  057E                     u927:
  2071  057E  0BF4               	decfsz	??_lcd_put_byte,f
  2072  057F  2D7E               	goto	u927
  2073  0580  0000               	nop
  2074  0581                     l1259:
  2075                           
  2076                           ;lcd.c: 150:  RD2 = 0;
  2077  0581  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0582  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0583  1108               	bcf	8,2	;volatile
  2080                           
  2081                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2082  0584  3006               	movlw	6
  2083  0585  00F4               	movwf	??_lcd_put_byte
  2084  0586                     u937:
  2085  0586  0BF4               	decfsz	??_lcd_put_byte,f
  2086  0587  2D86               	goto	u937
  2087  0588  0000               	nop
  2088  0589                     l1261:
  2089                           
  2090                           ;lcd.c: 153:  RD3 = 0;
  2091  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2092  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2093  058B  1188               	bcf	8,3	;volatile
  2094  058C                     l1263:
  2095                           
  2096                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  2097  058C  0873               	movf	lcd_put_byte@b,w
  2098  058D  00F4               	movwf	??_lcd_put_byte
  2099  058E  3004               	movlw	4
  2100  058F                     u595:
  2101  058F  1003               	clrc
  2102  0590  0CF4               	rrf	??_lcd_put_byte,f
  2103  0591  3EFF               	addlw	-1
  2104  0592  1D03               	skipz
  2105  0593  2D8F               	goto	u595
  2106  0594  0874               	movf	??_lcd_put_byte,w
  2107  0595  120A  118A  25A2  120A  118A  	fcall	_lcd_put_nibble
  2108  059A                     l1265:
  2109                           
  2110                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  2111  059A  0873               	movf	lcd_put_byte@b,w
  2112  059B  390F               	andlw	15
  2113  059C  120A  118A  25A2  120A  118A  	fcall	_lcd_put_nibble
  2114  05A1                     l188:
  2115  05A1  0008               	return
  2116  05A2                     __end_of_lcd_put_byte:
  2117                           
  2118                           	psect	text12
  2119  05A2                     __ptext12:	
  2120 ;; *************** function _lcd_put_nibble *****************
  2121 ;; Defined at:
  2122 ;;		line 103 in file "lcd.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  b               1    wreg     unsigned char 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  b               1    1[COMMON] unsigned char 
  2127 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         0       0       0       0       0
  2138 ;;      Locals:         2       0       0       0       0
  2139 ;;      Temps:          1       0       0       0       0
  2140 ;;      Totals:         3       0       0       0       0
  2141 ;;Total ram usage:        3 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_lcd_put_byte
  2147 ;;		_lcd_init
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function _lcd_put_nibble
  2153  05A2                     _lcd_put_nibble:
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _lcd_put_nibble: [wreg]
  2157                           ;lcd_put_nibble@b stored from wreg
  2158  05A2  00F1               	movwf	lcd_put_nibble@b
  2159  05A3                     l1235:
  2160                           
  2161                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  2162  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  2163  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  2164  05A5  1208               	bcf	8,4	;volatile
  2165                           
  2166                           ;lcd.c: 110:  TRISD5 = 0;
  2167  05A6  1288               	bcf	8,5	;volatile
  2168                           
  2169                           ;lcd.c: 111:  TRISD6 = 0;
  2170  05A7  1308               	bcf	8,6	;volatile
  2171                           
  2172                           ;lcd.c: 112:  TRISD7 = 0;
  2173  05A8  1388               	bcf	8,7	;volatile
  2174  05A9                     l1237:
  2175                           
  2176                           ;lcd.c: 114:  temp.Val = b;
  2177  05A9  0871               	movf	lcd_put_nibble@b,w
  2178  05AA  00F0               	movwf	??_lcd_put_nibble
  2179  05AB  0870               	movf	??_lcd_put_nibble,w
  2180  05AC  00F2               	movwf	lcd_put_nibble@temp
  2181  05AD                     l1239:
  2182                           
  2183                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2184  05AD  1872               	btfsc	lcd_put_nibble@temp,0
  2185  05AE  2DB0               	goto	u501
  2186  05AF  2DB4               	goto	u500
  2187  05B0                     u501:
  2188  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2189  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2190  05B2  1608               	bsf	8,4	;volatile
  2191  05B3  2DB7               	goto	u514
  2192  05B4                     u500:
  2193  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2194  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  2195  05B6  1208               	bcf	8,4	;volatile
  2196  05B7                     u514:
  2197  05B7                     l1241:
  2198                           
  2199                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2200  05B7  18F2               	btfsc	lcd_put_nibble@temp,1
  2201  05B8  2DBA               	goto	u521
  2202  05B9  2DBE               	goto	u520
  2203  05BA                     u521:
  2204  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2205  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2206  05BC  1688               	bsf	8,5	;volatile
  2207  05BD  2DC1               	goto	u534
  2208  05BE                     u520:
  2209  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  2210  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  2211  05C0  1288               	bcf	8,5	;volatile
  2212  05C1                     u534:
  2213  05C1                     l1243:
  2214                           
  2215                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2216  05C1  1972               	btfsc	lcd_put_nibble@temp,2
  2217  05C2  2DC4               	goto	u541
  2218  05C3  2DC8               	goto	u540
  2219  05C4                     u541:
  2220  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  2221  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  2222  05C6  1708               	bsf	8,6	;volatile
  2223  05C7  2DCB               	goto	u554
  2224  05C8                     u540:
  2225  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2226  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2227  05CA  1308               	bcf	8,6	;volatile
  2228  05CB                     u554:
  2229  05CB                     l1245:
  2230                           
  2231                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2232  05CB  19F2               	btfsc	lcd_put_nibble@temp,3
  2233  05CC  2DCE               	goto	u561
  2234  05CD  2DD2               	goto	u560
  2235  05CE                     u561:
  2236  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  2237  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  2238  05D0  1788               	bsf	8,7	;volatile
  2239  05D1  2DD5               	goto	u574
  2240  05D2                     u560:
  2241  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  2242  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  2243  05D4  1388               	bcf	8,7	;volatile
  2244  05D5                     u574:
  2245                           
  2246                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2247  05D5  3006               	movlw	6
  2248  05D6  00F0               	movwf	??_lcd_put_nibble
  2249  05D7                     u947:
  2250  05D7  0BF0               	decfsz	??_lcd_put_nibble,f
  2251  05D8  2DD7               	goto	u947
  2252  05D9  0000               	nop
  2253  05DA                     l1247:
  2254                           
  2255                           ;lcd.c: 122:  RD3 = 1;
  2256  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  2257  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  2258  05DC  1588               	bsf	8,3	;volatile
  2259                           
  2260                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2261  05DD  3006               	movlw	6
  2262  05DE  00F0               	movwf	??_lcd_put_nibble
  2263  05DF                     u957:
  2264  05DF  0BF0               	decfsz	??_lcd_put_nibble,f
  2265  05E0  2DDF               	goto	u957
  2266  05E1  0000               	nop
  2267  05E2                     l1249:
  2268                           
  2269                           ;lcd.c: 124:  RD3 = 0;
  2270  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2271  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2272  05E4  1188               	bcf	8,3	;volatile
  2273  05E5                     l183:
  2274  05E5  0008               	return
  2275  05E6                     __end_of_lcd_put_nibble:
  2276                           
  2277                           	psect	text13
  2278  0539                     __ptext13:	
  2279 ;; *************** function _lcd_busy *****************
  2280 ;; Defined at:
  2281 ;;		line 18 in file "lcd.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  busy            1    1[COMMON] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      unsigned char 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         1       0       0       0       0
  2297 ;;      Temps:          1       0       0       0       0
  2298 ;;      Totals:         2       0       0       0       0
  2299 ;;Total ram usage:        2 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_addCharSpecial
  2305 ;;		_lcd_gotoxy
  2306 ;;		_lcd_putc
  2307 ;;		_lcd_init
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _lcd_busy
  2313  0539                     _lcd_busy:
  2314  0539                     l1267:	
  2315                           ;incstack = 0
  2316                           ; Regs used in _lcd_busy: [wreg+status,2]
  2317                           
  2318                           
  2319                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2320  0539  1683               	bsf	3,5	;RP0=1, select bank1
  2321  053A  1303               	bcf	3,6	;RP1=0, select bank1
  2322  053B  1608               	bsf	8,4	;volatile
  2323                           
  2324                           ;lcd.c: 25:  TRISD5 = 1;
  2325  053C  1688               	bsf	8,5	;volatile
  2326                           
  2327                           ;lcd.c: 26:  TRISD6 = 1;
  2328  053D  1708               	bsf	8,6	;volatile
  2329                           
  2330                           ;lcd.c: 27:  TRISD7 = 1;
  2331  053E  1788               	bsf	8,7	;volatile
  2332                           
  2333                           ;lcd.c: 29:  RD2 = 1;
  2334  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0540  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0541  1508               	bsf	8,2	;volatile
  2337                           
  2338                           ;lcd.c: 30:  RD1 = 0;
  2339  0542  1088               	bcf	8,1	;volatile
  2340  0543                     l1269:
  2341                           
  2342                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2343  0543  3006               	movlw	6
  2344  0544  00F0               	movwf	??_lcd_busy
  2345  0545                     u967:
  2346  0545  0BF0               	decfsz	??_lcd_busy,f
  2347  0546  2D45               	goto	u967
  2348  0547  0000               	nop
  2349  0548                     l1271:
  2350                           
  2351                           ;lcd.c: 32:  RD3 = 1;
  2352  0548  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0549  1303               	bcf	3,6	;RP1=0, select bank0
  2354  054A  1588               	bsf	8,3	;volatile
  2355                           
  2356                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2357  054B  3006               	movlw	6
  2358  054C  00F0               	movwf	??_lcd_busy
  2359  054D                     u977:
  2360  054D  0BF0               	decfsz	??_lcd_busy,f
  2361  054E  2D4D               	goto	u977
  2362  054F  0000               	nop
  2363  0550                     l1273:
  2364                           
  2365                           ;lcd.c: 35:  busy = RD7;
  2366  0550  3000               	movlw	0
  2367  0551  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0552  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0553  1B88               	btfsc	8,7	;volatile
  2370  0554  3001               	movlw	1
  2371  0555  00F1               	movwf	lcd_busy@busy
  2372  0556                     l1275:
  2373                           
  2374                           ;lcd.c: 37:  RD3 = 0;
  2375  0556  1188               	bcf	8,3	;volatile
  2376  0557                     l1277:
  2377                           
  2378                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2379  0557  3006               	movlw	6
  2380  0558  00F0               	movwf	??_lcd_busy
  2381  0559                     u987:
  2382  0559  0BF0               	decfsz	??_lcd_busy,f
  2383  055A  2D59               	goto	u987
  2384  055B  0000               	nop
  2385  055C                     l1279:
  2386                           
  2387                           ;lcd.c: 39:  RD3 = 1;
  2388  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2389  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2390  055E  1588               	bsf	8,3	;volatile
  2391  055F                     l1281:
  2392                           
  2393                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2394  055F  3006               	movlw	6
  2395  0560  00F0               	movwf	??_lcd_busy
  2396  0561                     u997:
  2397  0561  0BF0               	decfsz	??_lcd_busy,f
  2398  0562  2D61               	goto	u997
  2399  0563  0000               	nop
  2400  0564                     l1283:
  2401                           
  2402                           ;lcd.c: 41:  RD3 = 0;
  2403  0564  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0565  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0566  1188               	bcf	8,3	;volatile
  2406  0567                     l1285:
  2407                           
  2408                           ;lcd.c: 43:  return busy;
  2409  0567  0871               	movf	lcd_busy@busy,w
  2410  0568                     l175:
  2411  0568  0008               	return
  2412  0569                     __end_of_lcd_busy:
  2413                           
  2414                           	psect	text14
  2415  0490                     __ptext14:	
  2416 ;; *************** function _configPwm_2 *****************
  2417 ;; Defined at:
  2418 ;;		line 107 in file "bai_2.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         0       0       0       0       0
  2434 ;;      Temps:          0       0       0       0       0
  2435 ;;      Totals:         0       0       0       0       0
  2436 ;;Total ram usage:        0 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           
  2446                           ;psect for function _configPwm_2
  2447  0490                     _configPwm_2:
  2448  0490                     l1083:	
  2449                           ;incstack = 0
  2450                           ; Regs used in _configPwm_2: [wreg+status,2]
  2451                           
  2452                           
  2453                           ;bai_2.c: 108:     TRISC2 = 1;
  2454  0490  1683               	bsf	3,5	;RP0=1, select bank1
  2455  0491  1303               	bcf	3,6	;RP1=0, select bank1
  2456  0492  1507               	bsf	7,2	;volatile
  2457                           
  2458                           ;bai_2.c: 109:     TRISC1 = 1;
  2459  0493  1487               	bsf	7,1	;volatile
  2460  0494                     l1085:
  2461                           
  2462                           ;bai_2.c: 110:     TMR2 = 0;
  2463  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0495  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0496  0191               	clrf	17	;volatile
  2466  0497                     l1087:
  2467                           
  2468                           ;bai_2.c: 111:     PR2 = 82;
  2469  0497  3052               	movlw	82
  2470  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2471  0499  1303               	bcf	3,6	;RP1=0, select bank1
  2472  049A  0092               	movwf	18	;volatile
  2473  049B                     l1089:
  2474                           
  2475                           ;bai_2.c: 112:     CCPR2L = 67;
  2476  049B  3043               	movlw	67
  2477  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2478  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2479  049E  009B               	movwf	27	;volatile
  2480  049F                     l1091:
  2481                           
  2482                           ;bai_2.c: 113:     CCP2CON = 0x0C;
  2483  049F  300C               	movlw	12
  2484  04A0  009D               	movwf	29	;volatile
  2485  04A1                     l1093:
  2486                           
  2487                           ;bai_2.c: 114:     CCP1CON = 0x00;
  2488  04A1  0197               	clrf	23	;volatile
  2489  04A2                     l1095:
  2490                           
  2491                           ;bai_2.c: 115:     DC2B1 = 1;
  2492  04A2  169D               	bsf	29,5	;volatile
  2493  04A3                     l1097:
  2494                           
  2495                           ;bai_2.c: 116:     DC2B0 = 0;
  2496  04A3  121D               	bcf	29,4	;volatile
  2497  04A4                     l1099:
  2498                           
  2499                           ;bai_2.c: 117:     TRISC1 = 0;
  2500  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  2501  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  2502  04A6  1087               	bcf	7,1	;volatile
  2503  04A7                     l1101:
  2504                           
  2505                           ;bai_2.c: 118:     T2CON = 0x00;
  2506  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2507  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2508  04A9  0192               	clrf	18	;volatile
  2509  04AA                     l1103:
  2510                           
  2511                           ;bai_2.c: 119:     T2CKPS1 = 0;
  2512  04AA  1092               	bcf	18,1	;volatile
  2513  04AB                     l1105:
  2514                           
  2515                           ;bai_2.c: 120:     T2CKPS0 = 1;
  2516  04AB  1412               	bsf	18,0	;volatile
  2517  04AC                     l1107:
  2518                           
  2519                           ;bai_2.c: 121:     TMR2ON = 1;
  2520  04AC  1512               	bsf	18,2	;volatile
  2521  04AD                     l117:
  2522  04AD  0008               	return
  2523  04AE                     __end_of_configPwm_2:
  2524                           
  2525                           	psect	text15
  2526  0472                     __ptext15:	
  2527 ;; *************** function _configPwm_1 *****************
  2528 ;; Defined at:
  2529 ;;		line 90 in file "bai_2.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2543 ;;      Params:         0       0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0
  2546 ;;      Totals:         0       0       0       0       0
  2547 ;;Total ram usage:        0 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           
  2557                           ;psect for function _configPwm_1
  2558  0472                     _configPwm_1:
  2559  0472                     l1057:	
  2560                           ;incstack = 0
  2561                           ; Regs used in _configPwm_1: [wreg+status,2]
  2562                           
  2563                           
  2564                           ;bai_2.c: 91:     TRISC2 = 1;
  2565  0472  1683               	bsf	3,5	;RP0=1, select bank1
  2566  0473  1303               	bcf	3,6	;RP1=0, select bank1
  2567  0474  1507               	bsf	7,2	;volatile
  2568                           
  2569                           ;bai_2.c: 92:     TRISC1 = 1;
  2570  0475  1487               	bsf	7,1	;volatile
  2571  0476                     l1059:
  2572                           
  2573                           ;bai_2.c: 93:     TMR2 = 0;
  2574  0476  1283               	bcf	3,5	;RP0=0, select bank0
  2575  0477  1303               	bcf	3,6	;RP1=0, select bank0
  2576  0478  0191               	clrf	17	;volatile
  2577  0479                     l1061:
  2578                           
  2579                           ;bai_2.c: 94:     PR2 = 62;
  2580  0479  303E               	movlw	62
  2581  047A  1683               	bsf	3,5	;RP0=1, select bank1
  2582  047B  1303               	bcf	3,6	;RP1=0, select bank1
  2583  047C  0092               	movwf	18	;volatile
  2584  047D                     l1063:
  2585                           
  2586                           ;bai_2.c: 95:     CCPR1L = 18;
  2587  047D  3012               	movlw	18
  2588  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2589  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0480  0095               	movwf	21	;volatile
  2591  0481                     l1065:
  2592                           
  2593                           ;bai_2.c: 96:     CCP1CON = 0x0C;
  2594  0481  300C               	movlw	12
  2595  0482  0097               	movwf	23	;volatile
  2596  0483                     l1067:
  2597                           
  2598                           ;bai_2.c: 97:     CCP2CON = 0x00;
  2599  0483  019D               	clrf	29	;volatile
  2600  0484                     l1069:
  2601                           
  2602                           ;bai_2.c: 98:     DC1B1 = 1;
  2603  0484  1697               	bsf	23,5	;volatile
  2604  0485                     l1071:
  2605                           
  2606                           ;bai_2.c: 99:     DC1B0 = 1;
  2607  0485  1617               	bsf	23,4	;volatile
  2608  0486                     l1073:
  2609                           
  2610                           ;bai_2.c: 100:     TRISC2 = 0;
  2611  0486  1683               	bsf	3,5	;RP0=1, select bank1
  2612  0487  1303               	bcf	3,6	;RP1=0, select bank1
  2613  0488  1107               	bcf	7,2	;volatile
  2614  0489                     l1075:
  2615                           
  2616                           ;bai_2.c: 101:     T2CON = 0x00;
  2617  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2618  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2619  048B  0192               	clrf	18	;volatile
  2620  048C                     l1077:
  2621                           
  2622                           ;bai_2.c: 102:     T2CKPS1 = 0;
  2623  048C  1092               	bcf	18,1	;volatile
  2624  048D                     l1079:
  2625                           
  2626                           ;bai_2.c: 103:     T2CKPS0 = 1;
  2627  048D  1412               	bsf	18,0	;volatile
  2628  048E                     l1081:
  2629                           
  2630                           ;bai_2.c: 104:     TMR2ON = 1;
  2631  048E  1512               	bsf	18,2	;volatile
  2632  048F                     l114:
  2633  048F  0008               	return
  2634  0490                     __end_of_configPwm_1:
  2635  007E                     btemp	set	126	;btemp
  2636  007E                     wtemp0	set	126
  2637                           
  2638                           	psect	config
  2639                           
  2640                           ;Config register CONFIG1 @ 0x2007
  2641                           ;	Oscillator Selection bits
  2642                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2643                           ;	Watchdog Timer Enable bit
  2644                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2645                           ;	Power-up Timer Enable bit
  2646                           ;	PWRTE = OFF, PWRT disabled
  2647                           ;	RE3/MCLR pin function select bit
  2648                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2649                           ;	Code Protection bit
  2650                           ;	CP = OFF, Program memory code protection is disabled
  2651                           ;	Data Code Protection bit
  2652                           ;	CPD = OFF, Data memory code protection is disabled
  2653                           ;	Brown Out Reset Selection bits
  2654                           ;	BOREN = OFF, BOR disabled
  2655                           ;	Internal External Switchover bit
  2656                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2657                           ;	Fail-Safe Clock Monitor Enabled bit
  2658                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2659                           ;	Low Voltage Programming Enable bit
  2660                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2661                           ;	In-Circuit Debugger Mode bit
  2662                           ;	DEBUG = 0x1, unprogrammed default
  2663  2007                     	org	8199
  2664  2007  20F2               	dw	8434
  2665                           
  2666                           ;Config register CONFIG2 @ 0x2008
  2667                           ;	Brown-out Reset Selection bit
  2668                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2669                           ;	Flash Program Memory Self Write Enable bits
  2670                           ;	WRT = OFF, Write protection off
  2671  2008                     	org	8200
  2672  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    66
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[6]), STR_1(CODE[7]), 

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 16
		 -> contentStop@bye(CODE[9]), contentStop@your_name(CODE[16]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 41
		 -> contentStop@special_name_bye(CODE[41]), 


Critical Paths under _main in COMMON

    _contentStop->_lcd_putc
    _addCharSpecial->_lcd_put_byte
    _contentConfigPwm_2->_lcd_puts
    _contentConfigPwm_1->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_contentStop
    _contentConfigPwm_2->_lcd_puts
    _contentConfigPwm_1->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19278
                        _configPwm_1
                        _configPwm_2
                 _contentConfigPwm_1
                 _contentConfigPwm_2
                        _contentStop
                        _declarePort
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _contentStop                                          4     4      0    7314
                                              0 BANK0      4     4      0
                     _addCharSpecial
                       _getLengthArr
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _getLengthArr                                         5     3      2     134
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _addCharSpecial                                       4     4      0    1235
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _contentConfigPwm_2                                   0     0      0    5982
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _contentConfigPwm_1                                   0     0      0    5982
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     2      0    3046
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2869
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1713
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _configPwm_2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configPwm_1
   _configPwm_2
   _contentConfigPwm_1
     _lcd_gotoxy
       _lcd_busy
       _lcd_put_byte
         _lcd_put_nibble
     _lcd_init
       _lcd_busy
       _lcd_put_byte
       _lcd_put_nibble
     _lcd_puts
       _lcd_putc
         _lcd_busy
         _lcd_gotoxy
         _lcd_put_byte
   _contentConfigPwm_2
     _lcd_gotoxy
     _lcd_init
     _lcd_puts
   _contentStop
     _addCharSpecial
       _lcd_busy
       _lcd_put_byte
     _getLengthArr
     _lcd_gotoxy
     _lcd_init
     _lcd_putc
   _declarePort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 14 21:31:39 2021

                                  pc 0002                                   l90 0471  
                                 l83 062C               __end_of_lcd_put_nibble 05E6  
                                 fsr 0004                      ?_addCharSpecial 0070  
                      ?_lcd_put_byte 0073                                  l111 04EF  
                                l120 0454                                  l105 0758  
                                l114 048F                                  l130 067A  
                                l131 065C                                  l220 0512  
                                l108 04CE                                  l132 064C  
                                l117 04AD                                  l214 06D9  
                                l134 0650                                  l126 0648  
                                l127 0638                                  l137 0660  
                                l129 063C                                  l139 0664  
                                l238 07FB                                  l175 0568  
                                l183 05E5                                  l186 0579  
                                l188 05A1                                  l196 0538  
                                _RB0 0030                                  _RB1 0031  
                                _RB2 0032                                  _RD1 0041  
                                _RE0 0048                                  _RD2 0042  
                                _RD3 0043                                  _RD4 0044  
                                _RD5 0045                                  _RD6 0046  
                                _RD7 0047                                  u500 05B4  
                                u501 05B0                                  _PR2 0092  
                                u520 05BE                                  u600 0519  
                                u521 05BA                                  u601 0518  
                                u514 05B7                                  u610 0538  
                                u611 0537                                  u540 05C8  
                                u700 07C1                                  u620 0692  
                                u541 05C4                                  u701 07C0  
                                u621 0691                                  u534 05C1  
                                u710 07D5                                  u630 06B0  
                                u711 07D4                                  u631 06AF  
                                u560 05D2                                  u720 07E7  
                                u640 06C5                                  u800 0650  
                                u561 05CE                                  u721 07E6  
                                u641 06C4                                  u801 064F  
                                u554 05CB                                  u730 07FB  
                                u650 05FD                                  u810 0660  
                                u731 07FA                                  u651 05FC  
                                u811 065F                                  u580 0575  
                                u740 0512                                  u660 0619  
                                u820 0664                                  u581 0574  
                                u741 0511                                  u661 0618  
                                u821 0663                                  u574 05D5  
                                u670 062C                                  u750 0720  
                                u830 066E                                  u671 062B  
                                u751 071F                                  u831 066A  
                                u680 0465                                  u760 0758  
                                u681 0464                                  u761 0757  
                                u690 07AD                                  u770 0638  
                                u595 058F                                  u691 07AC  
                                u907 0789                                  u755 071C  
                                u771 0637                                  u844 0671  
                                u780 063C                                  u917 0798  
                                u765 0754                                  u781 063B  
                                u790 064C                                  u927 057E  
                                u791 064B                                  u937 0586  
                                u947 05D7                                  u957 05DF  
                                u967 0545                                  u887 0766  
                                u977 054D                                  u897 077A  
                                u987 0559                                  u997 0561  
                                fsr0 0004                         ?_contentStop 0070  
                               l1101 04A7                                 l1103 04AA  
                               l1111 0448                                 l1105 04AB  
                               l1121 0450                                 l1113 044B  
                               l1107 04AC                                 l1123 0451  
                               l1115 044C                                 l1061 0479  
                               l1301 067F                                 l1117 044D  
                               l1109 0444                                 l1071 0485  
                               l1063 047D                                 l1311 06A6  
                               l1303 0680                                 l1119 044E  
                               l1081 048E                                 l1073 0486  
                               l1065 0481                                 l1057 0472  
                               l1241 05B7                                 l1313 06B1  
                               l1305 0688                                 l1401 06E9  
                               l1075 0489                                 l1067 0483  
                               l1059 0476                                 l1091 049F  
                               l1083 0490                                 l1243 05C1  
                               l1235 05A3                                 l1251 056A  
                               l1315 06BB                                 l1307 0693  
                               l1331 060F                                 l1323 05E7  
                               l1411 0720                                 l1403 06F5  
                               l1077 048C                                 l1069 0484  
                               l1093 04A1                                 l1085 0494  
                               l1245 05CB                                 l1237 05A9  
                               l1261 0589                                 l1253 0570  
                               l1309 069C                                 l1317 06C6  
                               l1333 0619                                 l1325 05E9  
                               l1421 074E                                 l1413 072C  
                               l1405 0701                                 l1079 048D  
                               l1095 04A2                                 l1087 0497  
                               l1271 0548                                 l1247 05DA  
                               l1239 05AD                                 l1263 058C  
                               l1255 0575                                 l1351 0762  
                               l1423 04AE                                 l1431 04DB  
                               l1335 061F                                 l1327 05F3  
                               l1343 0466                                 l1415 0734  
                               l1407 070E                                 l1097 04A3  
                               l1089 049B                                 l1281 055F  
                               l1273 0550                                 l1249 05E2  
                               l1265 059A                                 l1257 057C  
                               l1361 0776                                 l1353 076B  
                               l1425 04BA                                 l1433 04E1  
                               l1329 05FE                                 l1345 046D  
                               l1337 0456                                 l1417 0739  
                               l1409 0716                                 l1441 0632  
                               l1099 04A4                                 l1283 0564  
                               l1275 0556                                 l1267 0539  
                               l1259 0581                                 l1371 07AD  
                               l1363 0785                                 l1355 076E  
                               l1291 0519                                 l1427 04C0  
                               l1339 0458                                 l1419 0746  
                               l1451 0651                                 l1285 0567  
                               l1277 0557                                 l1269 0543  
                               l1381 07DD                                 l1373 07B7  
                               l1365 078E                                 l1357 076F  
                               l1349 0759                                 l1293 051E  
                               l1509 06CE                                 l1429 04CF  
                               l1453 0656                                 l1445 063D  
                               l1279 055C                                 l1383 07E7  
                               l1375 07C1                                 l1367 079D  
                               l1359 0770                                 l1295 051F  
                               l1391 0500                                 l1447 0642  
                               l1439 062D                                 l1385 07F1  
                               l1377 07CB                                 l1369 07A3  
                               l1297 0523                                 l1289 0514  
                               l1393 0506                                 l1457 0674  
                               l1379 07D5                                 l1299 052E  
                               l1387 04F3                                 l1395 06DA  
                               l1389 04F4                                 l1397 06DE  
                               l1399 06E4                                 STR_1 0052  
                               STR_2 0059                                 STR_3 004B  
                               STR_4 005F                                 _TMR2 0011  
                               _WPUB 0095                                 _main 062D  
                       lcd_busy@busy 0071                                 btemp 007E  
                               start 0000                      ?_lcd_put_nibble 0070  
                     ??_lcd_put_byte 0074                                _DC1B0 00BC  
                              _DC1B1 00BD                                _DC2B0 00EC  
                              _DC2B1 00ED                                ?_main 0070  
              getLengthArr@character 0072                                _ANSEL 0188  
                  contentStop@length 0020                                _T2CON 0012  
                              _nRBPU 040F                 __size_of_declarePort 0011  
                              pclath 000A                                status 0003  
                              wtemp0 007E                      __initialization 07FC  
               __end_of_getLengthArr 0472                         __end_of_main 067E  
                      lcd_gotoxy@col 0078                        lcd_gotoxy@row 0076  
                 lcd_put_nibble@temp 0072                               ??_main 007E  
         __end_of_contentConfigPwm_1 04CF           __end_of_contentConfigPwm_2 04F0  
                             _CCPR1L 0015                               _CCPR2L 001B  
                             _ANSELH 0189                               _TMR2ON 0092  
                             _TRISB0 0430                               _TRISB1 0431  
                             _TRISB2 0432                               _TRISC1 0439  
                             _TRISC2 043A                               _TRISD1 0441  
                             _TRISE0 0448                               _TRISD2 0442  
                             _TRISD3 0443                               _TRISD4 0444  
                             _TRISD5 0445                               _TRISD6 0446  
                             _TRISD7 0447                         contentStop@i 0022  
                   __end_of_lcd_busy 0569                     __end_of_lcd_init 07FC  
                   __end_of_lcd_putc 06DA                 __size_of_configPwm_1 001E  
               __size_of_configPwm_2 001E                     __end_of_lcd_puts 0513  
                      lcd_put_byte@b 0073                 __size_of_contentStop 007F  
            __end_of__initialization 07FC                 __end_of_lcd_put_byte 05A2  
                   ??_addCharSpecial 0076                       __pcstackCOMMON 0070  
                  lcd_gotoxy@address 0079                __size_of_getLengthArr 001D  
                   ??_lcd_put_nibble 0070                           __pmaintext 062D  
                            _CCP1CON 0017                              _CCP2CON 001D  
                            _T2CKPS0 0090                              _T2CKPS1 0091  
                         _lcd_gotoxy 0513                         _getLengthArr 0455  
                          ?_lcd_busy 0070                            ?_lcd_init 0070  
                          ?_lcd_putc 0070                            ?_lcd_puts 0070  
                         __stringtab 0003              addCharSpecial@character 0079  
                            __ptext1 0444                              __ptext2 06DA  
                            __ptext3 0455                              __ptext4 05E6  
                            __ptext5 04CF                              __ptext6 04AE  
                            __ptext7 04F0                              __ptext8 067E  
                            __ptext9 0513                        ??_declarePort 0070  
__end_ofcontentStop@special_name_bye 0032          contentStop@special_name_bye 0009  
              __size_of_lcd_put_byte 0039                           ??_lcd_busy 0070  
                         ??_lcd_init 0076                           ??_lcd_putc 007A  
                         ??_lcd_puts 007D                 end_of_initialization 07FC  
                     lcd_put_byte@rs 0075                   _contentConfigPwm_1 04AE  
                 _contentConfigPwm_2 04CF                  ?_contentConfigPwm_1 0070  
                ?_contentConfigPwm_2 0070                         _lcd_put_byte 0569  
                        ?_lcd_gotoxy 0076                  __end_of_declarePort 0455  
               ??_contentConfigPwm_1 007E                 ??_contentConfigPwm_2 007E  
                      ??_configPwm_1 0070                        ??_configPwm_2 0070  
                      ??_contentStop 007D                  start_initialization 07FC  
                __size_of_lcd_gotoxy 0026                  __end_of_configPwm_1 0490  
                __end_of_configPwm_2 04AE         __end_ofcontentStop@your_name 0042  
                        _declarePort 0444                            ___latbits 0002  
                      __pcstackBANK0 0020                      addCharSpecial@i 0077  
                __end_of_contentStop 0759                    __size_of_lcd_busy 0030  
                  __size_of_lcd_init 00A3                    __size_of_lcd_putc 005C  
                  __size_of_lcd_puts 0023                            __pstrings 0003  
            __size_of_addCharSpecial 0047                          _configPwm_1 0472  
                        _configPwm_2 0490                          __stringbase 0008  
            __size_of_lcd_put_nibble 0044                       contentStop@bye 0042  
                      getLengthArr@i 0073                            lcd_putc@c 007C  
                          lcd_puts@s 0020                          _contentStop 06DA  
                       ??_lcd_gotoxy 0077                 contentStop@your_name 0032  
                 __end_of_lcd_gotoxy 0539                   __end_of__stringtab 0009  
             __end_ofcontentStop@bye 004B                             __ptext10 0759  
                           __ptext11 0569                             __ptext12 05A2  
                           __ptext13 0539                             __ptext14 0490  
                           __ptext15 0472                             _lcd_busy 0539  
                           _lcd_init 0759                             _lcd_putc 067E  
                           _lcd_puts 04F0          __size_of_contentConfigPwm_1 0021  
        __size_of_contentConfigPwm_2 0021                        __size_of_main 0051  
                     _addCharSpecial 05E6                         ?_declarePort 0070  
                    lcd_put_nibble@b 0071                        ?_getLengthArr 0070  
                          stringcode 0003               __end_of_addCharSpecial 062D  
                     _lcd_put_nibble 05A2                             stringdir 0003  
                           stringtab 0003                       ??_getLengthArr 0072  
                       ?_configPwm_1 0070                         ?_configPwm_2 0070  
