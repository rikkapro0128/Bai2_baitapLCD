

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 14 20:21:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295                           
   296                           	psect	strings
   297  0003                     __pstrings:
   298  0003                     stringtab:
   299  0003                     __stringtab:
   300  0003                     stringcode:	
   301                           ;	String table - string pointers are 1 byte each
   302                           
   303  0003                     stringdir:
   304  0003  3000               	movlw	high stringdir
   305  0004  008A               	movwf	10
   306  0005  0804               	movf	4,w
   307  0006  0A84               	incf	4,f
   308  0007  0782               	addwf	2,f
   309  0008                     __stringbase:
   310  0008  3400               	retlw	0
   311  0009                     __end_of__stringtab:
   312  0009                     contentStop@special_name_bye:
   313  0009  340D               	retlw	13
   314  000A  3412               	retlw	18
   315  000B  3408               	retlw	8
   316  000C  3414               	retlw	20
   317  000D  3408               	retlw	8
   318  000E  3414               	retlw	20
   319  000F  341E               	retlw	30
   320  0010  3400               	retlw	0
   321  0011  3401               	retlw	1
   322  0012  340A               	retlw	10
   323  0013  3414               	retlw	20
   324  0014  3400               	retlw	0
   325  0015  341C               	retlw	28
   326  0016  3414               	retlw	20
   327  0017  341F               	retlw	31
   328  0018  3400               	retlw	0
   329  0019  3400               	retlw	0
   330  001A  3404               	retlw	4
   331  001B  3408               	retlw	8
   332  001C  3400               	retlw	0
   333  001D  341C               	retlw	28
   334  001E  3414               	retlw	20
   335  001F  341E               	retlw	30
   336  0020  3400               	retlw	0
   337  0021  3400               	retlw	0
   338  0022  340E               	retlw	14
   339  0023  3412               	retlw	18
   340  0024  3412               	retlw	18
   341  0025  340F               	retlw	15
   342  0026  3400               	retlw	0
   343  0027  3404               	retlw	4
   344  0028  3400               	retlw	0
   345  0029  3404               	retlw	4
   346  002A  340A               	retlw	10
   347  002B  3404               	retlw	4
   348  002C  340A               	retlw	10
   349  002D  340F               	retlw	15
   350  002E  3400               	retlw	0
   351  002F  3404               	retlw	4
   352  0030  3400               	retlw	0
   353  0031  3499               	retlw	153
   354  0032                     __end_ofcontentStop@special_name_bye:
   355  0032                     contentStop@your_name:
   356  0032  344E               	retlw	78
   357  0033  3467               	retlw	103
   358  0034  3475               	retlw	117
   359  0035  3479               	retlw	121
   360  0036  3400               	retlw	0
   361  0037  346E               	retlw	110
   362  0038  3420               	retlw	32
   363  0039  3454               	retlw	84
   364  003A  3401               	retlw	1
   365  003B  346E               	retlw	110
   366  003C  3420               	retlw	32
   367  003D  3450               	retlw	80
   368  003E  3468               	retlw	104
   369  003F  3402               	retlw	2
   370  0040  3470               	retlw	112
   371  0041  340A               	retlw	10
   372  0042                     __end_ofcontentStop@your_name:
   373  0042                     contentStop@bye:
   374  0042  3454               	retlw	84
   375  0043  3403               	retlw	3
   376  0044  346D               	retlw	109
   377  0045  3420               	retlw	32
   378  0046  3462               	retlw	98
   379  0047  3469               	retlw	105
   380  0048  3404               	retlw	4
   381  0049  3474               	retlw	116
   382  004A  340A               	retlw	10
   383  004B                     __end_ofcontentStop@bye:
   384  001B                     _CCPR2L	set	27
   385  0012                     _T2CON	set	18
   386  001D                     _CCP2CON	set	29
   387  0017                     _CCP1CON	set	23
   388  0015                     _CCPR1L	set	21
   389  0011                     _TMR2	set	17
   390  0044                     _RD4	set	68
   391  0045                     _RD5	set	69
   392  0046                     _RD6	set	70
   393  0047                     _RD7	set	71
   394  0043                     _RD3	set	67
   395  0041                     _RD1	set	65
   396  0042                     _RD2	set	66
   397  0032                     _RB2	set	50
   398  0031                     _RB1	set	49
   399  0030                     _RB0	set	48
   400  0048                     _RE0	set	72
   401  00EC                     _DC2B0	set	236
   402  00ED                     _DC2B1	set	237
   403  003A                     _RC2	set	58
   404  0092                     _TMR2ON	set	146
   405  0090                     _T2CKPS0	set	144
   406  0091                     _T2CKPS1	set	145
   407  00BC                     _DC1B0	set	188
   408  00BD                     _DC1B1	set	189
   409  0039                     _RC1	set	57
   410  0095                     _WPUB	set	149
   411  0092                     _PR2	set	146
   412  0442                     _TRISD2	set	1090
   413  0441                     _TRISD1	set	1089
   414  0443                     _TRISD3	set	1091
   415  0447                     _TRISD7	set	1095
   416  0446                     _TRISD6	set	1094
   417  0445                     _TRISD5	set	1093
   418  0444                     _TRISD4	set	1092
   419  0448                     _TRISE0	set	1096
   420  040F                     _nRBPU	set	1039
   421  0432                     _TRISB2	set	1074
   422  0431                     _TRISB1	set	1073
   423  0430                     _TRISB0	set	1072
   424  043A                     _TRISC2	set	1082
   425  0439                     _TRISC1	set	1081
   426  0189                     _ANSELH	set	393
   427  0188                     _ANSEL	set	392
   428  004B                     STR_3:
   429  004B  3466               	retlw	102	;'f'
   430  004C  343D               	retlw	61	;'='
   431  004D  3433               	retlw	51	;'3'
   432  004E  344B               	retlw	75	;'K'
   433  004F  3448               	retlw	72	;'H'
   434  0050  347A               	retlw	122	;'z'
   435  0051  3400               	retlw	0
   436  0052                     STR_1:
   437  0052  3466               	retlw	102	;'f'
   438  0053  343D               	retlw	61	;'='
   439  0054  3434               	retlw	52	;'4'
   440  0055  344B               	retlw	75	;'K'
   441  0056  3448               	retlw	72	;'H'
   442  0057  347A               	retlw	122	;'z'
   443  0058  3400               	retlw	0
   444  0059                     STR_2:
   445  0059  3444               	retlw	68	;'D'
   446  005A  343D               	retlw	61	;'='
   447  005B  3433               	retlw	51	;'3'
   448  005C  3430               	retlw	48	;'0'
   449  005D  3425               	retlw	37	;'%'
   450  005E  3400               	retlw	0
   451  005F                     STR_4:
   452  005F  3444               	retlw	68	;'D'
   453  0060  343D               	retlw	61	;'='
   454  0061  3438               	retlw	56	;'8'
   455  0062  3430               	retlw	48	;'0'
   456  0063  3425               	retlw	37	;'%'
   457  0064  3400               	retlw	0
   458                           
   459                           	psect	cinit
   460  07FC                     start_initialization:	
   461                           ; #config settings
   462                           
   463  07FC                     __initialization:
   464  07FC                     end_of_initialization:	
   465                           ;End of C runtime variable initialization code
   466                           
   467  07FC                     __end_of__initialization:
   468  07FC  0183               	clrf	3
   469  07FD  120A  118A  2E2E   	ljmp	_main	;jump to C main() function
   470                           
   471                           	psect	cstackCOMMON
   472  0070                     __pcstackCOMMON:
   473  0070                     ?_lcd_busy:
   474  0070                     ??_lcd_busy:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_lcd_init:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_lcd_putc:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_lcd_puts:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_addCharSpecial:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_contentStop:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_contentConfigPwm_1:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_contentConfigPwm_2:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_configPwm_1:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ??_configPwm_1:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_configPwm_2:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ??_configPwm_2:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_declarePort:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ??_declarePort:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_main:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_lcd_put_nibble:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_lcd_put_nibble:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_getLengthArr:	
   526                           ; 1 bytes @ 0x0
   527                           
   528                           
   529                           ; 2 bytes @ 0x0
   530  0070                     	ds	1
   531  0071                     lcd_busy@busy:
   532  0071                     lcd_put_nibble@b:	
   533                           ; 1 bytes @ 0x1
   534                           
   535                           
   536                           ; 1 bytes @ 0x1
   537  0071                     	ds	1
   538  0072                     ??_getLengthArr:
   539  0072                     getLengthArr@character:	
   540                           ; 1 bytes @ 0x2
   541                           
   542  0072                     lcd_put_nibble@temp:	
   543                           ; 1 bytes @ 0x2
   544                           
   545                           
   546                           ; 1 bytes @ 0x2
   547  0072                     	ds	1
   548  0073                     ?_lcd_put_byte:
   549  0073                     lcd_put_byte@b:	
   550                           ; 1 bytes @ 0x3
   551                           
   552  0073                     getLengthArr@i:	
   553                           ; 1 bytes @ 0x3
   554                           
   555                           
   556                           ; 2 bytes @ 0x3
   557  0073                     	ds	1
   558  0074                     ??_lcd_put_byte:
   559                           
   560                           ; 1 bytes @ 0x4
   561  0074                     	ds	1
   562  0075                     lcd_put_byte@rs:
   563                           
   564                           ; 1 bytes @ 0x5
   565  0075                     	ds	1
   566  0076                     ??_lcd_init:
   567  0076                     ?_lcd_gotoxy:	
   568                           ; 1 bytes @ 0x6
   569                           
   570  0076                     ??_addCharSpecial:	
   571                           ; 1 bytes @ 0x6
   572                           
   573  0076                     lcd_gotoxy@row:	
   574                           ; 1 bytes @ 0x6
   575                           
   576                           
   577                           ; 1 bytes @ 0x6
   578  0076                     	ds	1
   579  0077                     ??_lcd_gotoxy:
   580  0077                     addCharSpecial@i:	
   581                           ; 1 bytes @ 0x7
   582                           
   583                           
   584                           ; 2 bytes @ 0x7
   585  0077                     	ds	1
   586  0078                     lcd_gotoxy@col:
   587                           
   588                           ; 1 bytes @ 0x8
   589  0078                     	ds	1
   590  0079                     addCharSpecial@character:
   591  0079                     lcd_gotoxy@address:	
   592                           ; 1 bytes @ 0x9
   593                           
   594                           
   595                           ; 1 bytes @ 0x9
   596  0079                     	ds	1
   597  007A                     ??_lcd_putc:
   598                           
   599                           ; 1 bytes @ 0xA
   600  007A                     	ds	2
   601  007C                     lcd_putc@c:
   602                           
   603                           ; 1 bytes @ 0xC
   604  007C                     	ds	1
   605  007D                     ??_lcd_puts:
   606  007D                     ??_contentStop:	
   607                           ; 1 bytes @ 0xD
   608                           
   609                           
   610                           ; 1 bytes @ 0xD
   611  007D                     	ds	1
   612  007E                     ??_contentConfigPwm_1:
   613  007E                     ??_contentConfigPwm_2:	
   614                           ; 1 bytes @ 0xE
   615                           
   616  007E                     ??_main:	
   617                           ; 1 bytes @ 0xE
   618                           
   619                           
   620                           	psect	cstackBANK0
   621  0020                     __pcstackBANK0:	
   622                           ; 1 bytes @ 0xE
   623                           
   624  0020                     lcd_puts@s:
   625  0020                     contentStop@length:	
   626                           ; 1 bytes @ 0x0
   627                           
   628                           
   629                           ; 2 bytes @ 0x0
   630  0020                     	ds	2
   631  0022                     contentStop@i:
   632                           
   633                           ; 2 bytes @ 0x2
   634  0022                     	ds	2
   635                           
   636                           	psect	maintext
   637  062E                     __pmaintext:	
   638 ;;
   639 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   640 ;;
   641 ;; *************** function _main *****************
   642 ;; Defined at:
   643 ;;		line 139 in file "bai_2.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;                  1    wreg      void 
   650 ;; Registers used:
   651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : B00/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   657 ;;      Params:         0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels required when called: 6
   663 ;; This function calls:
   664 ;;		_configPwm_1
   665 ;;		_configPwm_2
   666 ;;		_contentConfigPwm_1
   667 ;;		_contentConfigPwm_2
   668 ;;		_contentStop
   669 ;;		_declarePort
   670 ;; This function is called by:
   671 ;;		Startup code after reset
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _main
   677  062E                     _main:
   678  062E                     l1445:	
   679                           ;incstack = 0
   680                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   681                           
   682                           
   683                           ;bai_2.c: 140:     declarePort();
   684  062E  120A  118A  243F  120A  118A  	fcall	_declarePort
   685  0633                     l1447:
   686                           
   687                           ;bai_2.c: 142:         RE0 = 1;
   688  0633  1283               	bcf	3,5	;RP0=0, select bank0
   689  0634  1303               	bcf	3,6	;RP1=0, select bank0
   690  0635  1409               	bsf	9,0	;volatile
   691  0636                     l1449:
   692                           
   693                           ;bai_2.c: 143:         if(!RB0) {
   694  0636  1806               	btfsc	6,0	;volatile
   695  0637  2E39               	goto	u771
   696  0638  2E3A               	goto	u770
   697  0639                     u771:
   698  0639  2E49               	goto	l130
   699  063A                     u770:
   700  063A                     l131:
   701  063A  1C06               	btfss	6,0	;volatile
   702  063B  2E3D               	goto	u781
   703  063C  2E3E               	goto	u780
   704  063D                     u781:
   705  063D  2E3A               	goto	l131
   706  063E                     u780:
   707  063E                     l1453:
   708                           
   709                           ;bai_2.c: 146:             configPwm_1();
   710  063E  120A  118A  246D  120A  118A  	fcall	_configPwm_1
   711  0643                     l1455:
   712                           
   713                           ;bai_2.c: 147:             contentConfigPwm_1();
   714  0643  120A  118A  248C  120A  118A  	fcall	_contentConfigPwm_1
   715                           
   716                           ;bai_2.c: 148:         }else if(!RB1) {
   717  0648  2E33               	goto	l1447
   718  0649                     l130:
   719  0649  1886               	btfsc	6,1	;volatile
   720  064A  2E4C               	goto	u791
   721  064B  2E4D               	goto	u790
   722  064C                     u791:
   723  064C  2E5C               	goto	l135
   724  064D                     u790:
   725  064D                     l136:
   726  064D  1C86               	btfss	6,1	;volatile
   727  064E  2E50               	goto	u801
   728  064F  2E51               	goto	u800
   729  0650                     u801:
   730  0650  2E4D               	goto	l136
   731  0651                     u800:
   732  0651                     l1459:
   733                           
   734                           ;bai_2.c: 151:             configPwm_2();
   735  0651  120A  118A  24CE  120A  118A  	fcall	_configPwm_2
   736  0656                     l1461:
   737                           
   738                           ;bai_2.c: 152:             contentConfigPwm_2();
   739  0656  120A  118A  24AD  120A  118A  	fcall	_contentConfigPwm_2
   740                           
   741                           ;bai_2.c: 153:         }else if(!RB2) {
   742  065B  2E33               	goto	l1447
   743  065C                     l135:
   744  065C  1906               	btfsc	6,2	;volatile
   745  065D  2E5F               	goto	u811
   746  065E  2E60               	goto	u810
   747  065F                     u811:
   748  065F  2E7A               	goto	l134
   749  0660                     u810:
   750  0660                     l141:
   751  0660  1D06               	btfss	6,2	;volatile
   752  0661  2E63               	goto	u821
   753  0662  2E64               	goto	u820
   754  0663                     u821:
   755  0663  2E60               	goto	l141
   756  0664                     u820:
   757  0664                     l143:
   758                           
   759                           ;bai_2.c: 156:             TRISC1 = TRISC2 = 1;
   760  0664  1683               	bsf	3,5	;RP0=1, select bank1
   761  0665  1303               	bcf	3,6	;RP1=0, select bank1
   762  0666  1507               	bsf	7,2	;volatile
   763  0667  1907               	btfsc	7,2	;volatile
   764  0668  2E6A               	goto	u831
   765  0669  2E6E               	goto	u830
   766  066A                     u831:
   767  066A  1683               	bsf	3,5	;RP0=1, select bank1
   768  066B  1303               	bcf	3,6	;RP1=0, select bank1
   769  066C  1487               	bsf	7,1	;volatile
   770  066D  2E71               	goto	u844
   771  066E                     u830:
   772  066E  1683               	bsf	3,5	;RP0=1, select bank1
   773  066F  1303               	bcf	3,6	;RP1=0, select bank1
   774  0670  1087               	bcf	7,1	;volatile
   775  0671                     u844:
   776                           
   777                           ;bai_2.c: 157:             RE0 = 0;
   778  0671  1283               	bcf	3,5	;RP0=0, select bank0
   779  0672  1303               	bcf	3,6	;RP1=0, select bank0
   780  0673  1009               	bcf	9,0	;volatile
   781  0674                     l1465:
   782                           
   783                           ;bai_2.c: 158:             contentStop();
   784  0674  120A  118A  26DA  120A  118A  	fcall	_contentStop
   785  0679  2E33               	goto	l1447
   786  067A                     l134:
   787  067A  2E33               	goto	l1447
   788  067B  120A  118A  2800   	ljmp	start
   789  067E                     __end_of_main:
   790                           
   791                           	psect	text1
   792  043F                     __ptext1:	
   793 ;; *************** function _declarePort *****************
   794 ;; Defined at:
   795 ;;		line 126 in file "bai_2.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0
   812 ;;      Totals:         0       0       0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels used: 1
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           
   823                           ;psect for function _declarePort
   824  043F                     _declarePort:
   825  043F                     l1113:	
   826                           ;incstack = 0
   827                           ; Regs used in _declarePort: [wreg+status,2]
   828                           
   829                           
   830                           ;bai_2.c: 127:     ANSEL = ANSELH = 0;
   831  043F  1683               	bsf	3,5	;RP0=1, select bank3
   832  0440  1703               	bsf	3,6	;RP1=1, select bank3
   833  0441  0189               	clrf	9	;volatile
   834  0442  0188               	clrf	8	;volatile
   835  0443                     l1115:
   836                           
   837                           ;bai_2.c: 128:     TRISB0 = 1;
   838  0443  1683               	bsf	3,5	;RP0=1, select bank1
   839  0444  1303               	bcf	3,6	;RP1=0, select bank1
   840  0445  1406               	bsf	6,0	;volatile
   841  0446                     l1117:
   842                           
   843                           ;bai_2.c: 129:     TRISB1 = 1;
   844  0446  1486               	bsf	6,1	;volatile
   845  0447                     l1119:
   846                           
   847                           ;bai_2.c: 130:     TRISB2 = 1;
   848  0447  1506               	bsf	6,2	;volatile
   849  0448                     l1121:
   850                           
   851                           ;bai_2.c: 131:     nRBPU = 0;
   852  0448  1381               	bcf	1,7	;volatile
   853  0449                     l1123:
   854                           
   855                           ;bai_2.c: 132:     WPUB = 0x07;
   856  0449  3007               	movlw	7
   857  044A  0095               	movwf	21	;volatile
   858  044B                     l1125:
   859                           
   860                           ;bai_2.c: 133:     TRISE0 = 0;
   861  044B  1009               	bcf	9,0	;volatile
   862  044C                     l1127:
   863                           
   864                           ;bai_2.c: 134:     RE0 = 1;
   865  044C  1283               	bcf	3,5	;RP0=0, select bank0
   866  044D  1303               	bcf	3,6	;RP1=0, select bank0
   867  044E  1409               	bsf	9,0	;volatile
   868  044F                     l124:
   869  044F  0008               	return
   870  0450                     __end_of_declarePort:
   871                           
   872                           	psect	text2
   873  06DA                     __ptext2:	
   874 ;; *************** function _contentStop *****************
   875 ;; Defined at:
   876 ;;		line 47 in file "bai_2.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  i               2    2[BANK0 ] unsigned int 
   881 ;;  length          2    0[BANK0 ] unsigned int 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         0       4       0       0       0
   893 ;;      Temps:          0       0       0       0       0
   894 ;;      Totals:         0       4       0       0       0
   895 ;;Total ram usage:        4 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 4
   898 ;; This function calls:
   899 ;;		_addCharSpecial
   900 ;;		_getLengthArr
   901 ;;		_lcd_gotoxy
   902 ;;		_lcd_init
   903 ;;		_lcd_putc
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _contentStop
   911  06DA                     _contentStop:
   912  06DA                     l1401:	
   913                           ;incstack = 0
   914                           ; Regs used in _contentStop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   915                           
   916  06DA  1283               	bcf	3,5	;RP0=0, select bank0
   917  06DB  1303               	bcf	3,6	;RP1=0, select bank0
   918  06DC  01A0               	clrf	contentStop@length
   919  06DD  01A1               	clrf	contentStop@length+1
   920  06DE                     l1403:
   921                           
   922                           ;bai_2.c: 51:     const char special_name_bye[];bai_2.c: 60:     addCharSpecial(special_
      +                          name_bye);
   923  06DE  3001               	movlw	(low ((contentStop@special_name_bye-__stringbase)| (0+32768)))& (0+255)
   924  06DF  120A  118A  25E7  120A  118A  	fcall	_addCharSpecial
   925  06E4                     l1405:
   926                           
   927                           ;bai_2.c: 61:     lcd_init();
   928  06E4  120A  118A  2759  120A  118A  	fcall	_lcd_init
   929  06E9                     l1407:
   930                           
   931                           ;bai_2.c: 62:     length = getLengthArr(your_name);
   932  06E9  302A               	movlw	(low ((contentStop@your_name-__stringbase)| (0+32768)))& (0+255)
   933  06EA  120A  118A  2450  120A  118A  	fcall	_getLengthArr
   934  06EF  0871               	movf	?_getLengthArr+1,w
   935  06F0  1283               	bcf	3,5	;RP0=0, select bank0
   936  06F1  1303               	bcf	3,6	;RP1=0, select bank0
   937  06F2  00A1               	movwf	contentStop@length+1
   938  06F3  0870               	movf	?_getLengthArr,w
   939  06F4  00A0               	movwf	contentStop@length
   940  06F5                     l1409:
   941                           
   942                           ;bai_2.c: 63:     lcd_gotoxy(0, 0);
   943  06F5  01F6               	clrf	lcd_gotoxy@row
   944  06F6  3000               	movlw	0
   945  06F7  120A  118A  2514  120A  118A  	fcall	_lcd_gotoxy
   946                           
   947                           ;bai_2.c: 64:     for(i = 0; i< length; i++) {
   948  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   949  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   950  06FE  01A2               	clrf	contentStop@i
   951  06FF  01A3               	clrf	contentStop@i+1
   952  0700  2F16               	goto	l1415
   953  0701                     l1411:
   954                           
   955                           ;bai_2.c: 65:         lcd_putc(your_name[i]);
   956  0701  0822               	movf	contentStop@i,w
   957  0702  3E2A               	addlw	low ((contentStop@your_name-__stringbase)| (0+32768))
   958  0703  0084               	movwf	4
   959  0704  120A  118A  2003  120A  118A  	fcall	stringdir
   960  0709  120A  118A  267E  120A  118A  	fcall	_lcd_putc
   961  070E                     l1413:
   962                           
   963                           ;bai_2.c: 66:     }
   964  070E  3001               	movlw	1
   965  070F  1283               	bcf	3,5	;RP0=0, select bank0
   966  0710  1303               	bcf	3,6	;RP1=0, select bank0
   967  0711  07A2               	addwf	contentStop@i,f
   968  0712  1803               	skipnc
   969  0713  0AA3               	incf	contentStop@i+1,f
   970  0714  3000               	movlw	0
   971  0715  07A3               	addwf	contentStop@i+1,f
   972  0716                     l1415:
   973  0716  0821               	movf	contentStop@length+1,w
   974  0717  0223               	subwf	contentStop@i+1,w
   975  0718  1D03               	skipz
   976  0719  2F1C               	goto	u755
   977  071A  0820               	movf	contentStop@length,w
   978  071B  0222               	subwf	contentStop@i,w
   979  071C                     u755:
   980  071C  1C03               	skipc
   981  071D  2F1F               	goto	u751
   982  071E  2F20               	goto	u750
   983  071F                     u751:
   984  071F  2F01               	goto	l1411
   985  0720                     u750:
   986  0720                     l1417:
   987                           
   988                           ;bai_2.c: 67:     length = getLengthArr(bye);
   989  0720  303A               	movlw	(low ((contentStop@bye-__stringbase)| (0+32768)))& (0+255)
   990  0721  120A  118A  2450  120A  118A  	fcall	_getLengthArr
   991  0726  0871               	movf	?_getLengthArr+1,w
   992  0727  1283               	bcf	3,5	;RP0=0, select bank0
   993  0728  1303               	bcf	3,6	;RP1=0, select bank0
   994  0729  00A1               	movwf	contentStop@length+1
   995  072A  0870               	movf	?_getLengthArr,w
   996  072B  00A0               	movwf	contentStop@length
   997  072C                     l1419:
   998                           
   999                           ;bai_2.c: 68:     lcd_gotoxy(5, 1);
  1000  072C  01F6               	clrf	lcd_gotoxy@row
  1001  072D  0AF6               	incf	lcd_gotoxy@row,f
  1002  072E  3005               	movlw	5
  1003  072F  120A  118A  2514  120A  118A  	fcall	_lcd_gotoxy
  1004  0734                     l1421:
  1005                           
  1006                           ;bai_2.c: 69:     for(i = 0; i< length; i++) {
  1007  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0736  01A2               	clrf	contentStop@i
  1010  0737  01A3               	clrf	contentStop@i+1
  1011  0738  2F4E               	goto	l1427
  1012  0739                     l1423:
  1013                           
  1014                           ;bai_2.c: 70:         lcd_putc(bye[i]);
  1015  0739  0822               	movf	contentStop@i,w
  1016  073A  3E3A               	addlw	low ((contentStop@bye-__stringbase)| (0+32768))
  1017  073B  0084               	movwf	4
  1018  073C  120A  118A  2003  120A  118A  	fcall	stringdir
  1019  0741  120A  118A  267E  120A  118A  	fcall	_lcd_putc
  1020  0746                     l1425:
  1021                           
  1022                           ;bai_2.c: 71:     }
  1023  0746  3001               	movlw	1
  1024  0747  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0748  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0749  07A2               	addwf	contentStop@i,f
  1027  074A  1803               	skipnc
  1028  074B  0AA3               	incf	contentStop@i+1,f
  1029  074C  3000               	movlw	0
  1030  074D  07A3               	addwf	contentStop@i+1,f
  1031  074E                     l1427:
  1032  074E  0821               	movf	contentStop@length+1,w
  1033  074F  0223               	subwf	contentStop@i+1,w
  1034  0750  1D03               	skipz
  1035  0751  2F54               	goto	u765
  1036  0752  0820               	movf	contentStop@length,w
  1037  0753  0222               	subwf	contentStop@i,w
  1038  0754                     u765:
  1039  0754  1C03               	skipc
  1040  0755  2F57               	goto	u761
  1041  0756  2F58               	goto	u760
  1042  0757                     u761:
  1043  0757  2F39               	goto	l1423
  1044  0758                     u760:
  1045  0758                     l109:
  1046  0758  0008               	return
  1047  0759                     __end_of_contentStop:
  1048                           
  1049                           	psect	text3
  1050  0450                     __ptext3:	
  1051 ;; *************** function _getLengthArr *****************
  1052 ;; Defined at:
  1053 ;;		line 35 in file "bai_2.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  character       1    wreg     PTR unsigned char 
  1056 ;;		 -> contentStop@bye(9), contentStop@your_name(16), 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  character       1    2[COMMON] PTR unsigned char 
  1059 ;;		 -> contentStop@bye(9), contentStop@your_name(16), 
  1060 ;;  i               2    3[COMMON] unsigned int 
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  2    0[COMMON] unsigned int 
  1063 ;; Registers used:
  1064 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1070 ;;      Params:         2       0       0       0       0
  1071 ;;      Locals:         3       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0
  1073 ;;      Totals:         5       0       0       0       0
  1074 ;;Total ram usage:        5 bytes
  1075 ;; Hardware stack levels used: 2
  1076 ;; This function calls:
  1077 ;;		Nothing
  1078 ;; This function is called by:
  1079 ;;		_contentStop
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           
  1084                           ;psect for function _getLengthArr
  1085  0450                     _getLengthArr:
  1086                           
  1087                           ;incstack = 0
  1088                           ; Regs used in _getLengthArr: [wreg-fsr0h+status,2+status,0+pclath]
  1089                           ;getLengthArr@character stored from wreg
  1090  0450  00F2               	movwf	getLengthArr@character
  1091  0451                     l1343:
  1092                           
  1093                           ;bai_2.c: 36:     unsigned int i = 0;
  1094  0451  01F3               	clrf	getLengthArr@i
  1095  0452  01F4               	clrf	getLengthArr@i+1
  1096  0453                     l1345:
  1097                           
  1098                           ;bai_2.c: 38:         if(character[i] == '\n')
  1099  0453  0873               	movf	getLengthArr@i,w
  1100  0454  0772               	addwf	getLengthArr@character,w
  1101  0455  0084               	movwf	4
  1102  0456  120A  118A  2003  120A  118A  	fcall	stringdir
  1103  045B  3A0A               	xorlw	10
  1104  045C  1D03               	skipz
  1105  045D  2C5F               	goto	u681
  1106  045E  2C60               	goto	u680
  1107  045F                     u681:
  1108  045F  2C61               	goto	l1349
  1109  0460                     u680:
  1110  0460  2C68               	goto	l1351
  1111  0461                     l1349:
  1112                           
  1113                           ;bai_2.c: 42:         i++;
  1114  0461  3001               	movlw	1
  1115  0462  07F3               	addwf	getLengthArr@i,f
  1116  0463  1803               	skipnc
  1117  0464  0AF4               	incf	getLengthArr@i+1,f
  1118  0465  3000               	movlw	0
  1119  0466  07F4               	addwf	getLengthArr@i+1,f
  1120  0467  2C53               	goto	l1345
  1121  0468                     l1351:
  1122                           
  1123                           ;bai_2.c: 44:     return i;
  1124  0468  0874               	movf	getLengthArr@i+1,w
  1125  0469  00F1               	movwf	?_getLengthArr+1
  1126  046A  0873               	movf	getLengthArr@i,w
  1127  046B  00F0               	movwf	?_getLengthArr
  1128  046C                     l94:
  1129  046C  0008               	return
  1130  046D                     __end_of_getLengthArr:
  1131                           
  1132                           	psect	text4
  1133  05E7                     __ptext4:	
  1134 ;; *************** function _addCharSpecial *****************
  1135 ;; Defined at:
  1136 ;;		line 24 in file "bai_2.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  character       1    wreg     PTR unsigned char 
  1139 ;;		 -> contentStop@special_name_bye(41), 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  character       1    9[COMMON] PTR unsigned char 
  1142 ;;		 -> contentStop@special_name_bye(41), 
  1143 ;;  i               2    7[COMMON] unsigned int 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1153 ;;      Params:         0       0       0       0       0
  1154 ;;      Locals:         3       0       0       0       0
  1155 ;;      Temps:          1       0       0       0       0
  1156 ;;      Totals:         4       0       0       0       0
  1157 ;;Total ram usage:        4 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; Hardware stack levels required when called: 2
  1160 ;; This function calls:
  1161 ;;		_lcd_busy
  1162 ;;		_lcd_put_byte
  1163 ;; This function is called by:
  1164 ;;		_contentStop
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _addCharSpecial
  1170  05E7                     _addCharSpecial:
  1171                           
  1172                           ;incstack = 0
  1173                           ; Regs used in _addCharSpecial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1174                           ;addCharSpecial@character stored from wreg
  1175  05E7  00F9               	movwf	addCharSpecial@character
  1176  05E8                     l1329:
  1177                           
  1178                           ;bai_2.c: 25:     unsigned int i = 0;
  1179  05E8  01F7               	clrf	addCharSpecial@i
  1180  05E9  01F8               	clrf	addCharSpecial@i+1
  1181  05EA                     l1331:
  1182                           
  1183                           ;bai_2.c: 26:     lcd_put_byte(0, 0x40);
  1184  05EA  3040               	movlw	64
  1185  05EB  00F6               	movwf	??_addCharSpecial
  1186  05EC  0876               	movf	??_addCharSpecial,w
  1187  05ED  00F3               	movwf	lcd_put_byte@b
  1188  05EE  3000               	movlw	0
  1189  05EF  120A  118A  256A  120A  118A  	fcall	_lcd_put_byte
  1190  05F4                     l1333:	
  1191                           ;bai_2.c: 27:     while(lcd_busy());
  1192                           
  1193  05F4  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1194  05F9  3A00               	xorlw	0
  1195  05FA  1D03               	skipz
  1196  05FB  2DFD               	goto	u651
  1197  05FC  2DFE               	goto	u650
  1198  05FD                     u651:
  1199  05FD  2DF4               	goto	l1333
  1200  05FE                     u650:
  1201  05FE  2E20               	goto	l1341
  1202  05FF                     l1335:
  1203                           
  1204                           ;bai_2.c: 29:         lcd_put_byte(1, character[i]);
  1205  05FF  0877               	movf	addCharSpecial@i,w
  1206  0600  0779               	addwf	addCharSpecial@character,w
  1207  0601  0084               	movwf	4
  1208  0602  120A  118A  2003  120A  118A  	fcall	stringdir
  1209  0607  00F6               	movwf	??_addCharSpecial
  1210  0608  0876               	movf	??_addCharSpecial,w
  1211  0609  00F3               	movwf	lcd_put_byte@b
  1212  060A  3001               	movlw	1
  1213  060B  120A  118A  256A  120A  118A  	fcall	_lcd_put_byte
  1214  0610                     l1337:	
  1215                           ;bai_2.c: 30:         while(lcd_busy());
  1216                           
  1217  0610  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1218  0615  3A00               	xorlw	0
  1219  0616  1D03               	skipz
  1220  0617  2E19               	goto	u661
  1221  0618  2E1A               	goto	u660
  1222  0619                     u661:
  1223  0619  2E10               	goto	l1337
  1224  061A                     u660:
  1225  061A                     l1339:
  1226                           
  1227                           ;bai_2.c: 31:         i++;
  1228  061A  3001               	movlw	1
  1229  061B  07F7               	addwf	addCharSpecial@i,f
  1230  061C  1803               	skipnc
  1231  061D  0AF8               	incf	addCharSpecial@i+1,f
  1232  061E  3000               	movlw	0
  1233  061F  07F8               	addwf	addCharSpecial@i+1,f
  1234  0620                     l1341:
  1235                           
  1236                           ;bai_2.c: 28:     while(character[i] != 0x99) {
  1237  0620  0877               	movf	addCharSpecial@i,w
  1238  0621  0779               	addwf	addCharSpecial@character,w
  1239  0622  0084               	movwf	4
  1240  0623  120A  118A  2003  120A  118A  	fcall	stringdir
  1241  0628  3A99               	xorlw	153
  1242  0629  1D03               	skipz
  1243  062A  2E2C               	goto	u671
  1244  062B  2E2D               	goto	u670
  1245  062C                     u671:
  1246  062C  2DFF               	goto	l1335
  1247  062D                     u670:
  1248  062D                     l87:
  1249  062D  0008               	return
  1250  062E                     __end_of_addCharSpecial:
  1251                           
  1252                           	psect	text5
  1253  04AD                     __ptext5:	
  1254 ;; *************** function _contentConfigPwm_2 *****************
  1255 ;; Defined at:
  1256 ;;		line 82 in file "bai_2.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;		None
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0
  1273 ;;      Totals:         0       0       0       0       0
  1274 ;;Total ram usage:        0 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 5
  1277 ;; This function calls:
  1278 ;;		_lcd_gotoxy
  1279 ;;		_lcd_init
  1280 ;;		_lcd_puts
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           
  1287                           ;psect for function _contentConfigPwm_2
  1288  04AD                     _contentConfigPwm_2:
  1289  04AD                     l1435:	
  1290                           ;incstack = 0
  1291                           ; Regs used in _contentConfigPwm_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1292                           
  1293                           
  1294                           ;bai_2.c: 83:     lcd_init();
  1295  04AD  120A  118A  2759  120A  118A  	fcall	_lcd_init
  1296                           
  1297                           ;bai_2.c: 84:     lcd_gotoxy(5, 0);
  1298  04B2  01F6               	clrf	lcd_gotoxy@row
  1299  04B3  3005               	movlw	5
  1300  04B4  120A  118A  2514  120A  118A  	fcall	_lcd_gotoxy
  1301  04B9                     l1437:
  1302                           
  1303                           ;bai_2.c: 85:     lcd_puts("f=3KHz");
  1304  04B9  3043               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1305  04BA  120A  118A  24F1  120A  118A  	fcall	_lcd_puts
  1306  04BF                     l1439:
  1307                           
  1308                           ;bai_2.c: 86:     lcd_gotoxy(5, 1);
  1309  04BF  01F6               	clrf	lcd_gotoxy@row
  1310  04C0  0AF6               	incf	lcd_gotoxy@row,f
  1311  04C1  3005               	movlw	5
  1312  04C2  120A  118A  2514  120A  118A  	fcall	_lcd_gotoxy
  1313                           
  1314                           ;bai_2.c: 87:     lcd_puts("D=80%");
  1315  04C7  3057               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1316  04C8  120A  118A  24F1  120A  118A  	fcall	_lcd_puts
  1317  04CD                     l115:
  1318  04CD  0008               	return
  1319  04CE                     __end_of_contentConfigPwm_2:
  1320                           
  1321                           	psect	text6
  1322  048C                     __ptext6:	
  1323 ;; *************** function _contentConfigPwm_1 *****************
  1324 ;; Defined at:
  1325 ;;		line 74 in file "bai_2.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0
  1342 ;;      Totals:         0       0       0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels used: 1
  1345 ;; Hardware stack levels required when called: 5
  1346 ;; This function calls:
  1347 ;;		_lcd_gotoxy
  1348 ;;		_lcd_init
  1349 ;;		_lcd_puts
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           
  1356                           ;psect for function _contentConfigPwm_1
  1357  048C                     _contentConfigPwm_1:
  1358  048C                     l1429:	
  1359                           ;incstack = 0
  1360                           ; Regs used in _contentConfigPwm_1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1361                           
  1362                           
  1363                           ;bai_2.c: 75:     lcd_init();
  1364  048C  120A  118A  2759  120A  118A  	fcall	_lcd_init
  1365                           
  1366                           ;bai_2.c: 76:     lcd_gotoxy(5, 0);
  1367  0491  01F6               	clrf	lcd_gotoxy@row
  1368  0492  3005               	movlw	5
  1369  0493  120A  118A  2514  120A  118A  	fcall	_lcd_gotoxy
  1370  0498                     l1431:
  1371                           
  1372                           ;bai_2.c: 77:     lcd_puts("f=4KHz");
  1373  0498  304A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1374  0499  120A  118A  24F1  120A  118A  	fcall	_lcd_puts
  1375  049E                     l1433:
  1376                           
  1377                           ;bai_2.c: 78:     lcd_gotoxy(5, 1);
  1378  049E  01F6               	clrf	lcd_gotoxy@row
  1379  049F  0AF6               	incf	lcd_gotoxy@row,f
  1380  04A0  3005               	movlw	5
  1381  04A1  120A  118A  2514  120A  118A  	fcall	_lcd_gotoxy
  1382                           
  1383                           ;bai_2.c: 79:     lcd_puts("D=30%");
  1384  04A6  3051               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1385  04A7  120A  118A  24F1  120A  118A  	fcall	_lcd_puts
  1386  04AC                     l112:
  1387  04AC  0008               	return
  1388  04AD                     __end_of_contentConfigPwm_1:
  1389                           
  1390                           	psect	text7
  1391  04F1                     __ptext7:	
  1392 ;; *************** function _lcd_puts *****************
  1393 ;; Defined at:
  1394 ;;		line 224 in file "lcd.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  s               1    wreg     PTR const unsigned char 
  1397 ;;		 -> STR_4(6), STR_3(7), STR_2(6), STR_1(7), 
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  1400 ;;		 -> STR_4(6), STR_3(7), STR_2(6), STR_1(7), 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       0       0       0       0
  1411 ;;      Locals:         0       1       0       0       0
  1412 ;;      Temps:          1       0       0       0       0
  1413 ;;      Totals:         1       1       0       0       0
  1414 ;;Total ram usage:        2 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 4
  1417 ;; This function calls:
  1418 ;;		_lcd_putc
  1419 ;; This function is called by:
  1420 ;;		_contentConfigPwm_1
  1421 ;;		_contentConfigPwm_2
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           
  1426                           ;psect for function _lcd_puts
  1427  04F1                     _lcd_puts:
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1431                           ;lcd_puts@s stored from wreg
  1432  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1433  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1434  04F3  00A0               	movwf	lcd_puts@s
  1435  04F4                     l1393:
  1436                           
  1437                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  1438  04F4  2D07               	goto	l1399
  1439  04F5                     l1395:
  1440                           
  1441                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  1442  04F5  0820               	movf	lcd_puts@s,w
  1443  04F6  0084               	movwf	4
  1444  04F7  120A  118A  2003  120A  118A  	fcall	stringdir
  1445  04FC  120A  118A  267E  120A  118A  	fcall	_lcd_putc
  1446  0501                     l1397:
  1447  0501  3001               	movlw	1
  1448  0502  00FD               	movwf	??_lcd_puts
  1449  0503  087D               	movf	??_lcd_puts,w
  1450  0504  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0505  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0506  07A0               	addwf	lcd_puts@s,f
  1453  0507                     l1399:
  1454                           
  1455                           ;lcd.c: 229:  while(*s)
  1456  0507  0820               	movf	lcd_puts@s,w
  1457  0508  0084               	movwf	4
  1458  0509  120A  118A  2003  120A  118A  	fcall	stringdir
  1459  050E  3A00               	xorlw	0
  1460  050F  1D03               	skipz
  1461  0510  2D12               	goto	u741
  1462  0511  2D13               	goto	u740
  1463  0512                     u741:
  1464  0512  2CF5               	goto	l1395
  1465  0513                     u740:
  1466  0513                     l224:
  1467  0513  0008               	return
  1468  0514                     __end_of_lcd_puts:
  1469                           
  1470                           	psect	text8
  1471  067E                     __ptext8:	
  1472 ;; *************** function _lcd_putc *****************
  1473 ;; Defined at:
  1474 ;;		line 190 in file "lcd.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  c               1    wreg     unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  c               1   12[COMMON] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         1       0       0       0       0
  1490 ;;      Temps:          2       0       0       0       0
  1491 ;;      Totals:         3       0       0       0       0
  1492 ;;Total ram usage:        3 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 3
  1495 ;; This function calls:
  1496 ;;		_lcd_busy
  1497 ;;		_lcd_gotoxy
  1498 ;;		_lcd_put_byte
  1499 ;; This function is called by:
  1500 ;;		_contentStop
  1501 ;;		_lcd_puts
  1502 ;;		_lcd_String_Delay
  1503 ;;		_putch
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _lcd_putc
  1509  067E                     _lcd_putc:
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1513                           ;lcd_putc@c stored from wreg
  1514  067E  00FC               	movwf	lcd_putc@c
  1515  067F                     l1307:
  1516                           
  1517                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1518  067F  2EC6               	goto	l1323
  1519  0680                     l1309:
  1520                           
  1521                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1522  0680  01F3               	clrf	lcd_put_byte@b
  1523  0681  0AF3               	incf	lcd_put_byte@b,f
  1524  0682  3000               	movlw	0
  1525  0683  120A  118A  256A  120A  118A  	fcall	_lcd_put_byte
  1526  0688                     l1311:	
  1527                           ;lcd.c: 199:    while(lcd_busy());
  1528                           
  1529  0688  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1530  068D  3A00               	xorlw	0
  1531  068E  1D03               	skipz
  1532  068F  2E91               	goto	u621
  1533  0690  2E92               	goto	u620
  1534  0691                     u621:
  1535  0691  2E88               	goto	l1311
  1536  0692                     u620:
  1537  0692  2ED9               	goto	l218
  1538  0693                     l1313:
  1539                           
  1540                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1541  0693  01F6               	clrf	lcd_gotoxy@row
  1542  0694  0AF6               	incf	lcd_gotoxy@row,f
  1543  0695  3000               	movlw	0
  1544  0696  120A  118A  2514  120A  118A  	fcall	_lcd_gotoxy
  1545                           
  1546                           ;lcd.c: 203:    break;
  1547  069B  2ED9               	goto	l218
  1548  069C                     l1315:
  1549                           
  1550                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1551  069C  3010               	movlw	16
  1552  069D  00FA               	movwf	??_lcd_putc
  1553  069E  087A               	movf	??_lcd_putc,w
  1554  069F  00F3               	movwf	lcd_put_byte@b
  1555  06A0  3000               	movlw	0
  1556  06A1  120A  118A  256A  120A  118A  	fcall	_lcd_put_byte
  1557  06A6                     l1317:	
  1558                           ;lcd.c: 206:    while(lcd_busy());
  1559                           
  1560  06A6  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1561  06AB  3A00               	xorlw	0
  1562  06AC  1D03               	skipz
  1563  06AD  2EAF               	goto	u631
  1564  06AE  2EB0               	goto	u630
  1565  06AF                     u631:
  1566  06AF  2EA6               	goto	l1317
  1567  06B0                     u630:
  1568  06B0  2ED9               	goto	l218
  1569  06B1                     l1319:
  1570                           
  1571                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1572  06B1  087C               	movf	lcd_putc@c,w
  1573  06B2  00FA               	movwf	??_lcd_putc
  1574  06B3  087A               	movf	??_lcd_putc,w
  1575  06B4  00F3               	movwf	lcd_put_byte@b
  1576  06B5  3001               	movlw	1
  1577  06B6  120A  118A  256A  120A  118A  	fcall	_lcd_put_byte
  1578  06BB                     l1321:	
  1579                           ;lcd.c: 212:     while(lcd_busy());
  1580                           
  1581  06BB  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1582  06C0  3A00               	xorlw	0
  1583  06C1  1D03               	skipz
  1584  06C2  2EC4               	goto	u641
  1585  06C3  2EC5               	goto	u640
  1586  06C4                     u641:
  1587  06C4  2EBB               	goto	l1321
  1588  06C5                     u640:
  1589  06C5  2ED9               	goto	l218
  1590  06C6                     l1323:
  1591  06C6  087C               	movf	lcd_putc@c,w
  1592  06C7  00FA               	movwf	??_lcd_putc
  1593  06C8  01FB               	clrf	??_lcd_putc+1
  1594                           
  1595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1596                           ; Switch size 1, requested type "simple"
  1597                           ; Number of cases is 1, Range of values is 0 to 0
  1598                           ; switch strategies available:
  1599                           ; Name         Instructions Cycles
  1600                           ; simple_byte            4     3 (average)
  1601                           ; direct_byte           11     8 (fixed)
  1602                           ; jumptable            260     6 (fixed)
  1603                           ;	Chosen strategy is simple_byte
  1604  06C9  087B               	movf	??_lcd_putc+1,w
  1605  06CA  3A00               	xorlw	0	; case 0
  1606  06CB  1903               	skipnz
  1607  06CC  2ECE               	goto	l1517
  1608  06CD  2EB1               	goto	l1319
  1609  06CE                     l1517:
  1610                           
  1611                           ; Switch size 1, requested type "simple"
  1612                           ; Number of cases is 3, Range of values is 8 to 12
  1613                           ; switch strategies available:
  1614                           ; Name         Instructions Cycles
  1615                           ; simple_byte           10     6 (average)
  1616                           ; direct_byte           26    11 (fixed)
  1617                           ; jumptable            263     9 (fixed)
  1618                           ;	Chosen strategy is simple_byte
  1619  06CE  087A               	movf	??_lcd_putc,w
  1620  06CF  3A08               	xorlw	8	; case 8
  1621  06D0  1903               	skipnz
  1622  06D1  2E9C               	goto	l1315
  1623  06D2  3A02               	xorlw	2	; case 10
  1624  06D3  1903               	skipnz
  1625  06D4  2E93               	goto	l1313
  1626  06D5  3A06               	xorlw	6	; case 12
  1627  06D6  1903               	skipnz
  1628  06D7  2E80               	goto	l1309
  1629  06D8  2EB1               	goto	l1319
  1630  06D9                     l218:
  1631  06D9  0008               	return
  1632  06DA                     __end_of_lcd_putc:
  1633                           
  1634                           	psect	text9
  1635  0514                     __ptext9:	
  1636 ;; *************** function _lcd_gotoxy *****************
  1637 ;; Defined at:
  1638 ;;		line 167 in file "lcd.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  col             1    wreg     unsigned char 
  1641 ;;  row             1    6[COMMON] unsigned char 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  col             1    8[COMMON] unsigned char 
  1644 ;;  address         1    9[COMMON] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, pclath, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1654 ;;      Params:         1       0       0       0       0
  1655 ;;      Locals:         2       0       0       0       0
  1656 ;;      Temps:          1       0       0       0       0
  1657 ;;      Totals:         4       0       0       0       0
  1658 ;;Total ram usage:        4 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 2
  1661 ;; This function calls:
  1662 ;;		_lcd_busy
  1663 ;;		_lcd_put_byte
  1664 ;; This function is called by:
  1665 ;;		_contentStop
  1666 ;;		_contentConfigPwm_1
  1667 ;;		_contentConfigPwm_2
  1668 ;;		_lcd_putc
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           
  1673                           ;psect for function _lcd_gotoxy
  1674  0514                     _lcd_gotoxy:
  1675                           
  1676                           ;incstack = 0
  1677                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1678                           ;lcd_gotoxy@col stored from wreg
  1679  0514  00F8               	movwf	lcd_gotoxy@col
  1680  0515                     l1295:
  1681                           
  1682                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1683  0515  0876               	movf	lcd_gotoxy@row,w
  1684  0516  1903               	btfsc	3,2
  1685  0517  2D19               	goto	u601
  1686  0518  2D1A               	goto	u600
  1687  0519                     u601:
  1688  0519  2D1F               	goto	l1299
  1689  051A                     u600:
  1690  051A                     l1297:
  1691                           
  1692                           ;lcd.c: 174:   address=0x40;
  1693  051A  3040               	movlw	64
  1694  051B  00F7               	movwf	??_lcd_gotoxy
  1695  051C  0877               	movf	??_lcd_gotoxy,w
  1696  051D  00F9               	movwf	lcd_gotoxy@address
  1697  051E  2D20               	goto	l1301
  1698  051F                     l1299:
  1699                           
  1700                           ;lcd.c: 176:   address=0;
  1701  051F  01F9               	clrf	lcd_gotoxy@address
  1702  0520                     l1301:
  1703                           
  1704                           ;lcd.c: 178:  address += col;
  1705  0520  0878               	movf	lcd_gotoxy@col,w
  1706  0521  00F7               	movwf	??_lcd_gotoxy
  1707  0522  0877               	movf	??_lcd_gotoxy,w
  1708  0523  07F9               	addwf	lcd_gotoxy@address,f
  1709  0524                     l1303:
  1710                           
  1711                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1712  0524  0879               	movf	lcd_gotoxy@address,w
  1713  0525  3880               	iorlw	128
  1714  0526  00F7               	movwf	??_lcd_gotoxy
  1715  0527  0877               	movf	??_lcd_gotoxy,w
  1716  0528  00F3               	movwf	lcd_put_byte@b
  1717  0529  3000               	movlw	0
  1718  052A  120A  118A  256A  120A  118A  	fcall	_lcd_put_byte
  1719  052F                     l1305:	
  1720                           ;lcd.c: 181:  while(lcd_busy());
  1721                           
  1722  052F  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1723  0534  3A00               	xorlw	0
  1724  0535  1D03               	skipz
  1725  0536  2D38               	goto	u611
  1726  0537  2D39               	goto	u610
  1727  0538                     u611:
  1728  0538  2D2F               	goto	l1305
  1729  0539                     u610:
  1730  0539                     l200:
  1731  0539  0008               	return
  1732  053A                     __end_of_lcd_gotoxy:
  1733                           
  1734                           	psect	text10
  1735  0759                     __ptext10:	
  1736 ;; *************** function _lcd_init *****************
  1737 ;; Defined at:
  1738 ;;		line 241 in file "lcd.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  i               1    0        unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0
  1754 ;;      Temps:          2       0       0       0       0
  1755 ;;      Totals:         2       0       0       0       0
  1756 ;;Total ram usage:        2 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 2
  1759 ;; This function calls:
  1760 ;;		_lcd_busy
  1761 ;;		_lcd_put_byte
  1762 ;;		_lcd_put_nibble
  1763 ;; This function is called by:
  1764 ;;		_contentStop
  1765 ;;		_contentConfigPwm_1
  1766 ;;		_contentConfigPwm_2
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _lcd_init
  1772  0759                     _lcd_init:
  1773  0759                     l1355:	
  1774                           ;incstack = 0
  1775                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1776                           
  1777                           
  1778                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1779  0759  1683               	bsf	3,5	;RP0=1, select bank1
  1780  075A  1303               	bcf	3,6	;RP1=0, select bank1
  1781  075B  1188               	bcf	8,3	;volatile
  1782                           
  1783                           ;lcd.c: 248:  TRISD1 = 0;
  1784  075C  1088               	bcf	8,1	;volatile
  1785                           
  1786                           ;lcd.c: 249:  TRISD2 = 0;
  1787  075D  1108               	bcf	8,2	;volatile
  1788                           
  1789                           ;lcd.c: 250:  TRISD4 = 0;
  1790  075E  1208               	bcf	8,4	;volatile
  1791                           
  1792                           ;lcd.c: 251:  TRISD5 = 0;
  1793  075F  1288               	bcf	8,5	;volatile
  1794                           
  1795                           ;lcd.c: 252:  TRISD6 = 0;
  1796  0760  1308               	bcf	8,6	;volatile
  1797                           
  1798                           ;lcd.c: 253:  TRISD7 = 0;
  1799  0761  1388               	bcf	8,7	;volatile
  1800  0762                     l1357:
  1801                           
  1802                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1803  0762  3014               	movlw	20
  1804  0763  00F7               	movwf	??_lcd_init+1
  1805  0764  3079               	movlw	121
  1806  0765  00F6               	movwf	??_lcd_init
  1807  0766                     u887:
  1808  0766  0BF6               	decfsz	??_lcd_init,f
  1809  0767  2F66               	goto	u887
  1810  0768  0BF7               	decfsz	??_lcd_init+1,f
  1811  0769  2F66               	goto	u887
  1812  076A  2F6B               	nop2
  1813  076B                     l1359:
  1814                           
  1815                           ;lcd.c: 257:  RD1 = 0;
  1816  076B  1283               	bcf	3,5	;RP0=0, select bank0
  1817  076C  1303               	bcf	3,6	;RP1=0, select bank0
  1818  076D  1088               	bcf	8,1	;volatile
  1819  076E                     l1361:
  1820                           
  1821                           ;lcd.c: 258:  RD2 = 0;
  1822  076E  1108               	bcf	8,2	;volatile
  1823  076F                     l1363:
  1824                           
  1825                           ;lcd.c: 259:  RD3 = 0;
  1826  076F  1188               	bcf	8,3	;volatile
  1827  0770                     l1365:
  1828                           
  1829                           ;lcd.c: 261:  lcd_put_nibble(3);
  1830  0770  3003               	movlw	3
  1831  0771  120A  118A  25A3  120A  118A  	fcall	_lcd_put_nibble
  1832  0776                     l1367:
  1833                           
  1834                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1835  0776  300D               	movlw	13
  1836  0777  00F7               	movwf	??_lcd_init+1
  1837  0778  30FB               	movlw	251
  1838  0779  00F6               	movwf	??_lcd_init
  1839  077A                     u897:
  1840  077A  0BF6               	decfsz	??_lcd_init,f
  1841  077B  2F7A               	goto	u897
  1842  077C  0BF7               	decfsz	??_lcd_init+1,f
  1843  077D  2F7A               	goto	u897
  1844  077E  2F7F               	nop2
  1845                           
  1846                           ;lcd.c: 263:  lcd_put_nibble(3);
  1847  077F  3003               	movlw	3
  1848  0780  120A  118A  25A3  120A  118A  	fcall	_lcd_put_nibble
  1849  0785                     l1369:
  1850                           
  1851                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1852  0785  300D               	movlw	13
  1853  0786  00F7               	movwf	??_lcd_init+1
  1854  0787  30FB               	movlw	251
  1855  0788  00F6               	movwf	??_lcd_init
  1856  0789                     u907:
  1857  0789  0BF6               	decfsz	??_lcd_init,f
  1858  078A  2F89               	goto	u907
  1859  078B  0BF7               	decfsz	??_lcd_init+1,f
  1860  078C  2F89               	goto	u907
  1861  078D  2F8E               	nop2
  1862  078E                     l1371:
  1863                           
  1864                           ;lcd.c: 265:  lcd_put_nibble(3);
  1865  078E  3003               	movlw	3
  1866  078F  120A  118A  25A3  120A  118A  	fcall	_lcd_put_nibble
  1867                           
  1868                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1869  0794  300D               	movlw	13
  1870  0795  00F7               	movwf	??_lcd_init+1
  1871  0796  30FB               	movlw	251
  1872  0797  00F6               	movwf	??_lcd_init
  1873  0798                     u917:
  1874  0798  0BF6               	decfsz	??_lcd_init,f
  1875  0799  2F98               	goto	u917
  1876  079A  0BF7               	decfsz	??_lcd_init+1,f
  1877  079B  2F98               	goto	u917
  1878  079C  2F9D               	nop2
  1879  079D                     l1373:
  1880                           
  1881                           ;lcd.c: 268:  lcd_put_nibble(2);
  1882  079D  3002               	movlw	2
  1883  079E  120A  118A  25A3  120A  118A  	fcall	_lcd_put_nibble
  1884  07A3                     l1375:	
  1885                           ;lcd.c: 269:  while(lcd_busy());
  1886                           
  1887  07A3  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1888  07A8  3A00               	xorlw	0
  1889  07A9  1D03               	skipz
  1890  07AA  2FAC               	goto	u691
  1891  07AB  2FAD               	goto	u690
  1892  07AC                     u691:
  1893  07AC  2FA3               	goto	l1375
  1894  07AD                     u690:
  1895  07AD                     l1377:
  1896                           
  1897                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1898  07AD  3028               	movlw	40
  1899  07AE  00F6               	movwf	??_lcd_init
  1900  07AF  0876               	movf	??_lcd_init,w
  1901  07B0  00F3               	movwf	lcd_put_byte@b
  1902  07B1  3000               	movlw	0
  1903  07B2  120A  118A  256A  120A  118A  	fcall	_lcd_put_byte
  1904  07B7                     l1379:	
  1905                           ;lcd.c: 272:  while(lcd_busy());
  1906                           
  1907  07B7  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1908  07BC  3A00               	xorlw	0
  1909  07BD  1D03               	skipz
  1910  07BE  2FC0               	goto	u701
  1911  07BF  2FC1               	goto	u700
  1912  07C0                     u701:
  1913  07C0  2FB7               	goto	l1379
  1914  07C1                     u700:
  1915  07C1                     l1381:
  1916                           
  1917                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1918  07C1  300C               	movlw	12
  1919  07C2  00F6               	movwf	??_lcd_init
  1920  07C3  0876               	movf	??_lcd_init,w
  1921  07C4  00F3               	movwf	lcd_put_byte@b
  1922  07C5  3000               	movlw	0
  1923  07C6  120A  118A  256A  120A  118A  	fcall	_lcd_put_byte
  1924  07CB                     l1383:	
  1925                           ;lcd.c: 275:  while(lcd_busy());
  1926                           
  1927  07CB  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1928  07D0  3A00               	xorlw	0
  1929  07D1  1D03               	skipz
  1930  07D2  2FD4               	goto	u711
  1931  07D3  2FD5               	goto	u710
  1932  07D4                     u711:
  1933  07D4  2FCB               	goto	l1383
  1934  07D5                     u710:
  1935  07D5                     l1385:
  1936                           
  1937                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1938  07D5  01F3               	clrf	lcd_put_byte@b
  1939  07D6  0AF3               	incf	lcd_put_byte@b,f
  1940  07D7  3000               	movlw	0
  1941  07D8  120A  118A  256A  120A  118A  	fcall	_lcd_put_byte
  1942  07DD                     l1387:	
  1943                           ;lcd.c: 278:  while(lcd_busy());
  1944                           
  1945  07DD  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1946  07E2  3A00               	xorlw	0
  1947  07E3  1D03               	skipz
  1948  07E4  2FE6               	goto	u721
  1949  07E5  2FE7               	goto	u720
  1950  07E6                     u721:
  1951  07E6  2FDD               	goto	l1387
  1952  07E7                     u720:
  1953  07E7                     l1389:
  1954                           
  1955                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1956  07E7  3006               	movlw	6
  1957  07E8  00F6               	movwf	??_lcd_init
  1958  07E9  0876               	movf	??_lcd_init,w
  1959  07EA  00F3               	movwf	lcd_put_byte@b
  1960  07EB  3000               	movlw	0
  1961  07EC  120A  118A  256A  120A  118A  	fcall	_lcd_put_byte
  1962  07F1                     l1391:	
  1963                           ;lcd.c: 281:  while(lcd_busy());
  1964                           
  1965  07F1  120A  118A  253A  120A  118A  	fcall	_lcd_busy
  1966  07F6  3A00               	xorlw	0
  1967  07F7  1D03               	skipz
  1968  07F8  2FFA               	goto	u731
  1969  07F9  2FFB               	goto	u730
  1970  07FA                     u731:
  1971  07FA  2FF1               	goto	l1391
  1972  07FB                     u730:
  1973  07FB                     l242:
  1974  07FB  0008               	return
  1975  07FC                     __end_of_lcd_init:
  1976                           
  1977                           	psect	text11
  1978  056A                     __ptext11:	
  1979 ;; *************** function _lcd_put_byte *****************
  1980 ;; Defined at:
  1981 ;;		line 134 in file "lcd.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  rs              1    wreg     unsigned char 
  1984 ;;  b               1    3[COMMON] unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  rs              1    5[COMMON] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0, pclath, cstack
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1996 ;;      Params:         1       0       0       0       0
  1997 ;;      Locals:         1       0       0       0       0
  1998 ;;      Temps:          1       0       0       0       0
  1999 ;;      Totals:         3       0       0       0       0
  2000 ;;Total ram usage:        3 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; Hardware stack levels required when called: 1
  2003 ;; This function calls:
  2004 ;;		_lcd_put_nibble
  2005 ;; This function is called by:
  2006 ;;		_addCharSpecial
  2007 ;;		_lcd_gotoxy
  2008 ;;		_lcd_putc
  2009 ;;		_lcd_init
  2010 ;;		_lcd_ShiftLeft
  2011 ;;		_lcd_ShiftRight
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           
  2016                           ;psect for function _lcd_put_byte
  2017  056A                     _lcd_put_byte:
  2018                           
  2019                           ;incstack = 0
  2020                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  2021                           ;lcd_put_byte@rs stored from wreg
  2022  056A  00F5               	movwf	lcd_put_byte@rs
  2023  056B                     l1257:
  2024                           
  2025                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  2026  056B  1683               	bsf	3,5	;RP0=1, select bank1
  2027  056C  1303               	bcf	3,6	;RP1=0, select bank1
  2028  056D  1208               	bcf	8,4	;volatile
  2029                           
  2030                           ;lcd.c: 140:  TRISD5 = 0;
  2031  056E  1288               	bcf	8,5	;volatile
  2032                           
  2033                           ;lcd.c: 141:  TRISD6 = 0;
  2034  056F  1308               	bcf	8,6	;volatile
  2035                           
  2036                           ;lcd.c: 142:  TRISD7 = 0;
  2037  0570  1388               	bcf	8,7	;volatile
  2038  0571                     l1259:
  2039                           
  2040                           ;lcd.c: 144:  if(rs)
  2041  0571  0875               	movf	lcd_put_byte@rs,w
  2042  0572  1903               	btfsc	3,2
  2043  0573  2D75               	goto	u581
  2044  0574  2D76               	goto	u580
  2045  0575                     u581:
  2046  0575  2D7A               	goto	l190
  2047  0576                     u580:
  2048  0576                     l1261:
  2049                           
  2050                           ;lcd.c: 145:   RD1 = 1;
  2051  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0578  1488               	bsf	8,1	;volatile
  2054  0579  2D7D               	goto	l1263
  2055  057A                     l190:	
  2056                           ;lcd.c: 146:  else
  2057                           
  2058                           
  2059                           ;lcd.c: 147:   RD1 = 0;
  2060  057A  1283               	bcf	3,5	;RP0=0, select bank0
  2061  057B  1303               	bcf	3,6	;RP1=0, select bank0
  2062  057C  1088               	bcf	8,1	;volatile
  2063  057D                     l1263:
  2064                           
  2065                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2066  057D  3006               	movlw	6
  2067  057E  00F4               	movwf	??_lcd_put_byte
  2068  057F                     u927:
  2069  057F  0BF4               	decfsz	??_lcd_put_byte,f
  2070  0580  2D7F               	goto	u927
  2071  0581  0000               	nop
  2072  0582                     l1265:
  2073                           
  2074                           ;lcd.c: 150:  RD2 = 0;
  2075  0582  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0583  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0584  1108               	bcf	8,2	;volatile
  2078                           
  2079                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2080  0585  3006               	movlw	6
  2081  0586  00F4               	movwf	??_lcd_put_byte
  2082  0587                     u937:
  2083  0587  0BF4               	decfsz	??_lcd_put_byte,f
  2084  0588  2D87               	goto	u937
  2085  0589  0000               	nop
  2086  058A                     l1267:
  2087                           
  2088                           ;lcd.c: 153:  RD3 = 0;
  2089  058A  1283               	bcf	3,5	;RP0=0, select bank0
  2090  058B  1303               	bcf	3,6	;RP1=0, select bank0
  2091  058C  1188               	bcf	8,3	;volatile
  2092  058D                     l1269:
  2093                           
  2094                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  2095  058D  0873               	movf	lcd_put_byte@b,w
  2096  058E  00F4               	movwf	??_lcd_put_byte
  2097  058F  3004               	movlw	4
  2098  0590                     u595:
  2099  0590  1003               	clrc
  2100  0591  0CF4               	rrf	??_lcd_put_byte,f
  2101  0592  3EFF               	addlw	-1
  2102  0593  1D03               	skipz
  2103  0594  2D90               	goto	u595
  2104  0595  0874               	movf	??_lcd_put_byte,w
  2105  0596  120A  118A  25A3  120A  118A  	fcall	_lcd_put_nibble
  2106  059B                     l1271:
  2107                           
  2108                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  2109  059B  0873               	movf	lcd_put_byte@b,w
  2110  059C  390F               	andlw	15
  2111  059D  120A  118A  25A3  120A  118A  	fcall	_lcd_put_nibble
  2112  05A2                     l192:
  2113  05A2  0008               	return
  2114  05A3                     __end_of_lcd_put_byte:
  2115                           
  2116                           	psect	text12
  2117  05A3                     __ptext12:	
  2118 ;; *************** function _lcd_put_nibble *****************
  2119 ;; Defined at:
  2120 ;;		line 103 in file "lcd.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  b               1    wreg     unsigned char 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  b               1    1[COMMON] unsigned char 
  2125 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         2       0       0       0       0
  2137 ;;      Temps:          1       0       0       0       0
  2138 ;;      Totals:         3       0       0       0       0
  2139 ;;Total ram usage:        3 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_lcd_put_byte
  2145 ;;		_lcd_init
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function _lcd_put_nibble
  2151  05A3                     _lcd_put_nibble:
  2152                           
  2153                           ;incstack = 0
  2154                           ; Regs used in _lcd_put_nibble: [wreg]
  2155                           ;lcd_put_nibble@b stored from wreg
  2156  05A3  00F1               	movwf	lcd_put_nibble@b
  2157  05A4                     l1241:
  2158                           
  2159                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  2160  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  2161  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  2162  05A6  1208               	bcf	8,4	;volatile
  2163                           
  2164                           ;lcd.c: 110:  TRISD5 = 0;
  2165  05A7  1288               	bcf	8,5	;volatile
  2166                           
  2167                           ;lcd.c: 111:  TRISD6 = 0;
  2168  05A8  1308               	bcf	8,6	;volatile
  2169                           
  2170                           ;lcd.c: 112:  TRISD7 = 0;
  2171  05A9  1388               	bcf	8,7	;volatile
  2172  05AA                     l1243:
  2173                           
  2174                           ;lcd.c: 114:  temp.Val = b;
  2175  05AA  0871               	movf	lcd_put_nibble@b,w
  2176  05AB  00F0               	movwf	??_lcd_put_nibble
  2177  05AC  0870               	movf	??_lcd_put_nibble,w
  2178  05AD  00F2               	movwf	lcd_put_nibble@temp
  2179  05AE                     l1245:
  2180                           
  2181                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2182  05AE  1872               	btfsc	lcd_put_nibble@temp,0
  2183  05AF  2DB1               	goto	u501
  2184  05B0  2DB5               	goto	u500
  2185  05B1                     u501:
  2186  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2187  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2188  05B3  1608               	bsf	8,4	;volatile
  2189  05B4  2DB8               	goto	u514
  2190  05B5                     u500:
  2191  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2192  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  2193  05B7  1208               	bcf	8,4	;volatile
  2194  05B8                     u514:
  2195  05B8                     l1247:
  2196                           
  2197                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2198  05B8  18F2               	btfsc	lcd_put_nibble@temp,1
  2199  05B9  2DBB               	goto	u521
  2200  05BA  2DBF               	goto	u520
  2201  05BB                     u521:
  2202  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2203  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2204  05BD  1688               	bsf	8,5	;volatile
  2205  05BE  2DC2               	goto	u534
  2206  05BF                     u520:
  2207  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  2208  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  2209  05C1  1288               	bcf	8,5	;volatile
  2210  05C2                     u534:
  2211  05C2                     l1249:
  2212                           
  2213                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2214  05C2  1972               	btfsc	lcd_put_nibble@temp,2
  2215  05C3  2DC5               	goto	u541
  2216  05C4  2DC9               	goto	u540
  2217  05C5                     u541:
  2218  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  2219  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  2220  05C7  1708               	bsf	8,6	;volatile
  2221  05C8  2DCC               	goto	u554
  2222  05C9                     u540:
  2223  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  2224  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  2225  05CB  1308               	bcf	8,6	;volatile
  2226  05CC                     u554:
  2227  05CC                     l1251:
  2228                           
  2229                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2230  05CC  19F2               	btfsc	lcd_put_nibble@temp,3
  2231  05CD  2DCF               	goto	u561
  2232  05CE  2DD3               	goto	u560
  2233  05CF                     u561:
  2234  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2235  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2236  05D1  1788               	bsf	8,7	;volatile
  2237  05D2  2DD6               	goto	u574
  2238  05D3                     u560:
  2239  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  2240  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  2241  05D5  1388               	bcf	8,7	;volatile
  2242  05D6                     u574:
  2243                           
  2244                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2245  05D6  3006               	movlw	6
  2246  05D7  00F0               	movwf	??_lcd_put_nibble
  2247  05D8                     u947:
  2248  05D8  0BF0               	decfsz	??_lcd_put_nibble,f
  2249  05D9  2DD8               	goto	u947
  2250  05DA  0000               	nop
  2251  05DB                     l1253:
  2252                           
  2253                           ;lcd.c: 122:  RD3 = 1;
  2254  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  2255  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  2256  05DD  1588               	bsf	8,3	;volatile
  2257                           
  2258                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2259  05DE  3006               	movlw	6
  2260  05DF  00F0               	movwf	??_lcd_put_nibble
  2261  05E0                     u957:
  2262  05E0  0BF0               	decfsz	??_lcd_put_nibble,f
  2263  05E1  2DE0               	goto	u957
  2264  05E2  0000               	nop
  2265  05E3                     l1255:
  2266                           
  2267                           ;lcd.c: 124:  RD3 = 0;
  2268  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  2269  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  2270  05E5  1188               	bcf	8,3	;volatile
  2271  05E6                     l187:
  2272  05E6  0008               	return
  2273  05E7                     __end_of_lcd_put_nibble:
  2274                           
  2275                           	psect	text13
  2276  053A                     __ptext13:	
  2277 ;; *************** function _lcd_busy *****************
  2278 ;; Defined at:
  2279 ;;		line 18 in file "lcd.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  busy            1    1[COMMON] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      unsigned char 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         0       0       0       0       0
  2294 ;;      Locals:         1       0       0       0       0
  2295 ;;      Temps:          1       0       0       0       0
  2296 ;;      Totals:         2       0       0       0       0
  2297 ;;Total ram usage:        2 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; This function calls:
  2300 ;;		Nothing
  2301 ;; This function is called by:
  2302 ;;		_addCharSpecial
  2303 ;;		_lcd_gotoxy
  2304 ;;		_lcd_putc
  2305 ;;		_lcd_init
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _lcd_busy
  2311  053A                     _lcd_busy:
  2312  053A                     l1273:	
  2313                           ;incstack = 0
  2314                           ; Regs used in _lcd_busy: [wreg+status,2]
  2315                           
  2316                           
  2317                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  2318  053A  1683               	bsf	3,5	;RP0=1, select bank1
  2319  053B  1303               	bcf	3,6	;RP1=0, select bank1
  2320  053C  1608               	bsf	8,4	;volatile
  2321                           
  2322                           ;lcd.c: 25:  TRISD5 = 1;
  2323  053D  1688               	bsf	8,5	;volatile
  2324                           
  2325                           ;lcd.c: 26:  TRISD6 = 1;
  2326  053E  1708               	bsf	8,6	;volatile
  2327                           
  2328                           ;lcd.c: 27:  TRISD7 = 1;
  2329  053F  1788               	bsf	8,7	;volatile
  2330                           
  2331                           ;lcd.c: 29:  RD2 = 1;
  2332  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0542  1508               	bsf	8,2	;volatile
  2335                           
  2336                           ;lcd.c: 30:  RD1 = 0;
  2337  0543  1088               	bcf	8,1	;volatile
  2338  0544                     l1275:
  2339                           
  2340                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2341  0544  3006               	movlw	6
  2342  0545  00F0               	movwf	??_lcd_busy
  2343  0546                     u967:
  2344  0546  0BF0               	decfsz	??_lcd_busy,f
  2345  0547  2D46               	goto	u967
  2346  0548  0000               	nop
  2347  0549                     l1277:
  2348                           
  2349                           ;lcd.c: 32:  RD3 = 1;
  2350  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2351  054A  1303               	bcf	3,6	;RP1=0, select bank0
  2352  054B  1588               	bsf	8,3	;volatile
  2353                           
  2354                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2355  054C  3006               	movlw	6
  2356  054D  00F0               	movwf	??_lcd_busy
  2357  054E                     u977:
  2358  054E  0BF0               	decfsz	??_lcd_busy,f
  2359  054F  2D4E               	goto	u977
  2360  0550  0000               	nop
  2361  0551                     l1279:
  2362                           
  2363                           ;lcd.c: 35:  busy = RD7;
  2364  0551  3000               	movlw	0
  2365  0552  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0553  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0554  1B88               	btfsc	8,7	;volatile
  2368  0555  3001               	movlw	1
  2369  0556  00F1               	movwf	lcd_busy@busy
  2370  0557                     l1281:
  2371                           
  2372                           ;lcd.c: 37:  RD3 = 0;
  2373  0557  1188               	bcf	8,3	;volatile
  2374  0558                     l1283:
  2375                           
  2376                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2377  0558  3006               	movlw	6
  2378  0559  00F0               	movwf	??_lcd_busy
  2379  055A                     u987:
  2380  055A  0BF0               	decfsz	??_lcd_busy,f
  2381  055B  2D5A               	goto	u987
  2382  055C  0000               	nop
  2383  055D                     l1285:
  2384                           
  2385                           ;lcd.c: 39:  RD3 = 1;
  2386  055D  1283               	bcf	3,5	;RP0=0, select bank0
  2387  055E  1303               	bcf	3,6	;RP1=0, select bank0
  2388  055F  1588               	bsf	8,3	;volatile
  2389  0560                     l1287:
  2390                           
  2391                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2392  0560  3006               	movlw	6
  2393  0561  00F0               	movwf	??_lcd_busy
  2394  0562                     u997:
  2395  0562  0BF0               	decfsz	??_lcd_busy,f
  2396  0563  2D62               	goto	u997
  2397  0564  0000               	nop
  2398  0565                     l1289:
  2399                           
  2400                           ;lcd.c: 41:  RD3 = 0;
  2401  0565  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0566  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0567  1188               	bcf	8,3	;volatile
  2404  0568                     l1291:
  2405                           
  2406                           ;lcd.c: 43:  return busy;
  2407  0568  0871               	movf	lcd_busy@busy,w
  2408  0569                     l179:
  2409  0569  0008               	return
  2410  056A                     __end_of_lcd_busy:
  2411                           
  2412                           	psect	text14
  2413  04CE                     __ptext14:	
  2414 ;; *************** function _configPwm_2 *****************
  2415 ;; Defined at:
  2416 ;;		line 108 in file "bai_2.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0
  2433 ;;      Totals:         0       0       0       0       0
  2434 ;;Total ram usage:        0 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _configPwm_2
  2445  04CE                     _configPwm_2:
  2446  04CE                     l1087:	
  2447                           ;incstack = 0
  2448                           ; Regs used in _configPwm_2: [wreg+status,2]
  2449                           
  2450                           
  2451                           ;bai_2.c: 109:     TRISC2 = 0;
  2452  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  2453  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  2454  04D0  1107               	bcf	7,2	;volatile
  2455                           
  2456                           ;bai_2.c: 110:     RC2 = 0;
  2457  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2458  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2459  04D3  1107               	bcf	7,2	;volatile
  2460                           
  2461                           ;bai_2.c: 111:     TRISC1 = 1;
  2462  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2463  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  2464  04D6  1487               	bsf	7,1	;volatile
  2465  04D7                     l1089:
  2466                           
  2467                           ;bai_2.c: 112:     TMR2 = 0;
  2468  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2469  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2470  04D9  0191               	clrf	17	;volatile
  2471  04DA                     l1091:
  2472                           
  2473                           ;bai_2.c: 113:     PR2 = 82;
  2474  04DA  3052               	movlw	82
  2475  04DB  1683               	bsf	3,5	;RP0=1, select bank1
  2476  04DC  1303               	bcf	3,6	;RP1=0, select bank1
  2477  04DD  0092               	movwf	18	;volatile
  2478  04DE                     l1093:
  2479                           
  2480                           ;bai_2.c: 114:     CCPR2L = 67;
  2481  04DE  3043               	movlw	67
  2482  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2483  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2484  04E1  009B               	movwf	27	;volatile
  2485  04E2                     l1095:
  2486                           
  2487                           ;bai_2.c: 115:     CCP2CON = 0x0C;
  2488  04E2  300C               	movlw	12
  2489  04E3  009D               	movwf	29	;volatile
  2490  04E4                     l1097:
  2491                           
  2492                           ;bai_2.c: 116:     CCP1CON = 0x00;
  2493  04E4  0197               	clrf	23	;volatile
  2494  04E5                     l1099:
  2495                           
  2496                           ;bai_2.c: 117:     DC2B1 = 1;
  2497  04E5  169D               	bsf	29,5	;volatile
  2498  04E6                     l1101:
  2499                           
  2500                           ;bai_2.c: 118:     DC2B0 = 0;
  2501  04E6  121D               	bcf	29,4	;volatile
  2502  04E7                     l1103:
  2503                           
  2504                           ;bai_2.c: 119:     TRISC1 = 0;
  2505  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  2506  04E8  1303               	bcf	3,6	;RP1=0, select bank1
  2507  04E9  1087               	bcf	7,1	;volatile
  2508  04EA                     l1105:
  2509                           
  2510                           ;bai_2.c: 120:     T2CON = 0x00;
  2511  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2512  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2513  04EC  0192               	clrf	18	;volatile
  2514  04ED                     l1107:
  2515                           
  2516                           ;bai_2.c: 121:     T2CKPS1 = 0;
  2517  04ED  1092               	bcf	18,1	;volatile
  2518  04EE                     l1109:
  2519                           
  2520                           ;bai_2.c: 122:     T2CKPS0 = 1;
  2521  04EE  1412               	bsf	18,0	;volatile
  2522  04EF                     l1111:
  2523                           
  2524                           ;bai_2.c: 123:     TMR2ON = 1;
  2525  04EF  1512               	bsf	18,2	;volatile
  2526  04F0                     l121:
  2527  04F0  0008               	return
  2528  04F1                     __end_of_configPwm_2:
  2529                           
  2530                           	psect	text15
  2531  046D                     __ptext15:	
  2532 ;; *************** function _configPwm_1 *****************
  2533 ;; Defined at:
  2534 ;;		line 90 in file "bai_2.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0
  2551 ;;      Totals:         0       0       0       0       0
  2552 ;;Total ram usage:        0 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           
  2562                           ;psect for function _configPwm_1
  2563  046D                     _configPwm_1:
  2564  046D                     l1061:	
  2565                           ;incstack = 0
  2566                           ; Regs used in _configPwm_1: [wreg+status,2]
  2567                           
  2568                           
  2569                           ;bai_2.c: 91:     TRISC2 = 1;
  2570  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2571  046E  1303               	bcf	3,6	;RP1=0, select bank1
  2572  046F  1507               	bsf	7,2	;volatile
  2573                           
  2574                           ;bai_2.c: 92:     TRISC1 = 0;
  2575  0470  1087               	bcf	7,1	;volatile
  2576                           
  2577                           ;bai_2.c: 93:     RC1 = 0;
  2578  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0473  1087               	bcf	7,1	;volatile
  2581  0474                     l1063:
  2582                           
  2583                           ;bai_2.c: 94:     TMR2 = 0;
  2584  0474  0191               	clrf	17	;volatile
  2585  0475                     l1065:
  2586                           
  2587                           ;bai_2.c: 95:     PR2 = 62;
  2588  0475  303E               	movlw	62
  2589  0476  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0477  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0478  0092               	movwf	18	;volatile
  2592  0479                     l1067:
  2593                           
  2594                           ;bai_2.c: 96:     CCPR1L = 19;
  2595  0479  3013               	movlw	19
  2596  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2597  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2598  047C  0095               	movwf	21	;volatile
  2599  047D                     l1069:
  2600                           
  2601                           ;bai_2.c: 97:     CCP1CON = 0x0C;
  2602  047D  300C               	movlw	12
  2603  047E  0097               	movwf	23	;volatile
  2604  047F                     l1071:
  2605                           
  2606                           ;bai_2.c: 98:     CCP2CON = 0x00;
  2607  047F  019D               	clrf	29	;volatile
  2608  0480                     l1073:
  2609                           
  2610                           ;bai_2.c: 99:     DC1B1 = 1;
  2611  0480  1697               	bsf	23,5	;volatile
  2612  0481                     l1075:
  2613                           
  2614                           ;bai_2.c: 100:     DC1B0 = 1;
  2615  0481  1617               	bsf	23,4	;volatile
  2616  0482                     l1077:
  2617                           
  2618                           ;bai_2.c: 101:     TRISC2 = 0;
  2619  0482  1683               	bsf	3,5	;RP0=1, select bank1
  2620  0483  1303               	bcf	3,6	;RP1=0, select bank1
  2621  0484  1107               	bcf	7,2	;volatile
  2622  0485                     l1079:
  2623                           
  2624                           ;bai_2.c: 102:     T2CON = 0x00;
  2625  0485  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0486  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0487  0192               	clrf	18	;volatile
  2628  0488                     l1081:
  2629                           
  2630                           ;bai_2.c: 103:     T2CKPS1 = 0;
  2631  0488  1092               	bcf	18,1	;volatile
  2632  0489                     l1083:
  2633                           
  2634                           ;bai_2.c: 104:     T2CKPS0 = 1;
  2635  0489  1412               	bsf	18,0	;volatile
  2636  048A                     l1085:
  2637                           
  2638                           ;bai_2.c: 105:     TMR2ON = 1;
  2639  048A  1512               	bsf	18,2	;volatile
  2640  048B                     l118:
  2641  048B  0008               	return
  2642  048C                     __end_of_configPwm_1:
  2643  007E                     btemp	set	126	;btemp
  2644  007E                     wtemp0	set	126
  2645                           
  2646                           	psect	config
  2647                           
  2648                           ;Config register CONFIG1 @ 0x2007
  2649                           ;	Oscillator Selection bits
  2650                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2651                           ;	Watchdog Timer Enable bit
  2652                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2653                           ;	Power-up Timer Enable bit
  2654                           ;	PWRTE = OFF, PWRT disabled
  2655                           ;	RE3/MCLR pin function select bit
  2656                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2657                           ;	Code Protection bit
  2658                           ;	CP = OFF, Program memory code protection is disabled
  2659                           ;	Data Code Protection bit
  2660                           ;	CPD = OFF, Data memory code protection is disabled
  2661                           ;	Brown Out Reset Selection bits
  2662                           ;	BOREN = OFF, BOR disabled
  2663                           ;	Internal External Switchover bit
  2664                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2665                           ;	Fail-Safe Clock Monitor Enabled bit
  2666                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2667                           ;	Low Voltage Programming Enable bit
  2668                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2669                           ;	In-Circuit Debugger Mode bit
  2670                           ;	DEBUG = 0x1, unprogrammed default
  2671  2007                     	org	8199
  2672  2007  20F2               	dw	8434
  2673                           
  2674                           ;Config register CONFIG2 @ 0x2008
  2675                           ;	Brown-out Reset Selection bit
  2676                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2677                           ;	Flash Program Memory Self Write Enable bits
  2678                           ;	WRT = OFF, Write protection off
  2679  2008                     	org	8200
  2680  2008  3FFF               	dw	16383

Data Sizes:
    Strings     26
    Constant    66
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[6]), STR_3(CODE[7]), STR_2(CODE[6]), STR_1(CODE[7]), 

    getLengthArr@character	PTR unsigned char  size(1) Largest target is 16
		 -> contentStop@bye(CODE[9]), contentStop@your_name(CODE[16]), 

    addCharSpecial@character	PTR unsigned char  size(1) Largest target is 41
		 -> contentStop@special_name_bye(CODE[41]), 


Critical Paths under _main in COMMON

    _contentStop->_lcd_putc
    _addCharSpecial->_lcd_put_byte
    _contentConfigPwm_2->_lcd_puts
    _contentConfigPwm_1->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_contentStop
    _contentConfigPwm_2->_lcd_puts
    _contentConfigPwm_1->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19278
                        _configPwm_1
                        _configPwm_2
                 _contentConfigPwm_1
                 _contentConfigPwm_2
                        _contentStop
                        _declarePort
 ---------------------------------------------------------------------------------
 (1) _declarePort                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _contentStop                                          4     4      0    7314
                                              0 BANK0      4     4      0
                     _addCharSpecial
                       _getLengthArr
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _getLengthArr                                         5     3      2     134
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _addCharSpecial                                       4     4      0    1235
                                              6 COMMON     4     4      0
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _contentConfigPwm_2                                   0     0      0    5982
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _contentConfigPwm_1                                   0     0      0    5982
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     2      0    3046
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2869
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1713
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _configPwm_2                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configPwm_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configPwm_1
   _configPwm_2
   _contentConfigPwm_1
     _lcd_gotoxy
       _lcd_busy
       _lcd_put_byte
         _lcd_put_nibble
     _lcd_init
       _lcd_busy
       _lcd_put_byte
       _lcd_put_nibble
     _lcd_puts
       _lcd_putc
         _lcd_busy
         _lcd_gotoxy
         _lcd_put_byte
   _contentConfigPwm_2
     _lcd_gotoxy
     _lcd_init
     _lcd_puts
   _contentStop
     _addCharSpecial
       _lcd_busy
       _lcd_put_byte
     _getLengthArr
     _lcd_gotoxy
     _lcd_init
     _lcd_putc
   _declarePort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 14 20:21:37 2021

                                  pc 0002                                   l94 046C  
                                 l87 062D               __end_of_lcd_put_nibble 05E7  
                                 fsr 0004                      ?_addCharSpecial 0070  
                      ?_lcd_put_byte 0073                                  l200 0539  
                                l112 04AC                                  l121 04F0  
                                l130 0649                                  l115 04CD  
                                l131 063A                                  l124 044F  
                                l109 0758                                  l141 0660  
                                l118 048B                                  l134 067A  
                                l143 0664                                  l135 065C  
                                l224 0513                                  l136 064D  
                                l242 07FB                                  l218 06D9  
                                l190 057A                                  l192 05A2  
                                l179 0569                                  l187 05E6  
                                _RB0 0030                                  _RB1 0031  
                                _RB2 0032                                  _RC1 0039  
                                _RC2 003A                                  _RD1 0041  
                                _RE0 0048                                  _RD2 0042  
                                _RD3 0043                                  _RD4 0044  
                                _RD5 0045                                  _RD6 0046  
                                _RD7 0047                                  u500 05B5  
                                u501 05B1                                  _PR2 0092  
                                u520 05BF                                  u600 051A  
                                u521 05BB                                  u601 0519  
                                u514 05B8                                  u610 0539  
                                u611 0538                                  u540 05C9  
                                u700 07C1                                  u620 0692  
                                u541 05C5                                  u701 07C0  
                                u621 0691                                  u534 05C2  
                                u710 07D5                                  u630 06B0  
                                u711 07D4                                  u631 06AF  
                                u560 05D3                                  u720 07E7  
                                u640 06C5                                  u800 0651  
                                u561 05CF                                  u721 07E6  
                                u641 06C4                                  u801 0650  
                                u554 05CC                                  u730 07FB  
                                u650 05FE                                  u810 0660  
                                u731 07FA                                  u651 05FD  
                                u811 065F                                  u580 0576  
                                u740 0513                                  u660 061A  
                                u820 0664                                  u581 0575  
                                u741 0512                                  u661 0619  
                                u821 0663                                  u574 05D6  
                                u670 062D                                  u750 0720  
                                u830 066E                                  u671 062C  
                                u751 071F                                  u831 066A  
                                u680 0460                                  u760 0758  
                                u681 045F                                  u761 0757  
                                u690 07AD                                  u770 063A  
                                u595 0590                                  u691 07AC  
                                u907 0789                                  u755 071C  
                                u771 0639                                  u844 0671  
                                u780 063E                                  u917 0798  
                                u765 0754                                  u781 063D  
                                u790 064D                                  u927 057F  
                                u791 064C                                  u937 0587  
                                u947 05D8                                  u957 05E0  
                                u967 0546                                  u887 0766  
                                u977 054E                                  u897 077A  
                                u987 055A                                  u997 0562  
                                fsr0 0004                         ?_contentStop 0070  
                               l1101 04E6                                 l1111 04EF  
                               l1103 04E7                                 l1105 04EA  
                               l1121 0448                                 l1113 043F  
                               l1107 04ED                                 l1123 0449  
                               l1115 0443                                 l1061 046D  
                               l1109 04EE                                 l1301 0520  
                               l1125 044B                                 l1117 0446  
                               l1071 047F                                 l1063 0474  
                               l1303 0524                                 l1311 0688  
                               l1127 044C                                 l1119 0447  
                               l1081 0488                                 l1073 0480  
                               l1065 0475                                 l1241 05A4  
                               l1305 052F                                 l1321 06BB  
                               l1313 0693                                 l1401 06DA  
                               l1083 0489                                 l1075 0481  
                               l1067 0479                                 l1091 04DA  
                               l1251 05CC                                 l1243 05AA  
                               l1315 069C                                 l1323 06C6  
                               l1307 067F                                 l1331 05EA  
                               l1411 0701                                 l1403 06DE  
                               l1085 048A                                 l1077 0482  
                               l1069 047D                                 l1093 04DE  
                               l1253 05DB                                 l1245 05AE  
                               l1261 0576                                 l1317 06A6  
                               l1309 0680                                 l1341 0620  
                               l1333 05F4                                 l1421 0734  
                               l1413 070E                                 l1405 06E4  
                               l1079 0485                                 l1095 04E2  
                               l1087 04CE                                 l1255 05E3  
                               l1247 05B8                                 l1271 059B  
                               l1263 057D                                 l1319 06B1  
                               l1431 0498                                 l1335 05FF  
                               l1351 0468                                 l1343 0451  
                               l1423 0739                                 l1415 0716  
                               l1407 06E9                                 l1097 04E4  
                               l1089 04D7                                 l1281 0557  
                               l1273 053A                                 l1249 05C2  
                               l1265 0582                                 l1257 056B  
                               l1361 076E                                 l1433 049E  
                               l1337 0610                                 l1329 05E8  
                               l1345 0453                                 l1425 0746  
                               l1417 0720                                 l1409 06F5  
                               l1099 04E5                                 l1291 0568  
                               l1283 0558                                 l1275 0544  
                               l1267 058A                                 l1259 0571  
                               l1371 078E                                 l1363 076F  
                               l1355 0759                                 l1435 04AD  
                               l1339 061A                                 l1427 074E  
                               l1419 072C                                 l1285 055D  
                               l1277 0549                                 l1269 058D  
                               l1381 07C1                                 l1373 079D  
                               l1365 0770                                 l1357 0762  
                               l1517 06CE                                 l1429 048C  
                               l1437 04B9                                 l1349 0461  
                               l1461 0656                                 l1453 063E  
                               l1445 062E                                 l1287 0560  
                               l1279 0551                                 l1391 07F1  
                               l1383 07CB                                 l1375 07A3  
                               l1367 0776                                 l1359 076B  
                               l1295 0515                                 l1439 04BF  
                               l1455 0643                                 l1447 0633  
                               l1289 0565                                 l1385 07D5  
                               l1377 07AD                                 l1369 0785  
                               l1297 051A                                 l1393 04F4  
                               l1465 0674                                 l1449 0636  
                               l1387 07DD                                 l1379 07B7  
                               l1299 051F                                 l1395 04F5  
                               l1459 0651                                 l1389 07E7  
                               l1397 0501                                 l1399 0507  
                               STR_1 0052                                 STR_2 0059  
                               STR_3 004B                                 STR_4 005F  
                               _TMR2 0011                                 _WPUB 0095  
                               _main 062E                         lcd_busy@busy 0071  
                               btemp 007E                                 start 0000  
                    ?_lcd_put_nibble 0070                       ??_lcd_put_byte 0074  
                              _DC1B0 00BC                                _DC1B1 00BD  
                              _DC2B0 00EC                                _DC2B1 00ED  
                              ?_main 0070                getLengthArr@character 0072  
                              _ANSEL 0188                    contentStop@length 0020  
                              _T2CON 0012                                _nRBPU 040F  
               __size_of_declarePort 0011                                pclath 000A  
                              status 0003                                wtemp0 007E  
                    __initialization 07FC                 __end_of_getLengthArr 046D  
                       __end_of_main 067E                        lcd_gotoxy@col 0078  
                      lcd_gotoxy@row 0076                   lcd_put_nibble@temp 0072  
                             ??_main 007E           __end_of_contentConfigPwm_1 04AD  
         __end_of_contentConfigPwm_2 04CE                               _CCPR1L 0015  
                             _CCPR2L 001B                               _ANSELH 0189  
                             _TMR2ON 0092                               _TRISB0 0430  
                             _TRISB1 0431                               _TRISB2 0432  
                             _TRISC1 0439                               _TRISC2 043A  
                             _TRISD1 0441                               _TRISE0 0448  
                             _TRISD2 0442                               _TRISD3 0443  
                             _TRISD4 0444                               _TRISD5 0445  
                             _TRISD6 0446                               _TRISD7 0447  
                       contentStop@i 0022                     __end_of_lcd_busy 056A  
                   __end_of_lcd_init 07FC                     __end_of_lcd_putc 06DA  
               __size_of_configPwm_1 001F                 __size_of_configPwm_2 0023  
                   __end_of_lcd_puts 0514                        lcd_put_byte@b 0073  
               __size_of_contentStop 007F              __end_of__initialization 07FC  
               __end_of_lcd_put_byte 05A3                     ??_addCharSpecial 0076  
                     __pcstackCOMMON 0070                    lcd_gotoxy@address 0079  
              __size_of_getLengthArr 001D                     ??_lcd_put_nibble 0070  
                         __pmaintext 062E                              _CCP1CON 0017  
                            _CCP2CON 001D                              _T2CKPS0 0090  
                            _T2CKPS1 0091                           _lcd_gotoxy 0514  
                       _getLengthArr 0450                            ?_lcd_busy 0070  
                          ?_lcd_init 0070                            ?_lcd_putc 0070  
                          ?_lcd_puts 0070                           __stringtab 0003  
            addCharSpecial@character 0079                              __ptext1 043F  
                            __ptext2 06DA                              __ptext3 0450  
                            __ptext4 05E7                              __ptext5 04AD  
                            __ptext6 048C                              __ptext7 04F1  
                            __ptext8 067E                              __ptext9 0514  
                      ??_declarePort 0070  __end_ofcontentStop@special_name_bye 0032  
        contentStop@special_name_bye 0009                __size_of_lcd_put_byte 0039  
                         ??_lcd_busy 0070                           ??_lcd_init 0076  
                         ??_lcd_putc 007A                           ??_lcd_puts 007D  
               end_of_initialization 07FC                       lcd_put_byte@rs 0075  
                 _contentConfigPwm_1 048C                   _contentConfigPwm_2 04AD  
                ?_contentConfigPwm_1 0070                  ?_contentConfigPwm_2 0070  
                       _lcd_put_byte 056A                          ?_lcd_gotoxy 0076  
                __end_of_declarePort 0450                 ??_contentConfigPwm_1 007E  
               ??_contentConfigPwm_2 007E                        ??_configPwm_1 0070  
                      ??_configPwm_2 0070                        ??_contentStop 007D  
                start_initialization 07FC                  __size_of_lcd_gotoxy 0026  
                __end_of_configPwm_1 048C                  __end_of_configPwm_2 04F1  
       __end_ofcontentStop@your_name 0042                          _declarePort 043F  
                          ___latbits 0002                        __pcstackBANK0 0020  
                    addCharSpecial@i 0077                  __end_of_contentStop 0759  
                  __size_of_lcd_busy 0030                    __size_of_lcd_init 00A3  
                  __size_of_lcd_putc 005C                    __size_of_lcd_puts 0023  
                          __pstrings 0003              __size_of_addCharSpecial 0047  
                        _configPwm_1 046D                          _configPwm_2 04CE  
                        __stringbase 0008              __size_of_lcd_put_nibble 0044  
                     contentStop@bye 0042                        getLengthArr@i 0073  
                          lcd_putc@c 007C                            lcd_puts@s 0020  
                        _contentStop 06DA                         ??_lcd_gotoxy 0077  
               contentStop@your_name 0032                   __end_of_lcd_gotoxy 053A  
                 __end_of__stringtab 0009               __end_ofcontentStop@bye 004B  
                           __ptext10 0759                             __ptext11 056A  
                           __ptext12 05A3                             __ptext13 053A  
                           __ptext14 04CE                             __ptext15 046D  
                           _lcd_busy 053A                             _lcd_init 0759  
                           _lcd_putc 067E                             _lcd_puts 04F1  
        __size_of_contentConfigPwm_1 0021          __size_of_contentConfigPwm_2 0021  
                      __size_of_main 0050                       _addCharSpecial 05E7  
                       ?_declarePort 0070                      lcd_put_nibble@b 0071  
                      ?_getLengthArr 0070                            stringcode 0003  
             __end_of_addCharSpecial 062E                       _lcd_put_nibble 05A3  
                           stringdir 0003                             stringtab 0003  
                     ??_getLengthArr 0072                         ?_configPwm_1 0070  
                       ?_configPwm_2 0070  
