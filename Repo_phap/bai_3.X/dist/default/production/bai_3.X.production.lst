

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 01 03:38:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291                           
   292                           	psect	strings
   293  0003                     __pstrings:
   294  0003                     stringtab:
   295  0003                     __stringtab:
   296  0003                     stringcode:	
   297                           ;	String table - string pointers are 1 byte each
   298                           
   299  0003                     stringdir:
   300  0003  3000               	movlw	high stringdir
   301  0004  008A               	movwf	10
   302  0005  0804               	movf	4,w
   303  0006  0A84               	incf	4,f
   304  0007  0782               	addwf	2,f
   305  0008                     __stringbase:
   306  0008  3400               	retlw	0
   307  0009                     __end_of__stringtab:
   308  0009                     main@cgram_dat:
   309  0009  340B               	retlw	11
   310  000A  3414               	retlw	20
   311  000B  340C               	retlw	12
   312  000C  3412               	retlw	18
   313  000D  340C               	retlw	12
   314  000E  3414               	retlw	20
   315  000F  3418               	retlw	24
   316  0010  340E               	retlw	14
   317  0011  3401               	retlw	1
   318  0012  340A               	retlw	10
   319  0013  3414               	retlw	20
   320  0014  3400               	retlw	0
   321  0015  341C               	retlw	28
   322  0016  3414               	retlw	20
   323  0017  341E               	retlw	30
   324  0018  3400               	retlw	0
   325  0019  3402               	retlw	2
   326  001A  3404               	retlw	4
   327  001B  3408               	retlw	8
   328  001C  3400               	retlw	0
   329  001D  341C               	retlw	28
   330  001E  3414               	retlw	20
   331  001F  341E               	retlw	30
   332  0020  3400               	retlw	0
   333  0021  3400               	retlw	0
   334  0022  3408               	retlw	8
   335  0023  3404               	retlw	4
   336  0024  3400               	retlw	0
   337  0025  341C               	retlw	28
   338  0026  3414               	retlw	20
   339  0027  341E               	retlw	30
   340  0028  3400               	retlw	0
   341  0029  3408               	retlw	8
   342  002A  3414               	retlw	20
   343  002B  3400               	retlw	0
   344  002C  341C               	retlw	28
   345  002D  3414               	retlw	20
   346  002E  341E               	retlw	30
   347  002F  3408               	retlw	8
   348  0030  3400               	retlw	0
   349  0031  3400               	retlw	0
   350  0032  340C               	retlw	12
   351  0033  3404               	retlw	4
   352  0034  341C               	retlw	28
   353  0035  3414               	retlw	20
   354  0036  3414               	retlw	20
   355  0037  341C               	retlw	28
   356  0038  3400               	retlw	0
   357  0039  3401               	retlw	1
   358  003A  3402               	retlw	2
   359  003B  340C               	retlw	12
   360  003C  3404               	retlw	4
   361  003D  341C               	retlw	28
   362  003E  3414               	retlw	20
   363  003F  341C               	retlw	28
   364  0040  3400               	retlw	0
   365  0041  3410               	retlw	16
   366  0042  3408               	retlw	8
   367  0043  3400               	retlw	0
   368  0044  341C               	retlw	28
   369  0045  3414               	retlw	20
   370  0046  3414               	retlw	20
   371  0047  341C               	retlw	28
   372  0048  3400               	retlw	0
   373  0049  340E               	retlw	14
   374  004A  3409               	retlw	9
   375  004B  3409               	retlw	9
   376  004C  341D               	retlw	29
   377  004D  3409               	retlw	9
   378  004E  3409               	retlw	9
   379  004F  340E               	retlw	14
   380  0050  3400               	retlw	0
   381  0051  3401               	retlw	1
   382  0052  340A               	retlw	10
   383  0053  3414               	retlw	20
   384  0054  3400               	retlw	0
   385  0055  341C               	retlw	28
   386  0056  3414               	retlw	20
   387  0057  341E               	retlw	30
   388  0058  3400               	retlw	0
   389  0059  3499               	retlw	153
   390  005A                     __end_ofmain@cgram_dat:
   391  005A                     main@dat_line2:
   392  005A  344E               	retlw	78
   393  005B  3467               	retlw	103
   394  005C  3403               	retlw	3
   395  005D  3479               	retlw	121
   396  005E  3453               	retlw	83
   397  005F  3469               	retlw	105
   398  0060  346E               	retlw	110
   399  0061  3468               	retlw	104
   400  0062  343A               	retlw	58
   401  0063  3431               	retlw	49
   402  0064  3432               	retlw	50
   403  0065  342F               	retlw	47
   404  0066  3432               	retlw	50
   405  0067  3430               	retlw	48
   406  0068  3430               	retlw	48
   407  0069  3431               	retlw	49
   408  006A                     __end_ofmain@dat_line2:
   409  006A                     main@dat_line3:
   410  006A  344E               	retlw	78
   411  006B  3405               	retlw	5
   412  006C  3469               	retlw	105
   413  006D  3453               	retlw	83
   414  006E  343A               	retlw	58
   415  006F  344E               	retlw	78
   416  0070  3469               	retlw	105
   417  0071  346E               	retlw	110
   418  0072  3468               	retlw	104
   419  0073  3454               	retlw	84
   420  0074  3468               	retlw	104
   421  0075  3475               	retlw	117
   422  0076  3404               	retlw	4
   423  0077  346E               	retlw	110
   424  0078                     __end_ofmain@dat_line3:
   425  0078                     main@dat_line1:
   426  0078  344E               	retlw	78
   427  0079  3467               	retlw	103
   428  007A  3475               	retlw	117
   429  007B  3479               	retlw	121
   430  007C  3401               	retlw	1
   431  007D  346E               	retlw	110
   432  007E  3454               	retlw	84
   433  007F  3401               	retlw	1
   434  0080  346E               	retlw	110
   435  0081  3450               	retlw	80
   436  0082  3468               	retlw	104
   437  0083  3402               	retlw	2
   438  0084  3470               	retlw	112
   439  0085                     __end_ofmain@dat_line1:
   440  0085                     main@dat_line4:
   441  0085  344C               	retlw	76
   442  0086  3406               	retlw	6
   443  0087  3470               	retlw	112
   444  0088  343A               	retlw	58
   445  0089  3400               	retlw	0
   446  008A  3448               	retlw	72
   447  008B  3456               	retlw	86
   448  008C  3454               	retlw	84
   449  008D  3431               	retlw	49
   450  008E  3435               	retlw	53
   451  008F  3441               	retlw	65
   452  0090                     __end_ofmain@dat_line4:
   453  0090                     main@dat_line5:
   454  0090  3448               	retlw	72
   455  0091  344B               	retlw	75
   456  0092  3454               	retlw	84
   457  0093  3454               	retlw	84
   458  0094  343A               	retlw	58
   459  0095  3447               	retlw	71
   460  0096  3407               	retlw	7
   461  0097  3456               	retlw	86
   462  0098  3409               	retlw	9
   463  0099  3470               	retlw	112
   464  009A                     __end_ofmain@dat_line5:
   465  009A                     main@MSSV:
   466  009A  344D               	retlw	77
   467  009B  3453               	retlw	83
   468  009C  3453               	retlw	83
   469  009D  3456               	retlw	86
   470  009E  343A               	retlw	58
   471  009F  3431               	retlw	49
   472  00A0  3439               	retlw	57
   473  00A1  3434               	retlw	52
   474  00A2  3433               	retlw	51
   475  00A3  3436               	retlw	54
   476  00A4  3434               	retlw	52
   477  00A5  3438               	retlw	56
   478  00A6  3431               	retlw	49
   479  00A7  3400               	retlw	0
   480  00A8                     __end_ofmain@MSSV:
   481  0044                     _RD4	set	68
   482  0045                     _RD5	set	69
   483  0046                     _RD6	set	70
   484  0047                     _RD7	set	71
   485  0043                     _RD3	set	67
   486  0041                     _RD1	set	65
   487  0042                     _RD2	set	66
   488  0442                     _TRISD2	set	1090
   489  0441                     _TRISD1	set	1089
   490  0443                     _TRISD3	set	1091
   491  0447                     _TRISD7	set	1095
   492  0446                     _TRISD6	set	1094
   493  0445                     _TRISD5	set	1093
   494  0444                     _TRISD4	set	1092
   495                           
   496                           	psect	cinit
   497  07FC                     start_initialization:	
   498                           ; #config settings
   499                           
   500  07FC                     __initialization:
   501  07FC                     end_of_initialization:	
   502                           ;End of C runtime variable initialization code
   503                           
   504  07FC                     __end_of__initialization:
   505  07FC  0183               	clrf	3
   506  07FD  120A  118A  2E9C   	ljmp	_main	;jump to C main() function
   507                           
   508                           	psect	cstackCOMMON
   509  0070                     __pcstackCOMMON:
   510  0070                     ?_lcd_busy:
   511  0070                     ??_lcd_busy:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_lcd_put_nibble:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ??_lcd_put_nibble:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_lcd_putc:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_lcd_puts:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_lcd_init:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_lcd_ShiftLeft:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_lcd_ShiftRight:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_lcd_MoveRight:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_lcd_MoveLeft:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_main:	
   542                           ; 1 bytes @ 0x0
   543                           
   544                           
   545                           ; 1 bytes @ 0x0
   546  0070                     	ds	1
   547  0071                     lcd_busy@busy:
   548  0071                     lcd_put_nibble@b:	
   549                           ; 1 bytes @ 0x1
   550                           
   551                           
   552                           ; 1 bytes @ 0x1
   553  0071                     	ds	1
   554  0072                     lcd_put_nibble@temp:
   555                           
   556                           ; 1 bytes @ 0x2
   557  0072                     	ds	1
   558  0073                     ?_lcd_put_byte:
   559  0073                     lcd_put_byte@b:	
   560                           ; 1 bytes @ 0x3
   561                           
   562                           
   563                           ; 1 bytes @ 0x3
   564  0073                     	ds	1
   565  0074                     ??_lcd_put_byte:
   566                           
   567                           ; 1 bytes @ 0x4
   568  0074                     	ds	1
   569  0075                     lcd_put_byte@rs:
   570                           
   571                           ; 1 bytes @ 0x5
   572  0075                     	ds	1
   573  0076                     ?_lcd_gotoxy:
   574  0076                     ??_lcd_init:	
   575                           ; 1 bytes @ 0x6
   576                           
   577  0076                     ??_lcd_ShiftLeft:	
   578                           ; 1 bytes @ 0x6
   579                           
   580  0076                     ??_lcd_ShiftRight:	
   581                           ; 1 bytes @ 0x6
   582                           
   583  0076                     lcd_gotoxy@row:	
   584                           ; 1 bytes @ 0x6
   585                           
   586                           
   587                           ; 1 bytes @ 0x6
   588  0076                     	ds	1
   589  0077                     ??_lcd_gotoxy:
   590  0077                     ??_lcd_MoveRight:	
   591                           ; 1 bytes @ 0x7
   592                           
   593  0077                     ??_lcd_MoveLeft:	
   594                           ; 1 bytes @ 0x7
   595                           
   596                           
   597                           ; 1 bytes @ 0x7
   598  0077                     	ds	1
   599  0078                     lcd_gotoxy@col:
   600                           
   601                           ; 1 bytes @ 0x8
   602  0078                     	ds	1
   603  0079                     lcd_gotoxy@address:
   604  0079                     lcd_MoveRight@p:	
   605                           ; 1 bytes @ 0x9
   606                           
   607  0079                     lcd_MoveLeft@p:	
   608                           ; 1 bytes @ 0x9
   609                           
   610                           
   611                           ; 1 bytes @ 0x9
   612  0079                     	ds	1
   613  007A                     ??_lcd_putc:
   614  007A                     lcd_MoveRight@i:	
   615                           ; 1 bytes @ 0xA
   616                           
   617  007A                     lcd_MoveLeft@i:	
   618                           ; 1 bytes @ 0xA
   619                           
   620                           
   621                           ; 1 bytes @ 0xA
   622  007A                     	ds	2
   623  007C                     lcd_putc@c:
   624                           
   625                           ; 1 bytes @ 0xC
   626  007C                     	ds	1
   627  007D                     ??_lcd_puts:
   628                           
   629                           ; 1 bytes @ 0xD
   630  007D                     	ds	1
   631                           
   632                           	psect	cstackBANK0
   633  0020                     __pcstackBANK0:
   634  0020                     lcd_puts@s:
   635                           
   636                           ; 1 bytes @ 0x0
   637  0020                     	ds	1
   638  0021                     ??_main:
   639                           
   640                           ; 1 bytes @ 0x1
   641  0021                     	ds	3
   642  0024                     main@times:
   643                           
   644                           ; 2 bytes @ 0x4
   645  0024                     	ds	2
   646  0026                     main@i:
   647                           
   648                           ; 1 bytes @ 0x6
   649  0026                     	ds	1
   650                           
   651                           	psect	maintext
   652  069C                     __pmaintext:	
   653 ;;
   654 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   655 ;;
   656 ;; *************** function _main *****************
   657 ;; Defined at:
   658 ;;		line 24 in file "newmain.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  times           2    4[BANK0 ] unsigned int 
   663 ;;  i               1    6[BANK0 ] unsigned char 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : B00/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       3       0       0       0
   675 ;;      Temps:          0       3       0       0       0
   676 ;;      Totals:         0       6       0       0       0
   677 ;;Total ram usage:        6 bytes
   678 ;; Hardware stack levels required when called: 5
   679 ;; This function calls:
   680 ;;		_lcd_MoveLeft
   681 ;;		_lcd_MoveRight
   682 ;;		_lcd_busy
   683 ;;		_lcd_gotoxy
   684 ;;		_lcd_init
   685 ;;		_lcd_put_byte
   686 ;;		_lcd_putc
   687 ;;		_lcd_puts
   688 ;; This function is called by:
   689 ;;		Startup code after reset
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           
   694                           ;psect for function _main
   695  069C                     _main:
   696  069C                     l1272:	
   697                           ;incstack = 0
   698                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   699                           
   700                           
   701                           ;newmain.c: 25:     const char dat_line1[] = {'N','g','u','y',0X01,'n','T',0X01,'n','P',
      +                           'h', 0X02, 'p'};;newmain.c: 26:     const char dat_line2[] = {'N','g',0X03,'y','S','i',
      +                          'n','h', ':', '1', '2', '/', '2', '0', '0', '1'};;newmain.c: 27:     const char dat_line
      +                          3[] = {'N',0x05,'i','S', ':', 'N', 'i', 'n', 'h', 'T', 'h', 'u', 0x04, 'n'};;newmain.c: 
      +                          28:     const char dat_line4[] = {'L', 0x06, 'p', ':', 0x00, 'H', 'V', 'T', '1', '5', 'A
      +                          '};;newmain.c: 29:     const char dat_line5[] = {'H','K','T','T', ':', 'G', 0x07, 'V', 0
      +                          x09, 'p'};
   702  069C  3003               	movlw	3
   703  069D  1283               	bcf	3,5	;RP0=0, select bank0
   704  069E  1303               	bcf	3,6	;RP1=0, select bank0
   705  069F  00A4               	movwf	main@times
   706  06A0  3000               	movlw	0
   707  06A1  00A5               	movwf	main@times+1
   708  06A2                     l1274:
   709                           
   710                           ;newmain.c: 32:     const char cgram_dat[] = {11, 20, 12, 18, 12, 20, 24, 14,;newmain.c:
      +                           43:     unsigned char i;;newmain.c: 44:     lcd_init();
   711  06A2  120A  118A  25F9  120A  118A  	fcall	_lcd_init
   712  06A7                     l1276:
   713                           
   714                           ;newmain.c: 46:     i = 0;
   715  06A7  1283               	bcf	3,5	;RP0=0, select bank0
   716  06A8  1303               	bcf	3,6	;RP1=0, select bank0
   717  06A9  01A6               	clrf	main@i
   718  06AA                     l1278:
   719                           
   720                           ;newmain.c: 47:     lcd_put_byte(0,0x40);
   721  06AA  3040               	movlw	64
   722  06AB  00A1               	movwf	??_main
   723  06AC  0821               	movf	??_main,w
   724  06AD  00F3               	movwf	lcd_put_byte@b
   725  06AE  3000               	movlw	0
   726  06AF  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
   727  06B4                     l1280:	
   728                           ;newmain.c: 48:     while(lcd_busy());
   729                           
   730  06B4  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
   731  06B9  3A00               	xorlw	0
   732  06BA  1D03               	skipz
   733  06BB  2EBD               	goto	u671
   734  06BC  2EBE               	goto	u670
   735  06BD                     u671:
   736  06BD  2EB4               	goto	l1280
   737  06BE                     u670:
   738  06BE  2EE0               	goto	l1288
   739  06BF                     l1282:
   740                           
   741                           ;newmain.c: 50:         lcd_put_byte(1,cgram_dat[i]);
   742  06BF  0826               	movf	main@i,w
   743  06C0  3E01               	addlw	low ((main@cgram_dat-__stringbase)| (0+32768))
   744  06C1  0084               	movwf	4
   745  06C2  120A  118A  2003  120A  118A  	fcall	stringdir
   746  06C7  00A1               	movwf	??_main
   747  06C8  0821               	movf	??_main,w
   748  06C9  00F3               	movwf	lcd_put_byte@b
   749  06CA  3001               	movlw	1
   750  06CB  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
   751  06D0                     l1284:	
   752                           ;newmain.c: 51:         while(lcd_busy());
   753                           
   754  06D0  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
   755  06D5  3A00               	xorlw	0
   756  06D6  1D03               	skipz
   757  06D7  2ED9               	goto	u681
   758  06D8  2EDA               	goto	u680
   759  06D9                     u681:
   760  06D9  2ED0               	goto	l1284
   761  06DA                     u680:
   762  06DA                     l1286:
   763                           
   764                           ;newmain.c: 52:         i++;
   765  06DA  3001               	movlw	1
   766  06DB  1283               	bcf	3,5	;RP0=0, select bank0
   767  06DC  1303               	bcf	3,6	;RP1=0, select bank0
   768  06DD  00A1               	movwf	??_main
   769  06DE  0821               	movf	??_main,w
   770  06DF  07A6               	addwf	main@i,f
   771  06E0                     l1288:
   772                           
   773                           ;newmain.c: 49:     while(cgram_dat[i] != 0x99){
   774  06E0  1283               	bcf	3,5	;RP0=0, select bank0
   775  06E1  1303               	bcf	3,6	;RP1=0, select bank0
   776  06E2  0826               	movf	main@i,w
   777  06E3  3E01               	addlw	low ((main@cgram_dat-__stringbase)| (0+32768))
   778  06E4  0084               	movwf	4
   779  06E5  120A  118A  2003  120A  118A  	fcall	stringdir
   780  06EA  3A99               	xorlw	153
   781  06EB  1D03               	skipz
   782  06EC  2EEE               	goto	u691
   783  06ED  2EEF               	goto	u690
   784  06EE                     u691:
   785  06EE  2EBF               	goto	l1282
   786  06EF                     u690:
   787  06EF  2F43               	goto	l1314
   788  06F0                     l1290:
   789                           
   790                           ;newmain.c: 55:         lcd_putc('\f');
   791  06F0  300C               	movlw	12
   792  06F1  120A  118A  259D  120A  118A  	fcall	_lcd_putc
   793  06F6                     l1292:
   794                           
   795                           ;newmain.c: 56:         _delay((unsigned long)((500)*(4000000/4000.0)));
   796  06F6  3003               	movlw	3
   797  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   798  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   799  06F9  00A3               	movwf	??_main+2
   800  06FA  308A               	movlw	138
   801  06FB  00A2               	movwf	??_main+1
   802  06FC  3055               	movlw	85
   803  06FD  00A1               	movwf	??_main
   804  06FE                     u767:
   805  06FE  0BA1               	decfsz	??_main,f
   806  06FF  2EFE               	goto	u767
   807  0700  0BA2               	decfsz	??_main+1,f
   808  0701  2EFE               	goto	u767
   809  0702  0BA3               	decfsz	??_main+2,f
   810  0703  2EFE               	goto	u767
   811  0704                     l1294:
   812                           
   813                           ;newmain.c: 57:         lcd_gotoxy(0,0);
   814  0704  01F6               	clrf	lcd_gotoxy@row
   815  0705  3000               	movlw	0
   816  0706  120A  118A  24CA  120A  118A  	fcall	_lcd_gotoxy
   817  070B                     l1296:
   818                           
   819                           ;newmain.c: 58:         for(i = 0; i <= 12; i++) {
   820  070B  1283               	bcf	3,5	;RP0=0, select bank0
   821  070C  1303               	bcf	3,6	;RP1=0, select bank0
   822  070D  01A6               	clrf	main@i
   823  070E                     l1302:
   824                           
   825                           ;newmain.c: 59:             lcd_putc(dat_line1[i]);
   826  070E  0826               	movf	main@i,w
   827  070F  3E70               	addlw	low ((main@dat_line1-__stringbase)| (0+32768))
   828  0710  0084               	movwf	4
   829  0711  120A  118A  2003  120A  118A  	fcall	stringdir
   830  0716  120A  118A  259D  120A  118A  	fcall	_lcd_putc
   831  071B                     l1304:
   832                           
   833                           ;newmain.c: 60:         }
   834  071B  3001               	movlw	1
   835  071C  1283               	bcf	3,5	;RP0=0, select bank0
   836  071D  1303               	bcf	3,6	;RP1=0, select bank0
   837  071E  00A1               	movwf	??_main
   838  071F  0821               	movf	??_main,w
   839  0720  07A6               	addwf	main@i,f
   840  0721                     l1306:
   841  0721  300D               	movlw	13
   842  0722  0226               	subwf	main@i,w
   843  0723  1C03               	skipc
   844  0724  2F26               	goto	u701
   845  0725  2F27               	goto	u700
   846  0726                     u701:
   847  0726  2F0E               	goto	l1302
   848  0727                     u700:
   849  0727                     l1308:
   850                           
   851                           ;newmain.c: 61:         lcd_gotoxy(0,1);
   852  0727  01F6               	clrf	lcd_gotoxy@row
   853  0728  0AF6               	incf	lcd_gotoxy@row,f
   854  0729  3000               	movlw	0
   855  072A  120A  118A  24CA  120A  118A  	fcall	_lcd_gotoxy
   856  072F                     l1310:
   857                           
   858                           ;newmain.c: 62:         lcd_puts(MSSV);
   859  072F  3092               	movlw	(low ((main@MSSV-__stringbase)| (0+32768)))& (0+255)
   860  0730  120A  118A  24A7  120A  118A  	fcall	_lcd_puts
   861  0735                     l1312:
   862                           
   863                           ;newmain.c: 63:         _delay((unsigned long)((500)*(4000000/4000.0)));
   864  0735  3003               	movlw	3
   865  0736  1283               	bcf	3,5	;RP0=0, select bank0
   866  0737  1303               	bcf	3,6	;RP1=0, select bank0
   867  0738  00A3               	movwf	??_main+2
   868  0739  308A               	movlw	138
   869  073A  00A2               	movwf	??_main+1
   870  073B  3055               	movlw	85
   871  073C  00A1               	movwf	??_main
   872  073D                     u777:
   873  073D  0BA1               	decfsz	??_main,f
   874  073E  2F3D               	goto	u777
   875  073F  0BA2               	decfsz	??_main+1,f
   876  0740  2F3D               	goto	u777
   877  0741  0BA3               	decfsz	??_main+2,f
   878  0742  2F3D               	goto	u777
   879  0743                     l1314:
   880                           
   881                           ;newmain.c: 54:     while(times--) {
   882  0743  3001               	movlw	1
   883  0744  1283               	bcf	3,5	;RP0=0, select bank0
   884  0745  1303               	bcf	3,6	;RP1=0, select bank0
   885  0746  02A4               	subwf	main@times,f
   886  0747  3000               	movlw	0
   887  0748  1C03               	skipc
   888  0749  03A5               	decf	main@times+1,f
   889  074A  02A5               	subwf	main@times+1,f
   890  074B  0A24               	incf	main@times,w
   891  074C  1D03               	skipz
   892  074D  2F52               	goto	u711
   893  074E  0A25               	incf	main@times+1,w
   894  074F  1D03               	btfss	3,2
   895  0750  2F52               	goto	u711
   896  0751  2F53               	goto	u710
   897  0752                     u711:
   898  0752  2EF0               	goto	l1290
   899  0753                     u710:
   900  0753                     l1316:
   901                           
   902                           ;newmain.c: 65:     lcd_putc('\f');
   903  0753  300C               	movlw	12
   904  0754  120A  118A  259D  120A  118A  	fcall	_lcd_putc
   905  0759                     l1318:
   906                           
   907                           ;newmain.c: 66:     lcd_gotoxy(0,0);
   908  0759  01F6               	clrf	lcd_gotoxy@row
   909  075A  3000               	movlw	0
   910  075B  120A  118A  24CA  120A  118A  	fcall	_lcd_gotoxy
   911  0760                     l1320:
   912                           
   913                           ;newmain.c: 68:     for(i = 0; i <= 15; i++) {
   914  0760  1283               	bcf	3,5	;RP0=0, select bank0
   915  0761  1303               	bcf	3,6	;RP1=0, select bank0
   916  0762  01A6               	clrf	main@i
   917  0763                     l1326:
   918                           
   919                           ;newmain.c: 69:         lcd_putc(dat_line2[i]);
   920  0763  0826               	movf	main@i,w
   921  0764  3E52               	addlw	low ((main@dat_line2-__stringbase)| (0+32768))
   922  0765  0084               	movwf	4
   923  0766  120A  118A  2003  120A  118A  	fcall	stringdir
   924  076B  120A  118A  259D  120A  118A  	fcall	_lcd_putc
   925  0770                     l1328:
   926                           
   927                           ;newmain.c: 70:     }
   928  0770  3001               	movlw	1
   929  0771  1283               	bcf	3,5	;RP0=0, select bank0
   930  0772  1303               	bcf	3,6	;RP1=0, select bank0
   931  0773  00A1               	movwf	??_main
   932  0774  0821               	movf	??_main,w
   933  0775  07A6               	addwf	main@i,f
   934  0776                     l1330:
   935  0776  3010               	movlw	16
   936  0777  0226               	subwf	main@i,w
   937  0778  1C03               	skipc
   938  0779  2F7B               	goto	u721
   939  077A  2F7C               	goto	u720
   940  077B                     u721:
   941  077B  2F63               	goto	l1326
   942  077C                     u720:
   943  077C                     l1332:
   944                           
   945                           ;newmain.c: 71:     lcd_gotoxy(0,1);
   946  077C  01F6               	clrf	lcd_gotoxy@row
   947  077D  0AF6               	incf	lcd_gotoxy@row,f
   948  077E  3000               	movlw	0
   949  077F  120A  118A  24CA  120A  118A  	fcall	_lcd_gotoxy
   950  0784                     l1334:
   951                           
   952                           ;newmain.c: 72:     for(i = 0; i <= 13; i++) {
   953  0784  1283               	bcf	3,5	;RP0=0, select bank0
   954  0785  1303               	bcf	3,6	;RP1=0, select bank0
   955  0786  01A6               	clrf	main@i
   956  0787                     l1340:
   957                           
   958                           ;newmain.c: 73:         lcd_putc(dat_line3[i]);
   959  0787  0826               	movf	main@i,w
   960  0788  3E62               	addlw	low ((main@dat_line3-__stringbase)| (0+32768))
   961  0789  0084               	movwf	4
   962  078A  120A  118A  2003  120A  118A  	fcall	stringdir
   963  078F  120A  118A  259D  120A  118A  	fcall	_lcd_putc
   964  0794                     l1342:
   965                           
   966                           ;newmain.c: 74:     }
   967  0794  3001               	movlw	1
   968  0795  1283               	bcf	3,5	;RP0=0, select bank0
   969  0796  1303               	bcf	3,6	;RP1=0, select bank0
   970  0797  00A1               	movwf	??_main
   971  0798  0821               	movf	??_main,w
   972  0799  07A6               	addwf	main@i,f
   973  079A                     l1344:
   974  079A  300E               	movlw	14
   975  079B  0226               	subwf	main@i,w
   976  079C  1C03               	skipc
   977  079D  2F9F               	goto	u731
   978  079E  2FA0               	goto	u730
   979  079F                     u731:
   980  079F  2F87               	goto	l1340
   981  07A0                     u730:
   982  07A0                     l1346:
   983                           
   984                           ;newmain.c: 75:     lcd_MoveRight(16);
   985  07A0  3010               	movlw	16
   986  07A1  120A  118A  248B  120A  118A  	fcall	_lcd_MoveRight
   987  07A6                     l1348:
   988                           
   989                           ;newmain.c: 76:     lcd_putc('\f');
   990  07A6  300C               	movlw	12
   991  07A7  120A  118A  259D  120A  118A  	fcall	_lcd_putc
   992  07AC                     l1350:
   993                           
   994                           ;newmain.c: 77:     lcd_gotoxy(0,0);
   995  07AC  01F6               	clrf	lcd_gotoxy@row
   996  07AD  3000               	movlw	0
   997  07AE  120A  118A  24CA  120A  118A  	fcall	_lcd_gotoxy
   998  07B3                     l1352:
   999                           
  1000                           ;newmain.c: 79:     for(i = 0; i <= 9; i++) {
  1001  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1002  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1003  07B5  01A6               	clrf	main@i
  1004  07B6                     l1358:
  1005                           
  1006                           ;newmain.c: 80:         lcd_putc(dat_line5[i]);
  1007  07B6  0826               	movf	main@i,w
  1008  07B7  3E88               	addlw	low ((main@dat_line5-__stringbase)| (0+32768))
  1009  07B8  0084               	movwf	4
  1010  07B9  120A  118A  2003  120A  118A  	fcall	stringdir
  1011  07BE  120A  118A  259D  120A  118A  	fcall	_lcd_putc
  1012  07C3                     l1360:
  1013                           
  1014                           ;newmain.c: 81:     }
  1015  07C3  3001               	movlw	1
  1016  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1017  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1018  07C6  00A1               	movwf	??_main
  1019  07C7  0821               	movf	??_main,w
  1020  07C8  07A6               	addwf	main@i,f
  1021  07C9                     l1362:
  1022  07C9  300A               	movlw	10
  1023  07CA  0226               	subwf	main@i,w
  1024  07CB  1C03               	skipc
  1025  07CC  2FCE               	goto	u741
  1026  07CD  2FCF               	goto	u740
  1027  07CE                     u741:
  1028  07CE  2FB6               	goto	l1358
  1029  07CF                     u740:
  1030  07CF                     l1364:
  1031                           
  1032                           ;newmain.c: 82:     lcd_gotoxy(0,1);
  1033  07CF  01F6               	clrf	lcd_gotoxy@row
  1034  07D0  0AF6               	incf	lcd_gotoxy@row,f
  1035  07D1  3000               	movlw	0
  1036  07D2  120A  118A  24CA  120A  118A  	fcall	_lcd_gotoxy
  1037  07D7                     l1366:
  1038                           
  1039                           ;newmain.c: 83:     for(i = 0; i <= 10; i++) {
  1040  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1041  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1042  07D9  01A6               	clrf	main@i
  1043  07DA                     l1372:
  1044                           
  1045                           ;newmain.c: 84:         lcd_putc(dat_line4[i]);
  1046  07DA  0826               	movf	main@i,w
  1047  07DB  3E7D               	addlw	low ((main@dat_line4-__stringbase)| (0+32768))
  1048  07DC  0084               	movwf	4
  1049  07DD  120A  118A  2003  120A  118A  	fcall	stringdir
  1050  07E2  120A  118A  259D  120A  118A  	fcall	_lcd_putc
  1051  07E7                     l1374:
  1052                           
  1053                           ;newmain.c: 85:     }
  1054  07E7  3001               	movlw	1
  1055  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  1056  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  1057  07EA  00A1               	movwf	??_main
  1058  07EB  0821               	movf	??_main,w
  1059  07EC  07A6               	addwf	main@i,f
  1060  07ED                     l1376:
  1061  07ED  300B               	movlw	11
  1062  07EE  0226               	subwf	main@i,w
  1063  07EF  1C03               	skipc
  1064  07F0  2FF2               	goto	u751
  1065  07F1  2FF3               	goto	u750
  1066  07F2                     u751:
  1067  07F2  2FDA               	goto	l1372
  1068  07F3                     u750:
  1069  07F3                     l1378:
  1070                           
  1071                           ;newmain.c: 86:     lcd_MoveLeft(11);
  1072  07F3  300B               	movlw	11
  1073  07F4  120A  118A  246F  120A  118A  	fcall	_lcd_MoveLeft
  1074  07F9                     l182:
  1075  07F9  120A  118A  2800   	ljmp	start
  1076  07FC                     __end_of_main:
  1077                           
  1078                           	psect	text1
  1079  04A7                     __ptext1:	
  1080 ;; *************** function _lcd_puts *****************
  1081 ;; Defined at:
  1082 ;;		line 224 in file "lcd.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  s               1    wreg     PTR const unsigned char 
  1085 ;;		 -> main@MSSV(14), 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  1088 ;;		 -> main@MSSV(14), 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         0       0       0       0       0
  1099 ;;      Locals:         0       1       0       0       0
  1100 ;;      Temps:          1       0       0       0       0
  1101 ;;      Totals:         1       1       0       0       0
  1102 ;;Total ram usage:        2 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 4
  1105 ;; This function calls:
  1106 ;;		_lcd_putc
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _lcd_puts
  1114  04A7                     _lcd_puts:
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1118                           ;lcd_puts@s stored from wreg
  1119  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  1120  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  1121  04A9  00A0               	movwf	lcd_puts@s
  1122  04AA                     l1196:
  1123                           
  1124                           ;lcd.c: 224: void lcd_puts(const char* s);lcd.c: 225: {;lcd.c: 229:  while(*s)
  1125  04AA  2CBD               	goto	l1202
  1126  04AB                     l1198:
  1127                           
  1128                           ;lcd.c: 230:   {;lcd.c: 231:   lcd_putc(*s++);
  1129  04AB  0820               	movf	lcd_puts@s,w
  1130  04AC  0084               	movwf	4
  1131  04AD  120A  118A  2003  120A  118A  	fcall	stringdir
  1132  04B2  120A  118A  259D  120A  118A  	fcall	_lcd_putc
  1133  04B7                     l1200:
  1134  04B7  3001               	movlw	1
  1135  04B8  00FD               	movwf	??_lcd_puts
  1136  04B9  087D               	movf	??_lcd_puts,w
  1137  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1138  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1139  04BC  07A0               	addwf	lcd_puts@s,f
  1140  04BD                     l1202:
  1141                           
  1142                           ;lcd.c: 229:  while(*s)
  1143  04BD  0820               	movf	lcd_puts@s,w
  1144  04BE  0084               	movwf	4
  1145  04BF  120A  118A  2003  120A  118A  	fcall	stringdir
  1146  04C4  3A00               	xorlw	0
  1147  04C5  1D03               	skipz
  1148  04C6  2CC8               	goto	u581
  1149  04C7  2CC9               	goto	u580
  1150  04C8                     u581:
  1151  04C8  2CAB               	goto	l1198
  1152  04C9                     u580:
  1153  04C9                     l78:
  1154  04C9  0008               	return
  1155  04CA                     __end_of_lcd_puts:
  1156                           
  1157                           	psect	text2
  1158  059D                     __ptext2:	
  1159 ;; *************** function _lcd_putc *****************
  1160 ;; Defined at:
  1161 ;;		line 190 in file "lcd.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  c               1    wreg     unsigned char 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  c               1   12[COMMON] unsigned char 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         0       0       0       0       0
  1176 ;;      Locals:         1       0       0       0       0
  1177 ;;      Temps:          2       0       0       0       0
  1178 ;;      Totals:         3       0       0       0       0
  1179 ;;Total ram usage:        3 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; Hardware stack levels required when called: 3
  1182 ;; This function calls:
  1183 ;;		_lcd_busy
  1184 ;;		_lcd_gotoxy
  1185 ;;		_lcd_put_byte
  1186 ;; This function is called by:
  1187 ;;		_lcd_puts
  1188 ;;		_main
  1189 ;;		_lcd_String_Delay
  1190 ;;		_putch
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _lcd_putc
  1196  059D                     _lcd_putc:
  1197                           
  1198                           ;incstack = 0
  1199                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1200                           ;lcd_putc@c stored from wreg
  1201  059D  00FC               	movwf	lcd_putc@c
  1202  059E                     l1170:
  1203                           
  1204                           ;lcd.c: 190: void lcd_putc(char c);lcd.c: 191: {;lcd.c: 195:  switch(c)
  1205  059E  2DE5               	goto	l1186
  1206  059F                     l1172:
  1207                           
  1208                           ;lcd.c: 198:    lcd_put_byte(0,1);
  1209  059F  01F3               	clrf	lcd_put_byte@b
  1210  05A0  0AF3               	incf	lcd_put_byte@b,f
  1211  05A1  3000               	movlw	0
  1212  05A2  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
  1213  05A7                     l1174:	
  1214                           ;lcd.c: 199:    while(lcd_busy());
  1215                           
  1216  05A7  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
  1217  05AC  3A00               	xorlw	0
  1218  05AD  1D03               	skipz
  1219  05AE  2DB0               	goto	u551
  1220  05AF  2DB1               	goto	u550
  1221  05B0                     u551:
  1222  05B0  2DA7               	goto	l1174
  1223  05B1                     u550:
  1224  05B1  2DF8               	goto	l72
  1225  05B2                     l1176:
  1226                           
  1227                           ;lcd.c: 202:    lcd_gotoxy(0,1);
  1228  05B2  01F6               	clrf	lcd_gotoxy@row
  1229  05B3  0AF6               	incf	lcd_gotoxy@row,f
  1230  05B4  3000               	movlw	0
  1231  05B5  120A  118A  24CA  120A  118A  	fcall	_lcd_gotoxy
  1232                           
  1233                           ;lcd.c: 203:    break;
  1234  05BA  2DF8               	goto	l72
  1235  05BB                     l1178:
  1236                           
  1237                           ;lcd.c: 205:    lcd_put_byte(0,0x10);
  1238  05BB  3010               	movlw	16
  1239  05BC  00FA               	movwf	??_lcd_putc
  1240  05BD  087A               	movf	??_lcd_putc,w
  1241  05BE  00F3               	movwf	lcd_put_byte@b
  1242  05BF  3000               	movlw	0
  1243  05C0  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
  1244  05C5                     l1180:	
  1245                           ;lcd.c: 206:    while(lcd_busy());
  1246                           
  1247  05C5  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
  1248  05CA  3A00               	xorlw	0
  1249  05CB  1D03               	skipz
  1250  05CC  2DCE               	goto	u561
  1251  05CD  2DCF               	goto	u560
  1252  05CE                     u561:
  1253  05CE  2DC5               	goto	l1180
  1254  05CF                     u560:
  1255  05CF  2DF8               	goto	l72
  1256  05D0                     l1182:
  1257                           
  1258                           ;lcd.c: 210:     {;lcd.c: 211:     lcd_put_byte(1,c);
  1259  05D0  087C               	movf	lcd_putc@c,w
  1260  05D1  00FA               	movwf	??_lcd_putc
  1261  05D2  087A               	movf	??_lcd_putc,w
  1262  05D3  00F3               	movwf	lcd_put_byte@b
  1263  05D4  3001               	movlw	1
  1264  05D5  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
  1265  05DA                     l1184:	
  1266                           ;lcd.c: 212:     while(lcd_busy());
  1267                           
  1268  05DA  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
  1269  05DF  3A00               	xorlw	0
  1270  05E0  1D03               	skipz
  1271  05E1  2DE3               	goto	u571
  1272  05E2  2DE4               	goto	u570
  1273  05E3                     u571:
  1274  05E3  2DDA               	goto	l1184
  1275  05E4                     u570:
  1276  05E4  2DF8               	goto	l72
  1277  05E5                     l1186:
  1278  05E5  087C               	movf	lcd_putc@c,w
  1279  05E6  00FA               	movwf	??_lcd_putc
  1280  05E7  01FB               	clrf	??_lcd_putc+1
  1281                           
  1282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1283                           ; Switch size 1, requested type "simple"
  1284                           ; Number of cases is 1, Range of values is 0 to 0
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte            4     3 (average)
  1288                           ; direct_byte           11     8 (fixed)
  1289                           ; jumptable            260     6 (fixed)
  1290                           ;	Chosen strategy is simple_byte
  1291  05E8  087B               	movf	??_lcd_putc+1,w
  1292  05E9  3A00               	xorlw	0	; case 0
  1293  05EA  1903               	skipnz
  1294  05EB  2DED               	goto	l1400
  1295  05EC  2DD0               	goto	l1182
  1296  05ED                     l1400:
  1297                           
  1298                           ; Switch size 1, requested type "simple"
  1299                           ; Number of cases is 3, Range of values is 8 to 12
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte           10     6 (average)
  1303                           ; direct_byte           26    11 (fixed)
  1304                           ; jumptable            263     9 (fixed)
  1305                           ;	Chosen strategy is simple_byte
  1306  05ED  087A               	movf	??_lcd_putc,w
  1307  05EE  3A08               	xorlw	8	; case 8
  1308  05EF  1903               	skipnz
  1309  05F0  2DBB               	goto	l1178
  1310  05F1  3A02               	xorlw	2	; case 10
  1311  05F2  1903               	skipnz
  1312  05F3  2DB2               	goto	l1176
  1313  05F4  3A06               	xorlw	6	; case 12
  1314  05F5  1903               	skipnz
  1315  05F6  2D9F               	goto	l1172
  1316  05F7  2DD0               	goto	l1182
  1317  05F8                     l72:
  1318  05F8  0008               	return
  1319  05F9                     __end_of_lcd_putc:
  1320                           
  1321                           	psect	text3
  1322  04CA                     __ptext3:	
  1323 ;; *************** function _lcd_gotoxy *****************
  1324 ;; Defined at:
  1325 ;;		line 167 in file "lcd.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  col             1    wreg     unsigned char 
  1328 ;;  row             1    6[COMMON] unsigned char 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  col             1    8[COMMON] unsigned char 
  1331 ;;  address         1    9[COMMON] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         1       0       0       0       0
  1342 ;;      Locals:         2       0       0       0       0
  1343 ;;      Temps:          1       0       0       0       0
  1344 ;;      Totals:         4       0       0       0       0
  1345 ;;Total ram usage:        4 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 2
  1348 ;; This function calls:
  1349 ;;		_lcd_busy
  1350 ;;		_lcd_put_byte
  1351 ;; This function is called by:
  1352 ;;		_lcd_putc
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _lcd_gotoxy
  1359  04CA                     _lcd_gotoxy:
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  1363                           ;lcd_gotoxy@col stored from wreg
  1364  04CA  00F8               	movwf	lcd_gotoxy@col
  1365  04CB                     l1158:
  1366                           
  1367                           ;lcd.c: 167: void lcd_gotoxy(unsigned char col, unsigned char row);lcd.c: 168: {;lcd.c: 
      +                          170:  unsigned char address;;lcd.c: 173:  if(row!=0)
  1368  04CB  0876               	movf	lcd_gotoxy@row,w
  1369  04CC  1903               	btfsc	3,2
  1370  04CD  2CCF               	goto	u531
  1371  04CE  2CD0               	goto	u530
  1372  04CF                     u531:
  1373  04CF  2CD5               	goto	l1162
  1374  04D0                     u530:
  1375  04D0                     l1160:
  1376                           
  1377                           ;lcd.c: 174:   address=0x40;
  1378  04D0  3040               	movlw	64
  1379  04D1  00F7               	movwf	??_lcd_gotoxy
  1380  04D2  0877               	movf	??_lcd_gotoxy,w
  1381  04D3  00F9               	movwf	lcd_gotoxy@address
  1382  04D4  2CD6               	goto	l1164
  1383  04D5                     l1162:
  1384                           
  1385                           ;lcd.c: 176:   address=0;
  1386  04D5  01F9               	clrf	lcd_gotoxy@address
  1387  04D6                     l1164:
  1388                           
  1389                           ;lcd.c: 178:  address += col;
  1390  04D6  0878               	movf	lcd_gotoxy@col,w
  1391  04D7  00F7               	movwf	??_lcd_gotoxy
  1392  04D8  0877               	movf	??_lcd_gotoxy,w
  1393  04D9  07F9               	addwf	lcd_gotoxy@address,f
  1394  04DA                     l1166:
  1395                           
  1396                           ;lcd.c: 180:  lcd_put_byte(0,0x80|address);
  1397  04DA  0879               	movf	lcd_gotoxy@address,w
  1398  04DB  3880               	iorlw	128
  1399  04DC  00F7               	movwf	??_lcd_gotoxy
  1400  04DD  0877               	movf	??_lcd_gotoxy,w
  1401  04DE  00F3               	movwf	lcd_put_byte@b
  1402  04DF  3000               	movlw	0
  1403  04E0  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
  1404  04E5                     l1168:	
  1405                           ;lcd.c: 181:  while(lcd_busy());
  1406                           
  1407  04E5  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
  1408  04EA  3A00               	xorlw	0
  1409  04EB  1D03               	skipz
  1410  04EC  2CEE               	goto	u541
  1411  04ED  2CEF               	goto	u540
  1412  04EE                     u541:
  1413  04EE  2CE5               	goto	l1168
  1414  04EF                     u540:
  1415  04EF                     l54:
  1416  04EF  0008               	return
  1417  04F0                     __end_of_lcd_gotoxy:
  1418                           
  1419                           	psect	text4
  1420  05F9                     __ptext4:	
  1421 ;; *************** function _lcd_init *****************
  1422 ;; Defined at:
  1423 ;;		line 241 in file "lcd.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  i               1    0        unsigned char 
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, status,2, status,0, pclath, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1437 ;;      Params:         0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0
  1439 ;;      Temps:          2       0       0       0       0
  1440 ;;      Totals:         2       0       0       0       0
  1441 ;;Total ram usage:        2 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 2
  1444 ;; This function calls:
  1445 ;;		_lcd_busy
  1446 ;;		_lcd_put_byte
  1447 ;;		_lcd_put_nibble
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           
  1454                           ;psect for function _lcd_init
  1455  05F9                     _lcd_init:
  1456  05F9                     l1204:	
  1457                           ;incstack = 0
  1458                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1459                           
  1460                           
  1461                           ;lcd.c: 244: unsigned char i;;lcd.c: 247:  TRISD3 = 0;
  1462  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  1463  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  1464  05FB  1188               	bcf	8,3	;volatile
  1465                           
  1466                           ;lcd.c: 248:  TRISD1 = 0;
  1467  05FC  1088               	bcf	8,1	;volatile
  1468                           
  1469                           ;lcd.c: 249:  TRISD2 = 0;
  1470  05FD  1108               	bcf	8,2	;volatile
  1471                           
  1472                           ;lcd.c: 250:  TRISD4 = 0;
  1473  05FE  1208               	bcf	8,4	;volatile
  1474                           
  1475                           ;lcd.c: 251:  TRISD5 = 0;
  1476  05FF  1288               	bcf	8,5	;volatile
  1477                           
  1478                           ;lcd.c: 252:  TRISD6 = 0;
  1479  0600  1308               	bcf	8,6	;volatile
  1480                           
  1481                           ;lcd.c: 253:  TRISD7 = 0;
  1482  0601  1388               	bcf	8,7	;volatile
  1483  0602                     l1206:
  1484                           
  1485                           ;lcd.c: 255:  _delay((unsigned long)((15)*(4000000/4000.0)));
  1486  0602  3014               	movlw	20
  1487  0603  00F7               	movwf	??_lcd_init+1
  1488  0604  3079               	movlw	121
  1489  0605  00F6               	movwf	??_lcd_init
  1490  0606                     u787:
  1491  0606  0BF6               	decfsz	??_lcd_init,f
  1492  0607  2E06               	goto	u787
  1493  0608  0BF7               	decfsz	??_lcd_init+1,f
  1494  0609  2E06               	goto	u787
  1495  060A  2E0B               	nop2
  1496  060B                     l1208:
  1497                           
  1498                           ;lcd.c: 257:  RD1 = 0;
  1499  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1500  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1501  060D  1088               	bcf	8,1	;volatile
  1502  060E                     l1210:
  1503                           
  1504                           ;lcd.c: 258:  RD2 = 0;
  1505  060E  1108               	bcf	8,2	;volatile
  1506  060F                     l1212:
  1507                           
  1508                           ;lcd.c: 259:  RD3 = 0;
  1509  060F  1188               	bcf	8,3	;volatile
  1510  0610                     l1214:
  1511                           
  1512                           ;lcd.c: 261:  lcd_put_nibble(3);
  1513  0610  3003               	movlw	3
  1514  0611  120A  118A  2559  120A  118A  	fcall	_lcd_put_nibble
  1515  0616                     l1216:
  1516                           
  1517                           ;lcd.c: 262:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1518  0616  300D               	movlw	13
  1519  0617  00F7               	movwf	??_lcd_init+1
  1520  0618  30FB               	movlw	251
  1521  0619  00F6               	movwf	??_lcd_init
  1522  061A                     u797:
  1523  061A  0BF6               	decfsz	??_lcd_init,f
  1524  061B  2E1A               	goto	u797
  1525  061C  0BF7               	decfsz	??_lcd_init+1,f
  1526  061D  2E1A               	goto	u797
  1527  061E  2E1F               	nop2
  1528                           
  1529                           ;lcd.c: 263:  lcd_put_nibble(3);
  1530  061F  3003               	movlw	3
  1531  0620  120A  118A  2559  120A  118A  	fcall	_lcd_put_nibble
  1532  0625                     l1218:
  1533                           
  1534                           ;lcd.c: 264:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1535  0625  300D               	movlw	13
  1536  0626  00F7               	movwf	??_lcd_init+1
  1537  0627  30FB               	movlw	251
  1538  0628  00F6               	movwf	??_lcd_init
  1539  0629                     u807:
  1540  0629  0BF6               	decfsz	??_lcd_init,f
  1541  062A  2E29               	goto	u807
  1542  062B  0BF7               	decfsz	??_lcd_init+1,f
  1543  062C  2E29               	goto	u807
  1544  062D  2E2E               	nop2
  1545  062E                     l1220:
  1546                           
  1547                           ;lcd.c: 265:  lcd_put_nibble(3);
  1548  062E  3003               	movlw	3
  1549  062F  120A  118A  2559  120A  118A  	fcall	_lcd_put_nibble
  1550                           
  1551                           ;lcd.c: 266:  _delay((unsigned long)((10)*(4000000/4000.0)));
  1552  0634  300D               	movlw	13
  1553  0635  00F7               	movwf	??_lcd_init+1
  1554  0636  30FB               	movlw	251
  1555  0637  00F6               	movwf	??_lcd_init
  1556  0638                     u817:
  1557  0638  0BF6               	decfsz	??_lcd_init,f
  1558  0639  2E38               	goto	u817
  1559  063A  0BF7               	decfsz	??_lcd_init+1,f
  1560  063B  2E38               	goto	u817
  1561  063C  2E3D               	nop2
  1562  063D                     l1222:
  1563                           
  1564                           ;lcd.c: 268:  lcd_put_nibble(2);
  1565  063D  3002               	movlw	2
  1566  063E  120A  118A  2559  120A  118A  	fcall	_lcd_put_nibble
  1567  0643                     l1224:	
  1568                           ;lcd.c: 269:  while(lcd_busy());
  1569                           
  1570  0643  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
  1571  0648  3A00               	xorlw	0
  1572  0649  1D03               	skipz
  1573  064A  2E4C               	goto	u591
  1574  064B  2E4D               	goto	u590
  1575  064C                     u591:
  1576  064C  2E43               	goto	l1224
  1577  064D                     u590:
  1578  064D                     l1226:
  1579                           
  1580                           ;lcd.c: 271:  lcd_put_byte(0,0b00101100 & 0b00111000);
  1581  064D  3028               	movlw	40
  1582  064E  00F6               	movwf	??_lcd_init
  1583  064F  0876               	movf	??_lcd_init,w
  1584  0650  00F3               	movwf	lcd_put_byte@b
  1585  0651  3000               	movlw	0
  1586  0652  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
  1587  0657                     l1228:	
  1588                           ;lcd.c: 272:  while(lcd_busy());
  1589                           
  1590  0657  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
  1591  065C  3A00               	xorlw	0
  1592  065D  1D03               	skipz
  1593  065E  2E60               	goto	u601
  1594  065F  2E61               	goto	u600
  1595  0660                     u601:
  1596  0660  2E57               	goto	l1228
  1597  0661                     u600:
  1598  0661                     l1230:
  1599                           
  1600                           ;lcd.c: 274:  lcd_put_byte(0,0b00001111 & 0b00001101 & 0b00001110);
  1601  0661  300C               	movlw	12
  1602  0662  00F6               	movwf	??_lcd_init
  1603  0663  0876               	movf	??_lcd_init,w
  1604  0664  00F3               	movwf	lcd_put_byte@b
  1605  0665  3000               	movlw	0
  1606  0666  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
  1607  066B                     l1232:	
  1608                           ;lcd.c: 275:  while(lcd_busy());
  1609                           
  1610  066B  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
  1611  0670  3A00               	xorlw	0
  1612  0671  1D03               	skipz
  1613  0672  2E74               	goto	u611
  1614  0673  2E75               	goto	u610
  1615  0674                     u611:
  1616  0674  2E6B               	goto	l1232
  1617  0675                     u610:
  1618  0675                     l1234:
  1619                           
  1620                           ;lcd.c: 277:  lcd_put_byte(0,0x01);
  1621  0675  01F3               	clrf	lcd_put_byte@b
  1622  0676  0AF3               	incf	lcd_put_byte@b,f
  1623  0677  3000               	movlw	0
  1624  0678  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
  1625  067D                     l1236:	
  1626                           ;lcd.c: 278:  while(lcd_busy());
  1627                           
  1628  067D  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
  1629  0682  3A00               	xorlw	0
  1630  0683  1D03               	skipz
  1631  0684  2E86               	goto	u621
  1632  0685  2E87               	goto	u620
  1633  0686                     u621:
  1634  0686  2E7D               	goto	l1236
  1635  0687                     u620:
  1636  0687                     l1238:
  1637                           
  1638                           ;lcd.c: 280:  lcd_put_byte(0,0b00000110);
  1639  0687  3006               	movlw	6
  1640  0688  00F6               	movwf	??_lcd_init
  1641  0689  0876               	movf	??_lcd_init,w
  1642  068A  00F3               	movwf	lcd_put_byte@b
  1643  068B  3000               	movlw	0
  1644  068C  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
  1645  0691                     l1240:	
  1646                           ;lcd.c: 281:  while(lcd_busy());
  1647                           
  1648  0691  120A  118A  24F0  120A  118A  	fcall	_lcd_busy
  1649  0696  3A00               	xorlw	0
  1650  0697  1D03               	skipz
  1651  0698  2E9A               	goto	u631
  1652  0699  2E9B               	goto	u630
  1653  069A                     u631:
  1654  069A  2E91               	goto	l1240
  1655  069B                     u630:
  1656  069B                     l96:
  1657  069B  0008               	return
  1658  069C                     __end_of_lcd_init:
  1659                           
  1660                           	psect	text5
  1661  04F0                     __ptext5:	
  1662 ;; *************** function _lcd_busy *****************
  1663 ;; Defined at:
  1664 ;;		line 18 in file "lcd.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  busy            1    1[COMMON] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      unsigned char 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         1       0       0       0       0
  1680 ;;      Temps:          1       0       0       0       0
  1681 ;;      Totals:         2       0       0       0       0
  1682 ;;Total ram usage:        2 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_lcd_gotoxy
  1688 ;;		_lcd_putc
  1689 ;;		_lcd_init
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           
  1695                           ;psect for function _lcd_busy
  1696  04F0                     _lcd_busy:
  1697  04F0                     l1120:	
  1698                           ;incstack = 0
  1699                           ; Regs used in _lcd_busy: [wreg+status,2]
  1700                           
  1701                           
  1702                           ;lcd.c: 21: unsigned char busy;;lcd.c: 24:  TRISD4 = 1;
  1703  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  1704  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  1705  04F2  1608               	bsf	8,4	;volatile
  1706                           
  1707                           ;lcd.c: 25:  TRISD5 = 1;
  1708  04F3  1688               	bsf	8,5	;volatile
  1709                           
  1710                           ;lcd.c: 26:  TRISD6 = 1;
  1711  04F4  1708               	bsf	8,6	;volatile
  1712                           
  1713                           ;lcd.c: 27:  TRISD7 = 1;
  1714  04F5  1788               	bsf	8,7	;volatile
  1715                           
  1716                           ;lcd.c: 29:  RD2 = 1;
  1717  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1718  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1719  04F8  1508               	bsf	8,2	;volatile
  1720                           
  1721                           ;lcd.c: 30:  RD1 = 0;
  1722  04F9  1088               	bcf	8,1	;volatile
  1723  04FA                     l1122:
  1724                           
  1725                           ;lcd.c: 31:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1726  04FA  3006               	movlw	6
  1727  04FB  00F0               	movwf	??_lcd_busy
  1728  04FC                     u827:
  1729  04FC  0BF0               	decfsz	??_lcd_busy,f
  1730  04FD  2CFC               	goto	u827
  1731  04FE  0000               	nop
  1732  04FF                     l1124:
  1733                           
  1734                           ;lcd.c: 32:  RD3 = 1;
  1735  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0500  1303               	bcf	3,6	;RP1=0, select bank0
  1737  0501  1588               	bsf	8,3	;volatile
  1738                           
  1739                           ;lcd.c: 33:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1740  0502  3006               	movlw	6
  1741  0503  00F0               	movwf	??_lcd_busy
  1742  0504                     u837:
  1743  0504  0BF0               	decfsz	??_lcd_busy,f
  1744  0505  2D04               	goto	u837
  1745  0506  0000               	nop
  1746  0507                     l1126:
  1747                           
  1748                           ;lcd.c: 35:  busy = RD7;
  1749  0507  3000               	movlw	0
  1750  0508  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0509  1303               	bcf	3,6	;RP1=0, select bank0
  1752  050A  1B88               	btfsc	8,7	;volatile
  1753  050B  3001               	movlw	1
  1754  050C  00F1               	movwf	lcd_busy@busy
  1755  050D                     l1128:
  1756                           
  1757                           ;lcd.c: 37:  RD3 = 0;
  1758  050D  1188               	bcf	8,3	;volatile
  1759  050E                     l1130:
  1760                           
  1761                           ;lcd.c: 38:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1762  050E  3006               	movlw	6
  1763  050F  00F0               	movwf	??_lcd_busy
  1764  0510                     u847:
  1765  0510  0BF0               	decfsz	??_lcd_busy,f
  1766  0511  2D10               	goto	u847
  1767  0512  0000               	nop
  1768  0513                     l1132:
  1769                           
  1770                           ;lcd.c: 39:  RD3 = 1;
  1771  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0514  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0515  1588               	bsf	8,3	;volatile
  1774  0516                     l1134:
  1775                           
  1776                           ;lcd.c: 40:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  1777  0516  3006               	movlw	6
  1778  0517  00F0               	movwf	??_lcd_busy
  1779  0518                     u857:
  1780  0518  0BF0               	decfsz	??_lcd_busy,f
  1781  0519  2D18               	goto	u857
  1782  051A  0000               	nop
  1783  051B                     l1136:
  1784                           
  1785                           ;lcd.c: 41:  RD3 = 0;
  1786  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1787  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1788  051D  1188               	bcf	8,3	;volatile
  1789  051E                     l1138:
  1790                           
  1791                           ;lcd.c: 43:  return busy;
  1792  051E  0871               	movf	lcd_busy@busy,w
  1793  051F                     l33:
  1794  051F  0008               	return
  1795  0520                     __end_of_lcd_busy:
  1796                           
  1797                           	psect	text6
  1798  048B                     __ptext6:	
  1799 ;; *************** function _lcd_MoveRight *****************
  1800 ;; Defined at:
  1801 ;;		line 318 in file "lcd.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  p               1    wreg     unsigned char 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  p               1    9[COMMON] unsigned char 
  1806 ;;  i               1   10[COMMON] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       0       0       0       0
  1817 ;;      Locals:         2       0       0       0       0
  1818 ;;      Temps:          2       0       0       0       0
  1819 ;;      Totals:         4       0       0       0       0
  1820 ;;Total ram usage:        4 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 3
  1823 ;; This function calls:
  1824 ;;		_lcd_ShiftRight
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function _lcd_MoveRight
  1832  048B                     _lcd_MoveRight:
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in _lcd_MoveRight: [wreg+status,2+status,0+pclath+cstack]
  1836                           ;lcd_MoveRight@p stored from wreg
  1837  048B  00F9               	movwf	lcd_MoveRight@p
  1838  048C                     l1242:
  1839                           
  1840                           ;lcd.c: 318: void lcd_MoveRight(unsigned char p);lcd.c: 319: {;lcd.c: 321: unsigned char
      +                           i;;lcd.c: 324:  for(i=0;i<p;i++)
  1841  048C  01FA               	clrf	lcd_MoveRight@i
  1842  048D  2CA0               	goto	l1250
  1843  048E                     l1244:
  1844                           
  1845                           ;lcd.c: 325:   {;lcd.c: 326:   lcd_ShiftRight();
  1846  048E  120A  118A  2464  120A  118A  	fcall	_lcd_ShiftRight
  1847  0493                     l1246:
  1848                           
  1849                           ;lcd.c: 327:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1850  0493  3082               	movlw	130
  1851  0494  00F8               	movwf	??_lcd_MoveRight+1
  1852  0495  30DD               	movlw	221
  1853  0496  00F7               	movwf	??_lcd_MoveRight
  1854  0497                     u867:
  1855  0497  0BF7               	decfsz	??_lcd_MoveRight,f
  1856  0498  2C97               	goto	u867
  1857  0499  0BF8               	decfsz	??_lcd_MoveRight+1,f
  1858  049A  2C97               	goto	u867
  1859  049B  2C9C               	nop2
  1860  049C                     l1248:
  1861                           
  1862                           ;lcd.c: 328:       }
  1863  049C  3001               	movlw	1
  1864  049D  00F7               	movwf	??_lcd_MoveRight
  1865  049E  0877               	movf	??_lcd_MoveRight,w
  1866  049F  07FA               	addwf	lcd_MoveRight@i,f
  1867  04A0                     l1250:
  1868  04A0  0879               	movf	lcd_MoveRight@p,w
  1869  04A1  027A               	subwf	lcd_MoveRight@i,w
  1870  04A2  1C03               	skipc
  1871  04A3  2CA5               	goto	u641
  1872  04A4  2CA6               	goto	u640
  1873  04A5                     u641:
  1874  04A5  2C8E               	goto	l1244
  1875  04A6                     u640:
  1876  04A6                     l108:
  1877  04A6  0008               	return
  1878  04A7                     __end_of_lcd_MoveRight:
  1879                           
  1880                           	psect	text7
  1881  0464                     __ptext7:	
  1882 ;; *************** function _lcd_ShiftRight *****************
  1883 ;; Defined at:
  1884 ;;		line 304 in file "lcd.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;		None
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1898 ;;      Params:         0       0       0       0       0
  1899 ;;      Locals:         0       0       0       0       0
  1900 ;;      Temps:          1       0       0       0       0
  1901 ;;      Totals:         1       0       0       0       0
  1902 ;;Total ram usage:        1 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; Hardware stack levels required when called: 2
  1905 ;; This function calls:
  1906 ;;		_lcd_put_byte
  1907 ;; This function is called by:
  1908 ;;		_lcd_MoveRight
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _lcd_ShiftRight
  1914  0464                     _lcd_ShiftRight:
  1915  0464                     l1194:	
  1916                           ;incstack = 0
  1917                           ; Regs used in _lcd_ShiftRight: [wreg+status,2+status,0+pclath+cstack]
  1918                           
  1919                           
  1920                           ;lcd.c: 309:      lcd_put_byte(0,0x1C);
  1921  0464  301C               	movlw	28
  1922  0465  00F6               	movwf	??_lcd_ShiftRight
  1923  0466  0876               	movf	??_lcd_ShiftRight,w
  1924  0467  00F3               	movwf	lcd_put_byte@b
  1925  0468  3000               	movlw	0
  1926  0469  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
  1927  046E                     l102:
  1928  046E  0008               	return
  1929  046F                     __end_of_lcd_ShiftRight:
  1930                           
  1931                           	psect	text8
  1932  046F                     __ptext8:	
  1933 ;; *************** function _lcd_MoveLeft *****************
  1934 ;; Defined at:
  1935 ;;		line 337 in file "lcd.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  p               1    wreg     unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  p               1    9[COMMON] unsigned char 
  1940 ;;  i               1   10[COMMON] unsigned char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0, pclath, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1950 ;;      Params:         0       0       0       0       0
  1951 ;;      Locals:         2       0       0       0       0
  1952 ;;      Temps:          2       0       0       0       0
  1953 ;;      Totals:         4       0       0       0       0
  1954 ;;Total ram usage:        4 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 3
  1957 ;; This function calls:
  1958 ;;		_lcd_ShiftLeft
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           
  1965                           ;psect for function _lcd_MoveLeft
  1966  046F                     _lcd_MoveLeft:
  1967                           
  1968                           ;incstack = 0
  1969                           ; Regs used in _lcd_MoveLeft: [wreg+status,2+status,0+pclath+cstack]
  1970                           ;lcd_MoveLeft@p stored from wreg
  1971  046F  00F9               	movwf	lcd_MoveLeft@p
  1972  0470                     l1252:
  1973                           
  1974                           ;lcd.c: 337: void lcd_MoveLeft(unsigned char p);lcd.c: 338: {;lcd.c: 340: unsigned char 
      +                          i;;lcd.c: 343:  for(i=0;i<p;i++)
  1975  0470  01FA               	clrf	lcd_MoveLeft@i
  1976  0471  2C84               	goto	l1260
  1977  0472                     l1254:
  1978                           
  1979                           ;lcd.c: 344:   {;lcd.c: 345:      lcd_ShiftLeft();
  1980  0472  120A  118A  2459  120A  118A  	fcall	_lcd_ShiftLeft
  1981  0477                     l1256:
  1982                           
  1983                           ;lcd.c: 346:         _delay((unsigned long)((100)*(4000000/4000.0)));
  1984  0477  3082               	movlw	130
  1985  0478  00F8               	movwf	??_lcd_MoveLeft+1
  1986  0479  30DD               	movlw	221
  1987  047A  00F7               	movwf	??_lcd_MoveLeft
  1988  047B                     u877:
  1989  047B  0BF7               	decfsz	??_lcd_MoveLeft,f
  1990  047C  2C7B               	goto	u877
  1991  047D  0BF8               	decfsz	??_lcd_MoveLeft+1,f
  1992  047E  2C7B               	goto	u877
  1993  047F  2C80               	nop2
  1994  0480                     l1258:
  1995                           
  1996                           ;lcd.c: 347:   }
  1997  0480  3001               	movlw	1
  1998  0481  00F7               	movwf	??_lcd_MoveLeft
  1999  0482  0877               	movf	??_lcd_MoveLeft,w
  2000  0483  07FA               	addwf	lcd_MoveLeft@i,f
  2001  0484                     l1260:
  2002  0484  0879               	movf	lcd_MoveLeft@p,w
  2003  0485  027A               	subwf	lcd_MoveLeft@i,w
  2004  0486  1C03               	skipc
  2005  0487  2C89               	goto	u651
  2006  0488  2C8A               	goto	u650
  2007  0489                     u651:
  2008  0489  2C72               	goto	l1254
  2009  048A                     u650:
  2010  048A                     l114:
  2011  048A  0008               	return
  2012  048B                     __end_of_lcd_MoveLeft:
  2013                           
  2014                           	psect	text9
  2015  0459                     __ptext9:	
  2016 ;; *************** function _lcd_ShiftLeft *****************
  2017 ;; Defined at:
  2018 ;;		line 290 in file "lcd.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;		None
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0, pclath, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2032 ;;      Params:         0       0       0       0       0
  2033 ;;      Locals:         0       0       0       0       0
  2034 ;;      Temps:          1       0       0       0       0
  2035 ;;      Totals:         1       0       0       0       0
  2036 ;;Total ram usage:        1 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 2
  2039 ;; This function calls:
  2040 ;;		_lcd_put_byte
  2041 ;; This function is called by:
  2042 ;;		_lcd_MoveLeft
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _lcd_ShiftLeft
  2048  0459                     _lcd_ShiftLeft:
  2049  0459                     l1192:	
  2050                           ;incstack = 0
  2051                           ; Regs used in _lcd_ShiftLeft: [wreg+status,2+status,0+pclath+cstack]
  2052                           
  2053                           
  2054                           ;lcd.c: 295:      lcd_put_byte(0,0x18);
  2055  0459  3018               	movlw	24
  2056  045A  00F6               	movwf	??_lcd_ShiftLeft
  2057  045B  0876               	movf	??_lcd_ShiftLeft,w
  2058  045C  00F3               	movwf	lcd_put_byte@b
  2059  045D  3000               	movlw	0
  2060  045E  120A  118A  2520  120A  118A  	fcall	_lcd_put_byte
  2061  0463                     l99:
  2062  0463  0008               	return
  2063  0464                     __end_of_lcd_ShiftLeft:
  2064                           
  2065                           	psect	text10
  2066  0520                     __ptext10:	
  2067 ;; *************** function _lcd_put_byte *****************
  2068 ;; Defined at:
  2069 ;;		line 134 in file "lcd.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  rs              1    wreg     unsigned char 
  2072 ;;  b               1    3[COMMON] unsigned char 
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;  rs              1    5[COMMON] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0, pclath, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2084 ;;      Params:         1       0       0       0       0
  2085 ;;      Locals:         1       0       0       0       0
  2086 ;;      Temps:          1       0       0       0       0
  2087 ;;      Totals:         3       0       0       0       0
  2088 ;;Total ram usage:        3 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 1
  2091 ;; This function calls:
  2092 ;;		_lcd_put_nibble
  2093 ;; This function is called by:
  2094 ;;		_lcd_gotoxy
  2095 ;;		_lcd_putc
  2096 ;;		_lcd_init
  2097 ;;		_lcd_ShiftLeft
  2098 ;;		_lcd_ShiftRight
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function _lcd_put_byte
  2105  0520                     _lcd_put_byte:
  2106                           
  2107                           ;incstack = 0
  2108                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0+pclath+cstack]
  2109                           ;lcd_put_byte@rs stored from wreg
  2110  0520  00F5               	movwf	lcd_put_byte@rs
  2111  0521                     l1142:
  2112                           
  2113                           ;lcd.c: 134: void lcd_put_byte(unsigned char rs, unsigned char b);lcd.c: 135: {;lcd.c: 1
      +                          39:  TRISD4 = 0;
  2114  0521  1683               	bsf	3,5	;RP0=1, select bank1
  2115  0522  1303               	bcf	3,6	;RP1=0, select bank1
  2116  0523  1208               	bcf	8,4	;volatile
  2117                           
  2118                           ;lcd.c: 140:  TRISD5 = 0;
  2119  0524  1288               	bcf	8,5	;volatile
  2120                           
  2121                           ;lcd.c: 141:  TRISD6 = 0;
  2122  0525  1308               	bcf	8,6	;volatile
  2123                           
  2124                           ;lcd.c: 142:  TRISD7 = 0;
  2125  0526  1388               	bcf	8,7	;volatile
  2126  0527                     l1144:
  2127                           
  2128                           ;lcd.c: 144:  if(rs)
  2129  0527  0875               	movf	lcd_put_byte@rs,w
  2130  0528  1903               	btfsc	3,2
  2131  0529  2D2B               	goto	u511
  2132  052A  2D2C               	goto	u510
  2133  052B                     u511:
  2134  052B  2D30               	goto	l44
  2135  052C                     u510:
  2136  052C                     l1146:
  2137                           
  2138                           ;lcd.c: 145:   RD1 = 1;
  2139  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2140  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2141  052E  1488               	bsf	8,1	;volatile
  2142  052F  2D33               	goto	l1148
  2143  0530                     l44:	
  2144                           ;lcd.c: 146:  else
  2145                           
  2146                           
  2147                           ;lcd.c: 147:   RD1 = 0;
  2148  0530  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0531  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0532  1088               	bcf	8,1	;volatile
  2151  0533                     l1148:
  2152                           
  2153                           ;lcd.c: 148:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2154  0533  3006               	movlw	6
  2155  0534  00F4               	movwf	??_lcd_put_byte
  2156  0535                     u887:
  2157  0535  0BF4               	decfsz	??_lcd_put_byte,f
  2158  0536  2D35               	goto	u887
  2159  0537  0000               	nop
  2160  0538                     l1150:
  2161                           
  2162                           ;lcd.c: 150:  RD2 = 0;
  2163  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2165  053A  1108               	bcf	8,2	;volatile
  2166                           
  2167                           ;lcd.c: 151:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2168  053B  3006               	movlw	6
  2169  053C  00F4               	movwf	??_lcd_put_byte
  2170  053D                     u897:
  2171  053D  0BF4               	decfsz	??_lcd_put_byte,f
  2172  053E  2D3D               	goto	u897
  2173  053F  0000               	nop
  2174  0540                     l1152:
  2175                           
  2176                           ;lcd.c: 153:  RD3 = 0;
  2177  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0542  1188               	bcf	8,3	;volatile
  2180  0543                     l1154:
  2181                           
  2182                           ;lcd.c: 155:  lcd_put_nibble(b >> 4);
  2183  0543  0873               	movf	lcd_put_byte@b,w
  2184  0544  00F4               	movwf	??_lcd_put_byte
  2185  0545  3004               	movlw	4
  2186  0546                     u525:
  2187  0546  1003               	clrc
  2188  0547  0CF4               	rrf	??_lcd_put_byte,f
  2189  0548  3EFF               	addlw	-1
  2190  0549  1D03               	skipz
  2191  054A  2D46               	goto	u525
  2192  054B  0874               	movf	??_lcd_put_byte,w
  2193  054C  120A  118A  2559  120A  118A  	fcall	_lcd_put_nibble
  2194  0551                     l1156:
  2195                           
  2196                           ;lcd.c: 157:  lcd_put_nibble(b & 0xf);
  2197  0551  0873               	movf	lcd_put_byte@b,w
  2198  0552  390F               	andlw	15
  2199  0553  120A  118A  2559  120A  118A  	fcall	_lcd_put_nibble
  2200  0558                     l46:
  2201  0558  0008               	return
  2202  0559                     __end_of_lcd_put_byte:
  2203                           
  2204                           	psect	text11
  2205  0559                     __ptext11:	
  2206 ;; *************** function _lcd_put_nibble *****************
  2207 ;; Defined at:
  2208 ;;		line 103 in file "lcd.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  b               1    wreg     unsigned char 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  b               1    1[COMMON] unsigned char 
  2213 ;;  temp            1    2[COMMON] struct _BYTE_VAL
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         0       0       0       0       0
  2224 ;;      Locals:         2       0       0       0       0
  2225 ;;      Temps:          1       0       0       0       0
  2226 ;;      Totals:         3       0       0       0       0
  2227 ;;Total ram usage:        3 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_lcd_put_byte
  2233 ;;		_lcd_init
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           
  2238                           ;psect for function _lcd_put_nibble
  2239  0559                     _lcd_put_nibble:
  2240                           
  2241                           ;incstack = 0
  2242                           ; Regs used in _lcd_put_nibble: [wreg]
  2243                           ;lcd_put_nibble@b stored from wreg
  2244  0559  00F1               	movwf	lcd_put_nibble@b
  2245  055A                     l1104:
  2246                           
  2247                           ;lcd.c: 103: void lcd_put_nibble(unsigned char b);lcd.c: 104: {;lcd.c: 106:  BYTE_VAL te
      +                          mp;;lcd.c: 109:  TRISD4 = 0;
  2248  055A  1683               	bsf	3,5	;RP0=1, select bank1
  2249  055B  1303               	bcf	3,6	;RP1=0, select bank1
  2250  055C  1208               	bcf	8,4	;volatile
  2251                           
  2252                           ;lcd.c: 110:  TRISD5 = 0;
  2253  055D  1288               	bcf	8,5	;volatile
  2254                           
  2255                           ;lcd.c: 111:  TRISD6 = 0;
  2256  055E  1308               	bcf	8,6	;volatile
  2257                           
  2258                           ;lcd.c: 112:  TRISD7 = 0;
  2259  055F  1388               	bcf	8,7	;volatile
  2260  0560                     l1106:
  2261                           
  2262                           ;lcd.c: 114:  temp.Val = b;
  2263  0560  0871               	movf	lcd_put_nibble@b,w
  2264  0561  00F0               	movwf	??_lcd_put_nibble
  2265  0562  0870               	movf	??_lcd_put_nibble,w
  2266  0563  00F2               	movwf	lcd_put_nibble@temp
  2267  0564                     l1108:
  2268                           
  2269                           ;lcd.c: 116:  RD4 = temp.bits.b0;
  2270  0564  1872               	btfsc	lcd_put_nibble@temp,0
  2271  0565  2D67               	goto	u431
  2272  0566  2D6B               	goto	u430
  2273  0567                     u431:
  2274  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2276  0569  1608               	bsf	8,4	;volatile
  2277  056A  2D6E               	goto	u444
  2278  056B                     u430:
  2279  056B  1283               	bcf	3,5	;RP0=0, select bank0
  2280  056C  1303               	bcf	3,6	;RP1=0, select bank0
  2281  056D  1208               	bcf	8,4	;volatile
  2282  056E                     u444:
  2283  056E                     l1110:
  2284                           
  2285                           ;lcd.c: 117:  RD5 = temp.bits.b1;
  2286  056E  18F2               	btfsc	lcd_put_nibble@temp,1
  2287  056F  2D71               	goto	u451
  2288  0570  2D75               	goto	u450
  2289  0571                     u451:
  2290  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2291  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2292  0573  1688               	bsf	8,5	;volatile
  2293  0574  2D78               	goto	u464
  2294  0575                     u450:
  2295  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2296  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2297  0577  1288               	bcf	8,5	;volatile
  2298  0578                     u464:
  2299  0578                     l1112:
  2300                           
  2301                           ;lcd.c: 118:  RD6 = temp.bits.b2;
  2302  0578  1972               	btfsc	lcd_put_nibble@temp,2
  2303  0579  2D7B               	goto	u471
  2304  057A  2D7F               	goto	u470
  2305  057B                     u471:
  2306  057B  1283               	bcf	3,5	;RP0=0, select bank0
  2307  057C  1303               	bcf	3,6	;RP1=0, select bank0
  2308  057D  1708               	bsf	8,6	;volatile
  2309  057E  2D82               	goto	u484
  2310  057F                     u470:
  2311  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0581  1308               	bcf	8,6	;volatile
  2314  0582                     u484:
  2315  0582                     l1114:
  2316                           
  2317                           ;lcd.c: 119:  RD7 = temp.bits.b3;
  2318  0582  19F2               	btfsc	lcd_put_nibble@temp,3
  2319  0583  2D85               	goto	u491
  2320  0584  2D89               	goto	u490
  2321  0585                     u491:
  2322  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2323  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2324  0587  1788               	bsf	8,7	;volatile
  2325  0588  2D8C               	goto	u504
  2326  0589                     u490:
  2327  0589  1283               	bcf	3,5	;RP0=0, select bank0
  2328  058A  1303               	bcf	3,6	;RP1=0, select bank0
  2329  058B  1388               	bcf	8,7	;volatile
  2330  058C                     u504:
  2331                           
  2332                           ;lcd.c: 121:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2333  058C  3006               	movlw	6
  2334  058D  00F0               	movwf	??_lcd_put_nibble
  2335  058E                     u907:
  2336  058E  0BF0               	decfsz	??_lcd_put_nibble,f
  2337  058F  2D8E               	goto	u907
  2338  0590  0000               	nop
  2339  0591                     l1116:
  2340                           
  2341                           ;lcd.c: 122:  RD3 = 1;
  2342  0591  1283               	bcf	3,5	;RP0=0, select bank0
  2343  0592  1303               	bcf	3,6	;RP1=0, select bank0
  2344  0593  1588               	bsf	8,3	;volatile
  2345                           
  2346                           ;lcd.c: 123:  _delay((unsigned long)((20)*(4000000/4000000.0)));
  2347  0594  3006               	movlw	6
  2348  0595  00F0               	movwf	??_lcd_put_nibble
  2349  0596                     u917:
  2350  0596  0BF0               	decfsz	??_lcd_put_nibble,f
  2351  0597  2D96               	goto	u917
  2352  0598  0000               	nop
  2353  0599                     l1118:
  2354                           
  2355                           ;lcd.c: 124:  RD3 = 0;
  2356  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2357  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2358  059B  1188               	bcf	8,3	;volatile
  2359  059C                     l41:
  2360  059C  0008               	return
  2361  059D                     __end_of_lcd_put_nibble:
  2362  007E                     btemp	set	126	;btemp
  2363  007E                     wtemp0	set	126
  2364                           
  2365                           	psect	config
  2366                           
  2367                           ;Config register CONFIG1 @ 0x2007
  2368                           ;	Oscillator Selection bits
  2369                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2370                           ;	Watchdog Timer Enable bit
  2371                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2372                           ;	Power-up Timer Enable bit
  2373                           ;	PWRTE = OFF, PWRT disabled
  2374                           ;	RE3/MCLR pin function select bit
  2375                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2376                           ;	Code Protection bit
  2377                           ;	CP = OFF, Program memory code protection is disabled
  2378                           ;	Data Code Protection bit
  2379                           ;	CPD = OFF, Data memory code protection is disabled
  2380                           ;	Brown Out Reset Selection bits
  2381                           ;	BOREN = OFF, BOR disabled
  2382                           ;	Internal External Switchover bit
  2383                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2384                           ;	Fail-Safe Clock Monitor Enabled bit
  2385                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2386                           ;	Low Voltage Programming Enable bit
  2387                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2388                           ;	In-Circuit Debugger Mode bit
  2389                           ;	DEBUG = 0x1, unprogrammed default
  2390  2007                     	org	8199
  2391  2007  20F2               	dw	8434
  2392                           
  2393                           ;Config register CONFIG2 @ 0x2008
  2394                           ;	Brown-out Reset Selection bit
  2395                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2396                           ;	Flash Program Memory Self Write Enable bits
  2397                           ;	WRT = OFF, Write protection off
  2398  2008                     	org	8200
  2399  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    159
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_puts@s	PTR const unsigned char  size(1) Largest target is 14
		 -> main@MSSV(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_lcd_puts
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_put_byte
    _lcd_init->_lcd_put_byte
    _lcd_MoveRight->_lcd_ShiftRight
    _lcd_ShiftRight->_lcd_put_byte
    _lcd_MoveLeft->_lcd_ShiftLeft
    _lcd_ShiftLeft->_lcd_put_byte
    _lcd_put_byte->_lcd_put_nibble

Critical Paths under _main in BANK0

    _main->_lcd_puts

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   12543
                                              1 BANK0      6     6      0
                       _lcd_MoveLeft
                      _lcd_MoveRight
                           _lcd_busy
                         _lcd_gotoxy
                           _lcd_init
                       _lcd_put_byte
                           _lcd_putc
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     2      0    2947
                                             13 COMMON     1     1      0
                                              0 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             3     3      0    2869
                                             10 COMMON     3     3      0
                           _lcd_busy
                         _lcd_gotoxy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           4     3      1    1713
                                              6 COMMON     4     3      1
                           _lcd_busy
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0    1223
                                              6 COMMON     2     2      0
                           _lcd_busy
                       _lcd_put_byte
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_MoveRight                                        4     4      0    1135
                                              7 COMMON     4     4      0
                     _lcd_ShiftRight
 ---------------------------------------------------------------------------------
 (2) _lcd_ShiftRight                                       1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_MoveLeft                                         4     4      0    1135
                                              7 COMMON     4     4      0
                      _lcd_ShiftLeft
 ---------------------------------------------------------------------------------
 (2) _lcd_ShiftLeft                                        1     1      0    1089
                                              6 COMMON     1     1      0
                       _lcd_put_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_put_byte                                         3     2      1    1089
                                              3 COMMON     3     2      1
                     _lcd_put_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_put_nibble                                       3     3      0     111
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_MoveLeft
     _lcd_ShiftLeft
       _lcd_put_byte
         _lcd_put_nibble
   _lcd_MoveRight
     _lcd_ShiftRight
       _lcd_put_byte
   _lcd_busy
   _lcd_gotoxy
     _lcd_busy
     _lcd_put_byte
   _lcd_init
     _lcd_busy
     _lcd_put_byte
     _lcd_put_nibble
   _lcd_put_byte
   _lcd_putc
     _lcd_busy
     _lcd_gotoxy
     _lcd_put_byte
   _lcd_puts
     _lcd_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 01 03:38:54 2021

        ??_lcd_MoveRight 0077          ??_lcd_ShiftLeft 0076                        pc 0002  
                     l41 059C                       l33 051F                       l44 0530  
                     l46 0558                       l54 04EF                       l72 05F8  
                     l78 04C9                       l96 069B                       l99 0463  
 __end_of_lcd_put_nibble 059D         ??_lcd_ShiftRight 0076                       fsr 0004  
          ?_lcd_put_byte 0073                      l102 046E                      l114 048A  
                    l108 04A6                      l182 07F9                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    u430 056B                      u510 052C                      u431 0567  
                    u511 052B                      u504 058C                      u600 0661  
                    u601 0660                      u450 0575                      u610 0675  
                    u530 04D0                      u451 0571                      u611 0674  
                    u531 04CF                      u444 056E                      u620 0687  
                    u540 04EF                      u700 0727                      u525 0546  
                    u621 0686                      u541 04EE                      u701 0726  
                    u470 057F                      u630 069B                      u550 05B1  
                    u710 0753                      u471 057B                      u631 069A  
                    u551 05B0                      u711 0752                      u464 0578  
                    u640 04A6                      u560 05CF                      u720 077C  
                    u641 04A5                      u561 05CE                      u721 077B  
                    u490 0589                      u650 048A                      u570 05E4  
                    u730 07A0                      u491 0585                      u651 0489  
                    u571 05E3                      u731 079F                      u484 0582  
                    u580 04C9                      u740 07CF                      u581 04C8  
                    u741 07CE                      u590 064D                      u750 07F3  
                    u670 06BE                      u591 064C                      u807 0629  
                    u751 07F2                      u671 06BD                      u680 06DA  
                    u817 0638                      u681 06D9                      u690 06EF  
                    u907 058E                      u827 04FC                      u691 06EE  
                    u917 0596                      u837 0504                      u847 0510  
                    u767 06FE                      u857 0518                      u777 073D  
                    u867 0497                      u787 0606                      u877 047B  
                    u797 061A                      u887 0535                      u897 053D  
                    fsr0 0004                     l1110 056E                     l1112 0578  
                   l1104 055A                     l1120 04F0                     l1200 04B7  
                   l1114 0582                     l1106 0560                     l1130 050E  
                   l1122 04FA                     l1210 060E                     l1202 04BD  
                   l1116 0591                     l1108 0564                     l1132 0513  
                   l1124 04FF                     l1220 062E                     l1212 060F  
                   l1204 05F9                     l1118 0599                     l1150 0538  
                   l1142 0521                     l1134 0516                     l1126 0507  
                   l1230 0661                     l1222 063D                     l1214 0610  
                   l1206 0602                     l1310 072F                     l1302 070E  
                   l1152 0540                     l1144 0527                     l1136 051B  
                   l1128 050D                     l1240 0691                     l1232 066B  
                   l1224 0643                     l1216 0616                     l1208 060B  
                   l1160 04D0                     l1400 05ED                     l1320 0760  
                   l1312 0735                     l1304 071B                     l1154 0543  
                   l1146 052C                     l1250 04A0                     l1242 048C  
                   l1138 051E                     l1234 0675                     l1226 064D  
                   l1218 0625                     l1162 04D5                     l1170 059E  
                   l1330 0776                     l1306 0721                     l1314 0743  
                   l1156 0551                     l1148 0533                     l1260 0484  
                   l1252 0470                     l1244 048E                     l1236 067D  
                   l1228 0657                     l1164 04D6                     l1180 05C5  
                   l1172 059F                     l1340 0787                     l1332 077C  
                   l1316 0753                     l1308 0727                     l1254 0472  
                   l1246 0493                     l1238 0687                     l1166 04DA  
                   l1158 04CB                     l1182 05D0                     l1174 05A7  
                   l1350 07AC                     l1342 0794                     l1334 0784  
                   l1326 0763                     l1318 0759                     l1192 0459  
                   l1256 0477                     l1248 049C                     l1168 04E5  
                   l1184 05DA                     l1176 05B2                     l1360 07C3  
                   l1352 07B3                     l1344 079A                     l1328 0770  
                   l1280 06B4                     l1272 069C                     l1258 0480  
                   l1194 0464                     l1178 05BB                     l1186 05E5  
                   l1362 07C9                     l1346 07A0                     l1290 06F0  
                   l1282 06BF                     l1274 06A2                     l1196 04AA  
                   l1372 07DA                     l1364 07CF                     l1348 07A6  
                   l1292 06F6                     l1284 06D0                     l1276 06A7  
                   l1198 04AB                     l1374 07E7                     l1366 07D7  
                   l1358 07B6                     l1294 0704                     l1286 06DA  
                   l1278 06AA                     l1376 07ED                     l1296 070B  
                   l1288 06E0                     l1378 07F3                     _main 069C  
           lcd_busy@busy 0071                     btemp 007E                     start 0000  
        ?_lcd_put_nibble 0070           ??_lcd_put_byte 0074                    ?_main 0070  
                  main@i 0026                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
          main@dat_line1 0078            main@dat_line2 005A            main@dat_line3 006A  
          main@dat_line4 0085            main@dat_line5 0090            lcd_gotoxy@col 0078  
          lcd_gotoxy@row 0076            main@cgram_dat 0009       lcd_put_nibble@temp 0072  
                 ??_main 0021     __end_of_lcd_MoveLeft 048B                   _TRISD1 0441  
                 _TRISD2 0442                   _TRISD3 0443                   _TRISD4 0444  
                 _TRISD5 0445                   _TRISD6 0446                   _TRISD7 0447  
       __end_of_lcd_busy 0520         __end_of_lcd_init 069C         __end_of_lcd_putc 05F9  
       __end_of_lcd_puts 04CA            lcd_put_byte@b 0073         __end_ofmain@MSSV 00A8  
__end_of__initialization 07FC     __end_of_lcd_put_byte 0559           __pcstackCOMMON 0070  
      lcd_gotoxy@address 0079         ??_lcd_put_nibble 0070               __pmaintext 069C  
  __end_of_lcd_MoveRight 04A7    __end_of_lcd_ShiftLeft 0464    __size_of_lcd_MoveLeft 001C  
             _lcd_gotoxy 04CA                ?_lcd_busy 0070                ?_lcd_init 0070  
              ?_lcd_putc 0070                ?_lcd_puts 0070               __stringtab 0003  
           _lcd_MoveLeft 046F                  __ptext1 04A7                  __ptext2 059D  
                __ptext3 04CA                  __ptext4 05F9                  __ptext5 04F0  
                __ptext6 048B                  __ptext7 0464                  __ptext8 046F  
                __ptext9 0459  __size_of_lcd_ShiftRight 000B    __size_of_lcd_put_byte 0039  
             ??_lcd_busy 0070               ??_lcd_init 0076               ??_lcd_putc 007A  
             ??_lcd_puts 007D     end_of_initialization 07FC           lcd_put_byte@rs 0075  
           _lcd_put_byte 0520              ?_lcd_gotoxy 0076      start_initialization 07FC  
    __size_of_lcd_gotoxy 0026                ___latbits 0002            __pcstackBANK0 0020  
         _lcd_ShiftRight 0464        __size_of_lcd_busy 0030        __size_of_lcd_init 00A3  
      __size_of_lcd_putc 005C        __size_of_lcd_puts 0023    __end_ofmain@dat_line1 0085  
  __end_ofmain@dat_line2 006A    __end_ofmain@dat_line3 0078    __end_ofmain@dat_line4 0090  
  __end_ofmain@dat_line5 009A    __end_ofmain@cgram_dat 005A                __pstrings 0003  
 __end_of_lcd_ShiftRight 046F   __size_of_lcd_MoveRight 001C   __size_of_lcd_ShiftLeft 000B  
            __stringbase 0008  __size_of_lcd_put_nibble 0044          ?_lcd_ShiftRight 0070  
              lcd_putc@c 007C                lcd_puts@s 0020                main@times 0024  
           ??_lcd_gotoxy 0077           lcd_MoveRight@i 007A           lcd_MoveRight@p 0079  
     __end_of_lcd_gotoxy 04F0            _lcd_MoveRight 048B            _lcd_ShiftLeft 0459  
     __end_of__stringtab 0009                 __ptext10 0520                 __ptext11 0559  
               _lcd_busy 04F0                 _lcd_init 05F9                 _lcd_putc 059D  
               _lcd_puts 04A7            __size_of_main 0160                 main@MSSV 009A  
         ?_lcd_MoveRight 0070           ?_lcd_ShiftLeft 0070          lcd_put_nibble@b 0071  
          lcd_MoveLeft@i 007A            lcd_MoveLeft@p 0079                stringcode 0003  
          ?_lcd_MoveLeft 0070           _lcd_put_nibble 0559                 stringdir 0003  
               stringtab 0003           ??_lcd_MoveLeft 0077  
